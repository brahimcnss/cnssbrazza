apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-24T17:19:08Z"
    generateName: admin-backend-684d8bc6c6-
    labels:
      app: admin-backend
      pod-template-hash: 684d8bc6c6
      type: backend
    name: admin-backend-684d8bc6c6-nbmwl
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: admin-backend-684d8bc6c6
      uid: 12e34870-c593-449c-828a-ba72504e1f2b
    resourceVersion: "730243"
    uid: 81ae992d-3845-41fd-aa50-ced2438e5261
  spec:
    containers:
    - env:
      - name: ORACLEHOSTADMIN
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-host-admin
            name: oracle-config-admin
      - name: ORACLEPORTADMIN
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-port-admin
            name: oracle-config-admin
      - name: ORACLEUSERADMIN
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-user-admin
            name: oracle-config-admin
      - name: ORACLEPASSWORDADMIN
        valueFrom:
          secretKeyRef:
            key: password
            name: oracle-instance-password-admin
      image: 192.168.2.225:5000/administration:0.0.1-SNAPSHOT
      imagePullPolicy: Always
      name: admin-backend
      ports:
      - containerPort: 1994
        name: api
        protocol: TCP
      resources:
        limits:
          cpu: "3"
          memory: 2Gi
        requests:
          cpu: 300m
          memory: 512Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l6h5g
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: regcred
    nodeName: worker1erpnode
    nodeSelector:
      kubernetes.io/hostname: worker1erpnode
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-l6h5g
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T17:19:10Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T17:19:09Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T17:19:10Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T17:19:10Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T17:19:09Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f22c4f9a25cec6698613eaa2cec40e17addf7dcbde0b9b1207abebc0f5d7c450
      image: 192.168.2.225:5000/administration:0.0.1-SNAPSHOT
      imageID: 192.168.2.225:5000/administration@sha256:e7c3efe778e4a9c8fd19af5fd0d9e1ef8bb9ab39326cba181f58eaf5fa55146f
      lastState: {}
      name: admin-backend
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-24T17:19:09Z"
    hostIP: 10.5.1.69
    hostIPs:
    - ip: 10.5.1.69
    phase: Running
    podIP: 10.244.1.70
    podIPs:
    - ip: 10.244.1.70
    qosClass: Burstable
    startTime: "2025-06-24T17:19:09Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-24T18:50:13Z"
    generateName: admin-front-559f78795b-
    labels:
      app: admin-front
      pod-template-hash: 559f78795b
      type: front
    name: admin-front-559f78795b-fhrlz
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: admin-front-559f78795b
      uid: 375a46c3-2453-4375-a505-41893e081391
    resourceVersion: "738913"
    uid: ac32df41-c3e8-4034-ba16-ab2df45e6624
  spec:
    containers:
    - image: 192.168.2.225:5000/frontadmin:2
      imagePullPolicy: Always
      name: admin-front
      ports:
      - containerPort: 80
        name: api
        protocol: TCP
      resources:
        limits:
          cpu: "5"
          memory: 3Gi
        requests:
          cpu: 400m
          memory: 700Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6hr55
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: regcred
    nodeName: worker2erpnode
    nodeSelector:
      kubernetes.io/hostname: worker2erpnode
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-6hr55
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T18:50:14Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T18:50:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T18:50:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T18:50:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T18:50:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ec4bbcb08bcfd3bb075ffbf776113a15faf3c99e17d6ca030f4b26325f9e3db7
      image: 192.168.2.225:5000/frontadmin:2
      imageID: 192.168.2.225:5000/frontadmin@sha256:27d9ad9ad36d055d8a33e06bae7b46f32cc221fac851911c693fa9fa4f9c8c57
      lastState: {}
      name: admin-front
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-24T18:50:13Z"
    hostIP: 10.5.1.70
    hostIPs:
    - ip: 10.5.1.70
    phase: Running
    podIP: 10.244.2.61
    podIPs:
    - ip: 10.244.2.61
    qosClass: Burstable
    startTime: "2025-06-24T18:50:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T20:33:45Z"
    generateName: asi-backend-cfd448788-
    labels:
      app: asi-backend
      pod-template-hash: cfd448788
      type: backend
    name: asi-backend-cfd448788-xxp2x
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: asi-backend-cfd448788
      uid: cd98fc96-10f4-405d-9d32-589907959b0a
    resourceVersion: "880351"
    uid: 32634c9b-e07a-4a8d-9f22-12f080e657cc
  spec:
    containers:
    - env:
      - name: ORACLEHOSTASI
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-host-asi
            name: oracle-config-asi
      - name: ORACLEPORTASI
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-port-asi
            name: oracle-config-asi
      - name: ORACLEUSERASI
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-user-asi
            name: oracle-config-asi
      - name: ORACLEPASSWORDASI
        valueFrom:
          secretKeyRef:
            key: password
            name: oracle-instance-password-asi
      - name: ORACLEHOSTPG
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-host-pg
            name: oracle-config-parametrageglobal
      - name: ORACLEPORTPG
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-port-pg
            name: oracle-config-parametrageglobal
      - name: ORACLEUSERPG
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-user-pg
            name: oracle-config-parametrageglobal
      - name: ORACLEPASSWORDPG
        valueFrom:
          secretKeyRef:
            key: password
            name: oracle-instance-password-paramglobal
      image: 192.168.2.225:5000/asi:0.0.1-SNAPSHOT
      imagePullPolicy: Always
      name: asi-backend
      ports:
      - containerPort: 19099
        name: api
        protocol: TCP
      resources:
        limits:
          cpu: "2"
          memory: 4Gi
        requests:
          cpu: 200m
          memory: 512Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tcwjm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: regcred
    nodeName: worker1erpnode
    nodeSelector:
      kubernetes.io/hostname: worker1erpnode
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-tcwjm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T20:33:47Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T20:33:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T20:33:47Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T20:33:47Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T20:33:45Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c69d6f4de451065b10798e0e0146754a37756e868d028faa54415b09ec7122a6
      image: 192.168.2.225:5000/asi:0.0.1-SNAPSHOT
      imageID: 192.168.2.225:5000/asi@sha256:956ef88c6728f08c35d806e9543fb8fa173c10dd91d98c147514e801267492ce
      lastState: {}
      name: asi-backend
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T20:33:47Z"
    hostIP: 10.5.1.69
    hostIPs:
    - ip: 10.5.1.69
    phase: Running
    podIP: 10.244.1.107
    podIPs:
    - ip: 10.244.1.107
    qosClass: Burstable
    startTime: "2025-06-25T20:33:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T20:33:18Z"
    generateName: asi-front-deployment-7f75c67b49-
    labels:
      app: asi-front
      pod-template-hash: 7f75c67b49
      type: front
    name: asi-front-deployment-7f75c67b49-crlf7
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: asi-front-deployment-7f75c67b49
      uid: b5eeeb36-f5f2-440b-b3c1-b55a40f595b9
    resourceVersion: "880284"
    uid: 510ef352-934c-4dbf-b110-2f70edd9cc7b
  spec:
    containers:
    - image: 192.168.2.225:5000/frontasi:1
      imagePullPolicy: Always
      name: asi-front
      ports:
      - containerPort: 80
        name: api
        protocol: TCP
      resources:
        limits:
          cpu: "2"
          memory: 3Gi
        requests:
          cpu: 300m
          memory: 1Gi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qjwvd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: regcred
    nodeName: worker2erpnode
    nodeSelector:
      kubernetes.io/hostname: worker2erpnode
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-qjwvd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T20:33:19Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T20:33:18Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T20:33:19Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T20:33:19Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T20:33:18Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8885139ea0237e79b2092c341426baeed4be066f29d892e9b7133af061903286
      image: 192.168.2.225:5000/frontasi:1
      imageID: 192.168.2.225:5000/frontasi@sha256:5ea23144aad262017cb36f5cd36539f9aef51463b37c842ec276b9833adb30b1
      lastState: {}
      name: asi-front
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T20:33:18Z"
    hostIP: 10.5.1.70
    hostIPs:
    - ip: 10.5.1.70
    phase: Running
    podIP: 10.244.2.87
    podIPs:
    - ip: 10.244.2.87
    qosClass: Burstable
    startTime: "2025-06-25T20:33:18Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-24T18:03:26Z"
    generateName: budget-backend-6c7c7fbc67-
    labels:
      app: budget-backend
      pod-template-hash: 6c7c7fbc67
      type: backend
    name: budget-backend-6c7c7fbc67-psn2r
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: budget-backend-6c7c7fbc67
      uid: 2ef2f1a4-f19c-4e5d-b2cd-4abad68711b3
    resourceVersion: "734387"
    uid: f233a6a2-57cc-4cd8-a659-440214facf7d
  spec:
    containers:
    - env:
      - name: ORACLEHOSTBUDGET
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-host-budget
            name: oracle-config-budget
      - name: ORACLEPORTBUDGET
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-port-budget
            name: oracle-config-budget
      - name: ORACLEUSERBUDGET
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-user-budget
            name: oracle-config-budget
      - name: ORACLEPASSWORDBUDGET
        valueFrom:
          secretKeyRef:
            key: password
            name: oracle-instance-password-budget
      - name: ORACLEHOSTPG
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-host-pg
            name: oracle-config-pg
      - name: ORACLEPORTPG
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-port-pg
            name: oracle-config-pg
      - name: ORACLEUSERPG
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-user-pg
            name: oracle-config-pg
      - name: ORACLEPASSWORDPG
        valueFrom:
          secretKeyRef:
            key: password
            name: oracle-instance-password-pg
      image: 192.168.2.225:5000/budget:0.0.1-SNAPSHOT
      imagePullPolicy: Always
      name: budget-backend
      ports:
      - containerPort: 9097
        name: api
        protocol: TCP
      resources:
        limits:
          cpu: "2"
          memory: 1Gi
        requests:
          cpu: 200m
          memory: 256Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v9lrg
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: regcred
    nodeName: worker1erpnode
    nodeSelector:
      kubernetes.io/hostname: worker1erpnode
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-v9lrg
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T18:03:29Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T18:03:26Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T18:03:29Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T18:03:29Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T18:03:26Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://017c2fcf8e4da14e3643049576f836d44f8c77a7b0b5838c18dcda8e7e3d5c27
      image: 192.168.2.225:5000/budget:0.0.1-SNAPSHOT
      imageID: 192.168.2.225:5000/budget@sha256:d2de41688cbd0897a9265d265051acc9a9fb05ca6f26d3130d2d68405198cff4
      lastState: {}
      name: budget-backend
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-24T18:03:28Z"
    hostIP: 10.5.1.69
    hostIPs:
    - ip: 10.5.1.69
    phase: Running
    podIP: 10.244.1.74
    podIPs:
    - ip: 10.244.1.74
    qosClass: Burstable
    startTime: "2025-06-24T18:03:26Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-24T18:39:57Z"
    generateName: budget-front-deployment-74cf679df6-
    labels:
      app: budget-front
      pod-template-hash: 74cf679df6
      type: front
    name: budget-front-deployment-74cf679df6-4j4nj
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: budget-front-deployment-74cf679df6
      uid: c3cc1d0c-3bc4-4033-a584-6cedb96534e3
    resourceVersion: "737885"
    uid: e675af42-eefe-4906-9079-d3970ccbdad3
  spec:
    containers:
    - image: 192.168.2.225:5000/frontbudget:2
      imagePullPolicy: Always
      name: budget-front
      ports:
      - containerPort: 80
        name: api
        protocol: TCP
      resources:
        limits:
          cpu: "2"
          memory: 3Gi
        requests:
          cpu: 300m
          memory: 1Gi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-t8xwk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: regcred
    nodeName: worker2erpnode
    nodeSelector:
      kubernetes.io/hostname: worker2erpnode
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-t8xwk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T18:39:58Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T18:39:57Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T18:39:58Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T18:39:58Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T18:39:57Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d83252cdeb6f4d4e2981e1e45cdb6425fa8ff8d8a79aeb25bbb34ed8b5bacfad
      image: 192.168.2.225:5000/frontbudget:1
      imageID: 192.168.2.225:5000/frontbudget@sha256:e1af28ab8c91a2e0eefd5d82ce5ae752e40e0b68eb4a6b021cb0b8ef78448adb
      lastState: {}
      name: budget-front
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-24T18:39:57Z"
    hostIP: 10.5.1.70
    hostIPs:
    - ip: 10.5.1.70
    phase: Running
    podIP: 10.244.2.58
    podIPs:
    - ip: 10.244.2.58
    qosClass: Burstable
    startTime: "2025-06-24T18:39:57Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T10:01:55Z"
    generateName: comptabilite-backend-58964b6fbc-
    labels:
      app: comptabilite-backend
      pod-template-hash: 58964b6fbc
      type: backend
    name: comptabilite-backend-58964b6fbc-lm7dp
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: comptabilite-backend-58964b6fbc
      uid: 2c3231f9-c5a7-4ceb-90ef-607f4b6aa33a
    resourceVersion: "822475"
    uid: 5dac053c-5c56-43f6-b124-5008a400ce0b
  spec:
    containers:
    - env:
      - name: ORACLEHOSTCOMPTA
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-host-comptabilite
            name: oracle-config-comptabilite
      - name: ORACLEPORTCOMPTA
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-port-comptabilite
            name: oracle-config-comptabilite
      - name: ORACLEUSERCOMPTA
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-user-comptabilite
            name: oracle-config-comptabilite
      - name: ORACLEPASSWORDCOMPTA
        valueFrom:
          secretKeyRef:
            key: password
            name: oracle-instance-password-comptabilite
      - name: ORACLEHOSTPG
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-host-pg
            name: oracle-config-pg
      - name: ORACLEPORTPG
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-port-pg
            name: oracle-config-pg
      - name: ORACLEUSERPG
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-user-pg
            name: oracle-config-pg
      - name: ORACLEPASSWORDPG
        valueFrom:
          secretKeyRef:
            key: password
            name: oracle-instance-password-pg
      - name: ORACLEHOSTIMM
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-host-imm
            name: oracle-config-imm
      - name: ORACLEPORTIMM
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-port-imm
            name: oracle-config-imm
      - name: ORACLEUSERIMM
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-user-imm
            name: oracle-config-imm
      - name: ORACLEPASSWORDIMM
        valueFrom:
          secretKeyRef:
            key: password
            name: oracle-instance-password-imm
      - name: ORACLEHOSTCOTISATION
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-host-cotisation
            name: oracle-config-cotisation
      - name: ORACLEPORTCOTISATION
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-port-cotisation
            name: oracle-config-cotisation
      - name: ORACLEUSERCOTISATION
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-user-cotisation
            name: oracle-config-cotisation
      - name: ORACLEPASSWORDCOTISATION
        valueFrom:
          secretKeyRef:
            key: password
            name: oracle-instance-password-cotisation
      - name: ORACLEHOSTTRACACTION
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-host-tracaction
            name: oracle-config-tracaction
      - name: ORACLEPORTTRACACTION
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-port-tracaction
            name: oracle-config-tracaction
      - name: ORACLEUSERTRACACTION
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-user-tracaction
            name: oracle-config-tracaction
      - name: ORACLEPASSWORDTRACACTION
        valueFrom:
          secretKeyRef:
            key: password
            name: oracle-instance-password-tracaction
      image: 192.168.2.225:5000/comptabilite:0.0.1-SNAPSHOT
      imagePullPolicy: Always
      name: comptabilite-backend
      ports:
      - containerPort: 8093
        name: api
        protocol: TCP
      resources:
        limits:
          cpu: "4"
          memory: 2Gi
        requests:
          cpu: 200m
          memory: 256Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zfjsm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: regcred
    nodeName: worker1erpnode
    nodeSelector:
      kubernetes.io/hostname: worker1erpnode
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-zfjsm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T10:01:57Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T10:01:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T10:01:57Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T10:01:57Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T10:01:55Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://fcd8c5d15f6451943fce372442ceaf9103d137ceda54d9b3b4bbdfd87464cbfd
      image: 192.168.2.225:5000/comptabilite:0.0.1-SNAPSHOT
      imageID: 192.168.2.225:5000/comptabilite@sha256:666a803fb8dcdf2c58ff3e55e0ee4f436bd95fc109fc1436d4a26e9d2d51ffe1
      lastState: {}
      name: comptabilite-backend
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T10:01:57Z"
    hostIP: 10.5.1.69
    hostIPs:
    - ip: 10.5.1.69
    phase: Running
    podIP: 10.244.1.90
    podIPs:
    - ip: 10.244.1.90
    qosClass: Burstable
    startTime: "2025-06-25T10:01:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-24T20:31:18Z"
    generateName: cotisation-backend-76c5c9d5f8-
    labels:
      app: cotisation-backend
      pod-template-hash: 76c5c9d5f8
      type: backend
    name: cotisation-backend-76c5c9d5f8-2z7rt
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: cotisation-backend-76c5c9d5f8
      uid: 4cb20e46-e5ed-4385-8d22-3a11acf58ee3
    resourceVersion: "748403"
    uid: df5efd58-f64b-4c65-ba17-af94e9d10a67
  spec:
    containers:
    - env:
      - name: ORACLEHOSTIMM
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-host-imm
            name: oracle-config-imm
      - name: ORACLEPORTIMM
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-port-imm
            name: oracle-config-imm
      - name: ORACLEUSERIMM
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-user-imm
            name: oracle-config-imm
      - name: ORACLEPASSWORDIMM
        valueFrom:
          secretKeyRef:
            key: password
            name: oracle-instance-password-imm
      - name: ORACLEHOSTCOTISATION
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-host-cotisation
            name: oracle-config-cotisation
      - name: ORACLEPORTCOTISATION
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-port-cotisation
            name: oracle-config-cotisation
      - name: ORACLEUSERCOTISATION
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-user-cotisation
            name: oracle-config-cotisation
      - name: ORACLEHOSTTRESORERIE
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-host-tresorerie
            name: oracle-config-tresorerie
      - name: ORACLEPORTTRESORERIE
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-port-tresorerie
            name: oracle-config-tresorerie
      - name: ORACLEUSERTRESORERIE
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-user-tresorerie
            name: oracle-config-tresorerie
      - name: ORACLEPASSWORDTRESORERIE
        valueFrom:
          secretKeyRef:
            key: password
            name: oracle-instance-password-tresorerie
      - name: ORACLEPASSWORDCOTISATION
        valueFrom:
          secretKeyRef:
            key: password
            name: oracle-instance-password-cotisation
      image: 192.168.2.225:5000/cotisation:0.0.1-SNAPSHOT
      imagePullPolicy: Always
      name: cotisation-backend
      ports:
      - containerPort: 8082
        name: api
        protocol: TCP
      resources:
        limits:
          cpu: "2"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-phrxh
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: regcred
    nodeName: worker1erpnode
    nodeSelector:
      kubernetes.io/hostname: worker1erpnode
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-phrxh
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T20:31:19Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T20:31:18Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T20:31:19Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T20:31:19Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T20:31:18Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://2a7b3aa8c90a93ff56d8f89c28221632e213175314109fc00c1ba5fefd42e9cc
      image: 192.168.2.225:5000/cotisation:0.0.1-SNAPSHOT
      imageID: 192.168.2.225:5000/cotisation@sha256:6e9659a284e81f4211a571f010e13bd7b02db8872884d803b3365c4c1efe3114
      lastState: {}
      name: cotisation-backend
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-24T20:31:18Z"
    hostIP: 10.5.1.69
    hostIPs:
    - ip: 10.5.1.69
    phase: Running
    podIP: 10.244.1.78
    podIPs:
    - ip: 10.244.1.78
    qosClass: Burstable
    startTime: "2025-06-24T20:31:18Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T13:34:56Z"
    generateName: etatfinancier-backend-7684968867-
    labels:
      app: etatfinancier-backend
      pod-template-hash: "7684968867"
      type: backend
    name: etatfinancier-backend-7684968867-mgz6j
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: etatfinancier-backend-7684968867
      uid: a0be84f2-24b2-4e9a-9220-9e5ab85b09e3
    resourceVersion: "841785"
    uid: 58fddf96-d4c1-4d83-8781-c38c9b1dbf22
  spec:
    containers:
    - env:
      - name: ORACLEHOSTETATFINANCIER
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-host-etatfinancier
            name: oracle-config-etatfinancier
      - name: ORACLEPORTETATFINANCIER
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-port-etatfinancier
            name: oracle-config-etatfinancier
      - name: ORACLEUSERETATFINANCIER
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-user-etatfinancier
            name: oracle-config-etatfinancier
      - name: ORACLEPASSWORDETATFINANCIER
        valueFrom:
          secretKeyRef:
            key: password
            name: oracle-instance-password-etatfinancier
      image: 192.168.2.225:5000/etatfinancier:0.0.1-SNAPSHOT
      imagePullPolicy: Always
      name: etatfinancier-backend
      ports:
      - containerPort: 1999
        name: api
        protocol: TCP
      resources:
        limits:
          cpu: "2"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 512Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-w6dxm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: regcred
    nodeName: worker1erpnode
    nodeSelector:
      kubernetes.io/hostname: worker1erpnode
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-w6dxm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T13:34:59Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T13:34:56Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T13:34:59Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T13:34:59Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T13:34:56Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://cfe36435b58619474555135074907c1019eb0dac1ba3a53e57f301301ff76513
      image: 192.168.2.225:5000/etatfinancier:0.0.1-SNAPSHOT
      imageID: 192.168.2.225:5000/etatfinancier@sha256:2e4426609e2a804cfddc97d7a0c0653ce945193705aa6e2c7227c95673178993
      lastState: {}
      name: etatfinancier-backend
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T13:34:58Z"
    hostIP: 10.5.1.69
    hostIPs:
    - ip: 10.5.1.69
    phase: Running
    podIP: 10.244.1.93
    podIPs:
    - ip: 10.244.1.93
    qosClass: Burstable
    startTime: "2025-06-25T13:34:56Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T19:57:36Z"
    generateName: fo-backend-8476c5b957-
    labels:
      app: fo-backend
      pod-template-hash: 8476c5b957
      type: backend
    name: fo-backend-8476c5b957-cqb2w
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: fo-backend-8476c5b957
      uid: f987c843-77f8-463e-87ec-0ca4f86728d2
    resourceVersion: "877009"
    uid: ab81ff46-d25a-4da4-b86b-b6ae40c9d765
  spec:
    containers:
    - env:
      - name: ORACLEHOSTFO
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-host-fo
            name: oracle-config-fo
      - name: ORACLEPORTFO
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-port-fo
            name: oracle-config-fo
      - name: ORACLEUSERFO
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-user-fo
            name: oracle-config-fo
      - name: ORACLEPASSWORDFO
        valueFrom:
          secretKeyRef:
            key: password
            name: oracle-instance-password-fo
      - name: ORACLEHOST
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-host-pg
            name: oracle-config-pg
      - name: ORACLEPORT
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-port-pg
            name: oracle-config-pg
      - name: ORACLEUSER
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-user-pg
            name: oracle-config-pg
      - name: ORACLEPASSWORD
        valueFrom:
          secretKeyRef:
            key: password
            name: oracle-instance-password-pg
      - name: ORACLEHOSTTRACACTION
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-host-tracaction
            name: oracle-config-tracaction
      - name: ORACLEPORTTRACACTION
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-port-tracaction
            name: oracle-config-tracaction
      - name: ORACLEUSERTRACACTION
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-user-tracaction
            name: oracle-config-tracaction
      - name: ORACLEPASSWORDTRACACTION
        valueFrom:
          secretKeyRef:
            key: password
            name: oracle-instance-password-tracaction
      image: 192.168.2.225:5000/fontoffice:0.0.1-SNAPSHOT
      imagePullPolicy: Always
      name: fo-backend
      ports:
      - containerPort: 8999
        name: api
        protocol: TCP
      resources:
        limits:
          cpu: "2"
          memory: 1Gi
        requests:
          cpu: 200m
          memory: 256Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fhl2r
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: regcred
    nodeName: worker1erpnode
    nodeSelector:
      kubernetes.io/hostname: worker1erpnode
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-fhl2r
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T19:57:37Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T19:57:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T19:57:37Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T19:57:37Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T19:57:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://4aa334c493125889c3cbdc897e3fa0dbc1648e7e5efef5462bfeaf620139bc71
      image: 192.168.2.225:5000/fontoffice:0.0.1-SNAPSHOT
      imageID: 192.168.2.225:5000/fontoffice@sha256:789ac71e825fc51a9329a119a2d8da78cbe4a57b8f544792713ccbc733e7c8fe
      lastState: {}
      name: fo-backend
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T19:57:36Z"
    hostIP: 10.5.1.69
    hostIPs:
    - ip: 10.5.1.69
    phase: Running
    podIP: 10.244.1.105
    podIPs:
    - ip: 10.244.1.105
    qosClass: Burstable
    startTime: "2025-06-25T19:57:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-24T19:42:32Z"
    generateName: fo-front-deployment-5b75cbc844-
    labels:
      app: fo-front
      pod-template-hash: 5b75cbc844
      type: front
    name: fo-front-deployment-5b75cbc844-87p5l
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: fo-front-deployment-5b75cbc844
      uid: b73c28b9-b8be-4f03-9710-7ae130763739
    resourceVersion: "743794"
    uid: e803539f-4de2-41f6-9c31-b8f40c8e8c18
  spec:
    containers:
    - image: 192.168.2.225:5000/frontfrontoffice:1
      imagePullPolicy: Always
      name: fo-front
      ports:
      - containerPort: 80
        name: api
        protocol: TCP
      resources:
        limits:
          cpu: "3"
          memory: 4Gi
        requests:
          cpu: 300m
          memory: 2046Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-w54vc
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: regcred
    nodeName: worker2erpnode
    nodeSelector:
      kubernetes.io/hostname: worker2erpnode
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-w54vc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T19:42:33Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T19:42:32Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T19:42:33Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T19:42:33Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T19:42:32Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://747947e773321529820cfbc7316939456decb034aab07fcdd0ef7fcd72761914
      image: 192.168.2.225:5000/frontfrontoffice:1
      imageID: 192.168.2.225:5000/frontfrontoffice@sha256:bfa76784e477ec974d3602ebdbf587e2db6238060c227536ffccc374882f11ab
      lastState: {}
      name: fo-front
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-24T19:42:33Z"
    hostIP: 10.5.1.70
    hostIPs:
    - ip: 10.5.1.70
    phase: Running
    podIP: 10.244.2.62
    podIPs:
    - ip: 10.244.2.62
    qosClass: Burstable
    startTime: "2025-06-24T19:42:32Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T14:50:16Z"
    generateName: fp-7987c86d4f-
    labels:
      app: fp
      pod-template-hash: 7987c86d4f
      type: front
    name: fp-7987c86d4f-np7vq
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: fp-7987c86d4f
      uid: 11071006-f30e-4d5b-82ba-dbfcc9d54bca
    resourceVersion: "849144"
    uid: 0565ec6d-d833-42b9-9c64-9ce14517b6c9
  spec:
    containers:
    - image: 192.168.2.225:5000/frontprestation:1
      imagePullPolicy: Always
      name: fp
      ports:
      - containerPort: 80
        name: api
        protocol: TCP
      resources:
        limits:
          cpu: "2"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wn8gn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: regcred
    nodeName: worker2erpnode
    nodeSelector:
      kubernetes.io/hostname: worker2erpnode
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-wn8gn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T14:50:18Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T14:50:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T14:50:18Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T14:50:18Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T14:50:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://be80368fce779f5172a7c18929d0ba789fb5ea0d4e6ed8b3d5622348f04bbb9c
      image: 192.168.2.225:5000/frontprestation:1
      imageID: 192.168.2.225:5000/frontprestation@sha256:9484910e40c2692e37110d55c18a08350943dc798e2bca56e2b251746d10ff65
      lastState: {}
      name: fp
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T14:50:17Z"
    hostIP: 10.5.1.70
    hostIPs:
    - ip: 10.5.1.70
    phase: Running
    podIP: 10.244.2.85
    podIPs:
    - ip: 10.244.2.85
    qosClass: Burstable
    startTime: "2025-06-25T14:50:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-24T20:34:59Z"
    generateName: front-finance-cc6457784-
    labels:
      app: front-finance
      pod-template-hash: cc6457784
      type: front
    name: front-finance-cc6457784-jhjr7
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: front-finance-cc6457784
      uid: 2130181e-097f-4ffb-ad06-fa232c7692d6
    resourceVersion: "748798"
    uid: 3ba97fa9-dab0-4cd9-8d71-764a76f5b38b
  spec:
    containers:
    - image: 192.168.2.225:5000/frontfinance:2
      imagePullPolicy: Always
      name: front-finance
      ports:
      - containerPort: 80
        name: api
        protocol: TCP
      resources:
        limits:
          cpu: "3"
          memory: 3Gi
        requests:
          cpu: 300m
          memory: 2Gi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-c9dzf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: regcred
    nodeName: worker2erpnode
    nodeSelector:
      kubernetes.io/hostname: worker2erpnode
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-c9dzf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T20:35:00Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T20:34:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T20:35:00Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T20:35:00Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T20:34:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://37efc2dc36edcf2f9306710d5ea73aae5a66e7c180df54e332feba2b79deaec8
      image: 192.168.2.225:5000/frontfinance:2
      imageID: 192.168.2.225:5000/frontfinance@sha256:b3636ad1990b283e90ee942dedf2eb1ff2640563993894b15e75ebd77549aef7
      lastState: {}
      name: front-finance
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-24T20:35:00Z"
    hostIP: 10.5.1.70
    hostIPs:
    - ip: 10.5.1.70
    phase: Running
    podIP: 10.244.2.65
    podIPs:
    - ip: 10.244.2.65
    qosClass: Burstable
    startTime: "2025-06-24T20:34:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T09:30:56Z"
    generateName: front-tb-dcd9fcf97-
    labels:
      app: front-tb
      pod-template-hash: dcd9fcf97
      type: front
    name: front-tb-dcd9fcf97-mbkbl
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: front-tb-dcd9fcf97
      uid: 617ac733-2f4b-4296-808a-a388599492f9
    resourceVersion: "819625"
    uid: 9e42af69-2d26-4993-a5af-8f65906e71f7
  spec:
    containers:
    - image: 192.168.2.225:5000/fronttableaudebord:1
      imagePullPolicy: Always
      name: front-tb
      ports:
      - containerPort: 80
        name: api
        protocol: TCP
      resources:
        limits:
          cpu: 4046m
          memory: 6120Mi
        requests:
          cpu: 1124m
          memory: 1152Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9hvwv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: regcred
    nodeName: worker2erpnode
    nodeSelector:
      kubernetes.io/hostname: worker2erpnode
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-9hvwv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T09:30:58Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T09:30:56Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T09:30:58Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T09:30:58Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T09:30:56Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5aeae383aa62dac1a4a674d6cbbd93b5b4b7d52301d5bdcd2049248058218704
      image: 192.168.2.225:5000/fronttableaudebord:1
      imageID: 192.168.2.225:5000/fronttableaudebord@sha256:9d0750697949ceecc045ec1d11777810ea8bad365f515cce7be0bbedf0171d49
      lastState: {}
      name: front-tb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T09:30:57Z"
    hostIP: 10.5.1.70
    hostIPs:
    - ip: 10.5.1.70
    phase: Running
    podIP: 10.244.2.84
    podIPs:
    - ip: 10.244.2.84
    qosClass: Burstable
    startTime: "2025-06-25T09:30:56Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-24T17:18:33Z"
    generateName: gateway-7b9f4c767b-
    labels:
      app: gateway
      pod-template-hash: 7b9f4c767b
      type: backend
    name: gateway-7b9f4c767b-dn7g5
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: gateway-7b9f4c767b
      uid: c1750b9a-2a83-4e60-9053-6ff304b2fa4d
    resourceVersion: "730163"
    uid: 9633ac3a-9efa-4856-ab80-b91fc248194f
  spec:
    containers:
    - image: 192.168.2.225:5000/gateway:0.0.1-SNAPSHOT
      imagePullPolicy: Always
      name: gateway
      ports:
      - containerPort: 8888
        name: http
        protocol: TCP
      resources:
        limits:
          cpu: "2"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8vcr5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: regcred
    nodeName: worker1erpnode
    nodeSelector:
      kubernetes.io/hostname: worker1erpnode
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-8vcr5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T17:18:34Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T17:18:33Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T17:18:34Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T17:18:34Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T17:18:33Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ec4ad3878412c745e15a4edbd3024656a03432da9a3a5f6de470900be0785e5f
      image: 192.168.2.225:5000/gateway:0.0.1-SNAPSHOT
      imageID: 192.168.2.225:5000/gateway@sha256:d498a9013d62c6958f995d1f9e597a7a3a619587ca9526a1acb8c9a64220883d
      lastState: {}
      name: gateway
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-24T17:18:34Z"
    hostIP: 10.5.1.69
    hostIPs:
    - ip: 10.5.1.69
    phase: Running
    podIP: 10.244.1.69
    podIPs:
    - ip: 10.244.1.69
    qosClass: Burstable
    startTime: "2025-06-24T17:18:33Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-24T20:34:14Z"
    generateName: gira-backend-59d89b9474-
    labels:
      app: gira-backend
      pod-template-hash: 59d89b9474
      type: backend
    name: gira-backend-59d89b9474-2jgrz
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: gira-backend-59d89b9474
      uid: 2987b32d-7acb-43f1-ac6e-9c42a9f72334
    resourceVersion: "748697"
    uid: f76d4881-3d5c-4055-b9b1-694923b9b6b2
  spec:
    containers:
    - env:
      - name: ORACLEHOSTGIRA
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-host-gira
            name: oracle-config-gira
      - name: ORACLEPORTGIRA
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-port-gira
            name: oracle-config-gira
      - name: ORACLEUSERGIRA
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-user-gira
            name: oracle-config-gira
      - name: ORACLEPASSWORDGIRA
        valueFrom:
          secretKeyRef:
            key: password
            name: oracle-instance-password-gira
      - name: ORACLEHOSTPG
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-host-pg
            name: oracle-config-pg
      - name: ORACLEPORTPG
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-port-pg
            name: oracle-config-pg
      - name: ORACLEUSERPG
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-user-pg
            name: oracle-config-pg
      - name: ORACLEPASSWORDPG
        valueFrom:
          secretKeyRef:
            key: password
            name: oracle-instance-password-pg
      image: 192.168.2.225:5000/gira:0.0.1-SNAPSHOT
      imagePullPolicy: Always
      name: gira-backend
      ports:
      - containerPort: 8989
        name: api
        protocol: TCP
      resources:
        limits:
          cpu: "2"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l427r
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: regcred
    nodeName: worker1erpnode
    nodeSelector:
      kubernetes.io/hostname: worker1erpnode
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-l427r
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T20:34:15Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T20:34:14Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T20:34:15Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T20:34:15Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T20:34:14Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://988ba00b2855e9bc34b4184dc8077bd19051822ffd279bea9ac2fe3397218fdb
      image: 192.168.2.225:5000/gira:0.0.1-SNAPSHOT
      imageID: 192.168.2.225:5000/gira@sha256:82f00bc82e2d6ff1e9dfe9131994316c92c5e137a6b567ac00a1b6390448dba7
      lastState: {}
      name: gira-backend
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-24T20:34:14Z"
    hostIP: 10.5.1.69
    hostIPs:
    - ip: 10.5.1.69
    phase: Running
    podIP: 10.244.1.79
    podIPs:
    - ip: 10.244.1.79
    qosClass: Burstable
    startTime: "2025-06-24T20:34:14Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-24T22:39:06Z"
    generateName: gira-front-deployment-6c46494f77-
    labels:
      app: gira-front
      pod-template-hash: 6c46494f77
      type: front
    name: gira-front-deployment-6c46494f77-2z6b2
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: gira-front-deployment-6c46494f77
      uid: fbd5da77-a173-491a-8e2e-176a73f3ed32
    resourceVersion: "760427"
    uid: b52bd87c-7895-4668-9206-5ac2e753663a
  spec:
    containers:
    - image: 192.168.2.225:5000/frontgira:1
      imagePullPolicy: Always
      name: gira-front
      ports:
      - containerPort: 80
        name: api
        protocol: TCP
      resources:
        limits:
          cpu: "2"
          memory: 3Gi
        requests:
          cpu: 300m
          memory: 1Gi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wh9gf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: regcred
    nodeName: worker2erpnode
    nodeSelector:
      kubernetes.io/hostname: worker2erpnode
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-wh9gf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T22:39:08Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T22:39:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T22:39:08Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T22:39:08Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T22:39:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://45d88fa9c5b622c51a98e7a63512735b232d6911015f3375aca6f10792be188b
      image: 192.168.2.225:5000/frontgira:1
      imageID: 192.168.2.225:5000/frontgira@sha256:b1fe889337cc6f247099775c1eb4e9ed76cd066a2808affeb53c3e0139b7e9a2
      lastState: {}
      name: gira-front
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-24T22:39:07Z"
    hostIP: 10.5.1.70
    hostIPs:
    - ip: 10.5.1.70
    phase: Running
    podIP: 10.244.2.74
    podIPs:
    - ip: 10.244.2.74
    qosClass: Burstable
    startTime: "2025-06-24T22:39:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-24T20:03:33Z"
    generateName: immatriculation-backend-6494c5d444-
    labels:
      app: immatriculation-backend
      pod-template-hash: 6494c5d444
      type: backend
    name: immatriculation-backend-6494c5d444-7jxs7
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: immatriculation-backend-6494c5d444
      uid: c5306575-b421-4c72-82fd-ee4d17c0576c
    resourceVersion: "745740"
    uid: 212f44bc-4b4a-4ec4-97bb-87d16ffbcfea
  spec:
    containers:
    - env:
      - name: ORACLEHOSTIMM
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-host-imm
            name: oracle-config-imm
      - name: ORACLEPORTIMM
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-port-imm
            name: oracle-config-imm
      - name: ORACLEUSERIMM
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-user-imm
            name: oracle-config-imm
      - name: ORACLEPASSWORDIMM
        valueFrom:
          secretKeyRef:
            key: password
            name: oracle-instance-password-imm
      - name: ORACLEHOSTPG
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-host-pg
            name: oracle-config-parametrageglobal
      - name: ORACLEPORTPG
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-port-pg
            name: oracle-config-parametrageglobal
      - name: ORACLEUSERPG
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-user-pg
            name: oracle-config-parametrageglobal
      - name: ORACLEHOSTCOTISATION
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-host-cotisation
            name: oracle-config-cotisation
      - name: ORACLEPORTCOTISATION
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-port-cotisation
            name: oracle-config-cotisation
      - name: ORACLEUSERCOTISATION
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-user-cotisation
            name: oracle-config-cotisation
      - name: ORACLEPASSWORDPG
        valueFrom:
          secretKeyRef:
            key: password
            name: oracle-instance-password-paramglobal
      - name: ORACLEPASSWORDCOTISATION
        valueFrom:
          secretKeyRef:
            key: password
            name: oracle-instance-password-cotisation
      image: 192.168.2.225:5000/immatriculation:0.0.1-SNAPSHOT
      imagePullPolicy: Always
      name: immatriculation-backend
      ports:
      - containerPort: 1996
        name: api
        protocol: TCP
      resources:
        limits:
          cpu: "3"
          memory: 5Gi
        requests:
          cpu: 300m
          memory: 2046Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jd92s
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: regcred
    nodeName: worker1erpnode
    nodeSelector:
      kubernetes.io/hostname: worker1erpnode
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-jd92s
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T20:03:34Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T20:03:33Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T20:03:34Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T20:03:34Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T20:03:33Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d37d86dfc39e83dc6848bb84bea5c71d8b70bc3a43556902c5975d09c8c0708f
      image: 192.168.2.225:5000/immatriculation:0.0.1-SNAPSHOT
      imageID: 192.168.2.225:5000/immatriculation@sha256:3b918490905d109a86f1e31909be0cb7d3f34c14c864a1474437e8bc9ec55532
      lastState: {}
      name: immatriculation-backend
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-24T20:03:33Z"
    hostIP: 10.5.1.69
    hostIPs:
    - ip: 10.5.1.69
    phase: Running
    podIP: 10.244.1.76
    podIPs:
    - ip: 10.244.1.76
    qosClass: Burstable
    startTime: "2025-06-24T20:03:33Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-24T23:10:34Z"
    generateName: mandat-backend-5fcb7c7866-
    labels:
      app: mandat-backend
      pod-template-hash: 5fcb7c7866
      type: backend
    name: mandat-backend-5fcb7c7866-9mmh9
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: mandat-backend-5fcb7c7866
      uid: f2e3a436-0138-458e-bb99-987776035f12
    resourceVersion: "763494"
    uid: 3b90c072-b2ce-48b5-b5bf-af5a210f4400
  spec:
    containers:
    - env:
      - name: ORACLEHOSTMANDAT
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-host-mandat
            name: oracle-config-mandat
      - name: ORACLEPORTMANDAT
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-port-mandat
            name: oracle-config-mandat
      - name: ORACLEUSERMANDAT
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-user-mandat
            name: oracle-config-mandat
      - name: ORACLEPASSWORDMANDAT
        valueFrom:
          secretKeyRef:
            key: password
            name: oracle-instance-password-mandat
      - name: ORACLEHOSTCOMPTA
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-host-comptabilite
            name: oracle-config-comptabilite
      - name: ORACLEPORTCOMPTA
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-port-comptabilite
            name: oracle-config-comptabilite
      - name: ORACLEUSERCOMPTA
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-user-comptabilite
            name: oracle-config-comptabilite
      - name: ORACLEPASSWORDCOMPTA
        valueFrom:
          secretKeyRef:
            key: password
            name: oracle-instance-password-comptabilite
      - name: ORACLEHOSTPG
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-host-pg
            name: oracle-config-pg
      - name: ORACLEPORTPG
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-port-pg
            name: oracle-config-pg
      - name: ORACLEUSERPG
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-user-pg
            name: oracle-config-pg
      - name: ORACLEPASSWORDPG
        valueFrom:
          secretKeyRef:
            key: password
            name: oracle-instance-password-pg
      - name: ORACLEHOSTTRACACTION
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-host-tracaction
            name: oracle-config-tracaction
      - name: ORACLEPORTTRACACTION
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-port-tracaction
            name: oracle-config-tracaction
      - name: ORACLEUSERTRACACTION
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-user-tracaction
            name: oracle-config-tracaction
      - name: ORACLEPASSWORDTRACACTION
        valueFrom:
          secretKeyRef:
            key: password
            name: oracle-instance-password-tracaction
      image: 192.168.2.225:5000/mandat:0.0.1-SNAPSHOT
      imagePullPolicy: Always
      name: mandat-backend
      ports:
      - containerPort: 8099
        name: api
        protocol: TCP
      resources:
        limits:
          cpu: "2"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fmckk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: regcred
    nodeName: worker2erpnode
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-fmckk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T23:10:35Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T23:10:34Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T23:10:35Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T23:10:35Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T23:10:34Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3a600afa8e11af11a780879396896f248d87a4633d27bbf860d50f776181292c
      image: 192.168.2.225:5000/mandat:0.0.1-SNAPSHOT
      imageID: 192.168.2.225:5000/mandat@sha256:995cbfed2b66975a6868967599ef875fa5a1c5de13c938faf6bd9000f0354d39
      lastState: {}
      name: mandat-backend
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-24T23:10:34Z"
    hostIP: 10.5.1.70
    hostIPs:
    - ip: 10.5.1.70
    phase: Running
    podIP: 10.244.2.81
    podIPs:
    - ip: 10.244.2.81
    qosClass: Burstable
    startTime: "2025-06-24T23:10:34Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T17:40:45Z"
    generateName: paramglob-back-deployment-66848d9897-
    labels:
      app: paramglob-backend
      pod-template-hash: 66848d9897
      type: backend
    name: paramglob-back-deployment-66848d9897-tkzs9
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: paramglob-back-deployment-66848d9897
      uid: af9916c6-5d15-4e12-a5e3-daccbd912782
    resourceVersion: "864556"
    uid: 44f04703-30ab-4afa-84b8-491f78a3722f
  spec:
    containers:
    - env:
      - name: ORACLEHOST
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-host-pg
            name: oracle-config-pg
      - name: ORACLEPORT
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-port-pg
            name: oracle-config-pg
      - name: ORACLEUSER
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-user-pg
            name: oracle-config-pg
      - name: ORACLEPASSWORD
        valueFrom:
          secretKeyRef:
            key: password
            name: oracle-instance-password-pg
      image: 192.168.2.225:5000/parametrageglobal:0.0.1-SNAPSHOT
      imagePullPolicy: Always
      name: paramglob-backend
      ports:
      - containerPort: 1995
        name: api
        protocol: TCP
      resources:
        limits:
          cpu: "3"
          memory: 2Gi
        requests:
          cpu: 300m
          memory: 512Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hnp95
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: regcred
    nodeName: worker1erpnode
    nodeSelector:
      kubernetes.io/hostname: worker1erpnode
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-hnp95
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T17:40:47Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T17:40:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T17:40:47Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T17:40:47Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T17:40:45Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://34a1a2dfcd9db2e9dd645fbcd47d99f7622d18c024fbd360c751cb5fd90f32bd
      image: 192.168.2.225:5000/parametrageglobal:0.0.1-SNAPSHOT
      imageID: 192.168.2.225:5000/parametrageglobal@sha256:f1430ee4a9aa5bc2183abcf2492d085f06dec97b6a12a46398026c931c028b8f
      lastState: {}
      name: paramglob-backend
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T17:40:47Z"
    hostIP: 10.5.1.69
    hostIPs:
    - ip: 10.5.1.69
    phase: Running
    podIP: 10.244.1.102
    podIPs:
    - ip: 10.244.1.102
    qosClass: Burstable
    startTime: "2025-06-25T17:40:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T13:32:48Z"
    generateName: pp-backend-bc489546f-
    labels:
      app: pp-backend
      pod-template-hash: bc489546f
      type: backend
    name: pp-backend-bc489546f-r5tmm
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: pp-backend-bc489546f
      uid: 55a2d9c7-f85e-40bd-9008-2834b0229fd9
    resourceVersion: "841535"
    uid: 8fd6f6d8-27d8-4a32-9581-f8ce24c78bf8
  spec:
    containers:
    - env:
      - name: ORACLEHOSTPP
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-host-pp
            name: oracle-config-pp
      - name: ORACLEPORTPP
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-port-pp
            name: oracle-config-pp
      - name: ORACLEUSERPP
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-user-pp
            name: oracle-config-pp
      - name: ORACLEPASSWORDPP
        valueFrom:
          secretKeyRef:
            key: password
            name: oracle-instance-password-pp
      - name: ORACLEHOSTTRACACTION
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-host-tracaction
            name: oracle-config-tracaction
      - name: ORACLEPORTTRACACTION
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-port-tracaction
            name: oracle-config-tracaction
      - name: ORACLEUSERTRACACTION
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-user-tracaction
            name: oracle-config-tracaction
      - name: ORACLEPASSWORDTRACACTION
        valueFrom:
          secretKeyRef:
            key: password
            name: oracle-instance-password-tracaction
      image: 192.168.2.225:5000/paiementprestation:0.0.1-SNAPSHOT
      imagePullPolicy: Always
      name: pp-backend
      ports:
      - containerPort: 8086
        name: api
        protocol: TCP
      resources:
        limits:
          cpu: "2"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-78w2q
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: regcred
    nodeName: worker1erpnode
    nodeSelector:
      kubernetes.io/hostname: worker1erpnode
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-78w2q
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T13:32:51Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T13:32:48Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T13:32:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T13:32:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T13:32:48Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://63efb11b9b108fc6dca066b835efcf68d8bb5551e3718f9b6fc3c6fc06f9e0dd
      image: 192.168.2.225:5000/paiementprestation:0.0.1-SNAPSHOT
      imageID: 192.168.2.225:5000/paiementprestation@sha256:ea93631bff003f831d8f6994abacaedf7eb1897c7a3f3ecc78c7d683b07861dd
      lastState: {}
      name: pp-backend
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T13:32:50Z"
    hostIP: 10.5.1.69
    hostIPs:
    - ip: 10.5.1.69
    phase: Running
    podIP: 10.244.1.91
    podIPs:
    - ip: 10.244.1.91
    qosClass: Burstable
    startTime: "2025-06-25T13:32:48Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T17:56:54Z"
    generateName: rec-backend-84969f554-
    labels:
      app: rec-backend
      pod-template-hash: 84969f554
      type: backend
    name: rec-backend-84969f554-qsdsr
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: rec-backend-84969f554
      uid: 92e1552b-7ba1-4bbc-930c-371dca78fc7c
    resourceVersion: "866042"
    uid: b707c4ef-424c-4f7e-8ac6-ce37050030d9
  spec:
    containers:
    - env:
      - name: ORACLEHOSTREC
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-host-rec
            name: oracle-config-rec
      - name: ORACLEPORTREC
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-port-rec
            name: oracle-config-rec
      - name: ORACLEUSERREC
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-user-rec
            name: oracle-config-rec
      - name: ORACLEPASSWORDREC
        valueFrom:
          secretKeyRef:
            key: password
            name: oracle-instance-password-rec
      - name: ORACLEHOSTPG
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-host-pg
            name: oracle-config-pg
      - name: ORACLEPORTPG
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-port-pg
            name: oracle-config-pg
      - name: ORACLEUSERPG
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-user-pg
            name: oracle-config-pg
      - name: ORACLEPASSWORDPG
        valueFrom:
          secretKeyRef:
            key: password
            name: oracle-instance-password-pg
      image: 192.168.2.225:5000/recrutement:0.0.1-SNAPSHOT
      imagePullPolicy: Always
      name: rec-backend
      ports:
      - containerPort: 9098
        name: api
        protocol: TCP
      resources:
        limits:
          cpu: "2"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-d8hcr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: regcred
    nodeName: worker1erpnode
    nodeSelector:
      kubernetes.io/hostname: worker1erpnode
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-d8hcr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T17:56:56Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T17:56:54Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T17:56:56Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T17:56:56Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T17:56:54Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://af9b19c8b49b4db3ceaf4cbefe4ce6d1627593b17431a70f3a0af1125df152e4
      image: 192.168.2.225:5000/recrutement:0.0.1-SNAPSHOT
      imageID: 192.168.2.225:5000/recrutement@sha256:f5f87caa183dea7ae77f3ebadd1bf8c0cc1b4aba5a372b53a1e6fae4e588c85f
      lastState: {}
      name: rec-backend
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T17:56:56Z"
    hostIP: 10.5.1.69
    hostIPs:
    - ip: 10.5.1.69
    phase: Running
    podIP: 10.244.1.103
    podIPs:
    - ip: 10.244.1.103
    qosClass: Burstable
    startTime: "2025-06-25T17:56:54Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-24T17:17:41Z"
    generateName: registry-backend-7db896c947-
    labels:
      app: registry-backend
      pod-template-hash: 7db896c947
      type: backend
    name: registry-backend-7db896c947-qhsql
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: registry-backend-7db896c947
      uid: 24a9b749-0771-4175-bd17-354263b58e89
    resourceVersion: "730062"
    uid: 0aa8b586-0ffd-4860-81c2-c0e4fbf9e358
  spec:
    containers:
    - image: 192.168.2.225:5000/serveurdecouverte:0.0.1-SNAPSHOT
      imagePullPolicy: Always
      name: registry-backend
      ports:
      - containerPort: 8761
        name: api
        protocol: TCP
      resources:
        limits:
          cpu: "2"
          memory: 1Gi
        requests:
          cpu: 300m
          memory: 256Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tjnr4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: regcred
    nodeName: worker1erpnode
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-tjnr4
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T17:17:42Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T17:17:41Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T17:17:42Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T17:17:42Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T17:17:41Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ad6070a2f93e9feb11a6d7fe2a2776d6320091b1941c9aa90bda34a51ea079da
      image: 192.168.2.225:5000/serveurdecouverte:0.0.1-SNAPSHOT
      imageID: 192.168.2.225:5000/serveurdecouverte@sha256:bcfa727f3cf2573704e90bb9a030421539910526b3ca6559b4bc28606397e8bb
      lastState: {}
      name: registry-backend
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-24T17:17:42Z"
    hostIP: 10.5.1.69
    hostIPs:
    - ip: 10.5.1.69
    phase: Running
    podIP: 10.244.1.68
    podIPs:
    - ip: 10.244.1.68
    qosClass: Burstable
    startTime: "2025-06-24T17:17:41Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-24T23:21:19Z"
    generateName: sirh-backend-8d4c44f9-
    labels:
      app: sirh-backend
      pod-template-hash: 8d4c44f9
      type: backend
    name: sirh-backend-8d4c44f9-lvpvj
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: sirh-backend-8d4c44f9
      uid: e24c0837-ac2b-4b1c-b122-97486b6eef43
    resourceVersion: "764518"
    uid: 0daf2b1b-dacb-4563-b2c9-2efe2e29567c
  spec:
    containers:
    - env:
      - name: ORACLEHOSTSIRH
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-host-sirh
            name: oracle-config-sirh
      - name: ORACLEPORTSIRH
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-port-sirh
            name: oracle-config-sirh
      - name: ORACLEUSERSIRH
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-user-sirh
            name: oracle-config-sirh
      - name: ORACLEPASSWORDSIRH
        valueFrom:
          secretKeyRef:
            key: password
            name: oracle-instance-password-sirh
      - name: ORACLEHOSTPG
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-host-pg
            name: oracle-config-parametrageglobal
      - name: ORACLEPORTPG
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-port-pg
            name: oracle-config-parametrageglobal
      - name: ORACLEUSERPG
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-user-pg
            name: oracle-config-parametrageglobal
      - name: ORACLEPASSWORDPG
        valueFrom:
          secretKeyRef:
            key: password
            name: oracle-instance-password-paramglobal
      image: 192.168.2.225:5000/sirh:0.0.1-SNAPSHOT
      imagePullPolicy: Always
      name: sirh-backend
      ports:
      - containerPort: 9099
        name: api
        protocol: TCP
      resources:
        limits:
          cpu: "2"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6pnrv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: regcred
    nodeName: worker1erpnode
    nodeSelector:
      kubernetes.io/hostname: worker1erpnode
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-6pnrv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T23:21:21Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T23:21:19Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T23:21:21Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T23:21:21Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T23:21:19Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://db9219ed1df48d3d3ddbad0e4826ef1f1180e5ae451d63a3c4d71d28c610ceef
      image: 192.168.2.225:5000/sirh:0.0.1-SNAPSHOT
      imageID: 192.168.2.225:5000/sirh@sha256:591675fc5001e539118ff65837b90c0018a1a340be73768e19695c30ac3beae2
      lastState: {}
      name: sirh-backend
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-24T23:21:21Z"
    hostIP: 10.5.1.69
    hostIPs:
    - ip: 10.5.1.69
    phase: Running
    podIP: 10.244.1.88
    podIPs:
    - ip: 10.244.1.88
    qosClass: Burstable
    startTime: "2025-06-24T23:21:19Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T21:06:06Z"
    generateName: sirh-front-deployment-846fcfb76c-
    labels:
      app: sirh-front
      pod-template-hash: 846fcfb76c
      type: front
    name: sirh-front-deployment-846fcfb76c-6fcsx
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: sirh-front-deployment-846fcfb76c
      uid: cea2898f-75b6-4def-a91d-ba998efde439
    resourceVersion: "883361"
    uid: d0ef82ab-17a0-4d73-8f5c-51f28b863a0b
  spec:
    containers:
    - image: 192.168.2.225:5000/frontsirh:1
      imagePullPolicy: Always
      name: sirh-front
      ports:
      - containerPort: 80
        name: api
        protocol: TCP
      resources:
        limits:
          cpu: "3"
          memory: 4Gi
        requests:
          cpu: 300m
          memory: 2046Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pw9n4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: regcred
    nodeName: worker2erpnode
    nodeSelector:
      kubernetes.io/hostname: worker2erpnode
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-pw9n4
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T21:06:08Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T21:06:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T21:06:08Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T21:06:08Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T21:06:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f2e7a19aa0c8656cf8546bab44c6735708999dc2d914d600a0eec39f991cf856
      image: 192.168.2.225:5000/frontsirh:1
      imageID: 192.168.2.225:5000/frontsirh@sha256:ba3839e6f057e77baf8d86d1754e60b8d3fbcc5518fa17b41ff2cdbdb1e9c711
      lastState: {}
      name: sirh-front
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T21:06:07Z"
    hostIP: 10.5.1.70
    hostIPs:
    - ip: 10.5.1.70
    phase: Running
    podIP: 10.244.2.90
    podIPs:
    - ip: 10.244.2.90
    qosClass: Burstable
    startTime: "2025-06-25T21:06:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T14:02:51Z"
    generateName: tresorerie-backend-5546878dfb-
    labels:
      app: tresorerie-backend
      pod-template-hash: 5546878dfb
      type: backend
    name: tresorerie-backend-5546878dfb-ff8mq
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: tresorerie-backend-5546878dfb
      uid: 08345f11-86e6-4ed2-a862-9afb02ee1f1d
    resourceVersion: "844662"
    uid: 37d8a0ba-bc31-4860-97e1-a4188bac7be4
  spec:
    containers:
    - env:
      - name: ORACLEHOSTIMM
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-host-imm
            name: oracle-config-imm
      - name: ORACLEPORTIMM
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-port-imm
            name: oracle-config-imm
      - name: ORACLEUSERIMM
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-user-imm
            name: oracle-config-imm
      - name: ORACLEPASSWORDIMM
        valueFrom:
          secretKeyRef:
            key: password
            name: oracle-instance-password-imm
      - name: ORACLEHOSTPG
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-host-pg
            name: oracle-config-pg
      - name: ORACLEPORTPG
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-port-pg
            name: oracle-config-pg
      - name: ORACLEUSERPG
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-user-pg
            name: oracle-config-pg
      - name: ORACLEPASSWORDPG
        valueFrom:
          secretKeyRef:
            key: password
            name: oracle-instance-password-pg
      - name: ORACLEHOSTMANDAT
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-host-mandat
            name: oracle-config-mandat
      - name: ORACLEPORTMANDAT
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-port-mandat
            name: oracle-config-mandat
      - name: ORACLEUSERMANDAT
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-user-mandat
            name: oracle-config-mandat
      - name: ORACLEPASSWORDMANDAT
        valueFrom:
          secretKeyRef:
            key: password
            name: oracle-instance-password-mandat
      - name: ORACLEHOSTTRACACTION
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-host-tracaction
            name: oracle-config-tracaction
      - name: ORACLEPORTTRACACTION
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-port-tracaction
            name: oracle-config-tracaction
      - name: ORACLEUSERTRACACTION
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-user-tracaction
            name: oracle-config-tracaction
      - name: ORACLEPASSWORDTRACACTION
        valueFrom:
          secretKeyRef:
            key: password
            name: oracle-instance-password-tracaction
      - name: ORACLEHOSTCOMPTA
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-host-comptabilite
            name: oracle-config-comptabilite
      - name: ORACLEPORTCOMPTA
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-port-comptabilite
            name: oracle-config-comptabilite
      - name: ORACLEUSERCOMPTA
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-user-comptabilite
            name: oracle-config-comptabilite
      - name: ORACLEPASSWORDCOMPTA
        valueFrom:
          secretKeyRef:
            key: password
            name: oracle-instance-password-comptabilite
      - name: ORACLEHOSTCOTISATION
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-host-cotisation
            name: oracle-config-cotisation
      - name: ORACLEPORTCOTISATION
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-port-cotisation
            name: oracle-config-cotisation
      - name: ORACLEUSERCOTISATION
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-user-cotisation
            name: oracle-config-cotisation
      - name: ORACLEPASSWORDCOTISATION
        valueFrom:
          secretKeyRef:
            key: password
            name: oracle-instance-password-cotisation
      - name: ORACLEHOSTTRESORERIE
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-host-tresorerie
            name: oracle-config-tresorerie
      - name: ORACLEPORTTRESORERIE
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-port-tresorerie
            name: oracle-config-tresorerie
      - name: ORACLEUSERTRESORERIE
        valueFrom:
          configMapKeyRef:
            key: default.oracle-instance-user-tresorerie
            name: oracle-config-tresorerie
      - name: ORACLEPASSWORDTRESORERIE
        valueFrom:
          secretKeyRef:
            key: password
            name: oracle-instance-password-tresorerie
      image: 192.168.2.225:5000/tresorerie:0.0.1-SNAPSHOT
      imagePullPolicy: Always
      name: tresorerie-backend
      ports:
      - containerPort: 8094
        name: api
        protocol: TCP
      resources:
        limits:
          cpu: "3"
          memory: 4Gi
        requests:
          cpu: 200m
          memory: 1Gi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-k2m2w
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: regcred
    nodeName: worker1erpnode
    nodeSelector:
      kubernetes.io/hostname: worker1erpnode
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-k2m2w
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T14:02:54Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T14:02:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T14:03:08Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T14:03:08Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T14:02:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0e61e8c02cc5eb066f522658981f159203cdb704685092394eed8f894c4c8a54
      image: 192.168.2.225:5000/tresorerie:0.0.1-SNAPSHOT
      imageID: 192.168.2.225:5000/tresorerie@sha256:5395e734e6100b1b3829812dbc8f5f1a5256a96cd7d7d0799b3b209a9cbc0b90
      lastState:
        terminated:
          containerID: containerd://20c062f4e380bbeef6a8e18a3f06b0f46f9533d1f49cfb89a2dd305ee406ac67
          exitCode: 1
          finishedAt: "2025-06-25T14:03:06Z"
          reason: Error
          startedAt: "2025-06-25T14:02:53Z"
      name: tresorerie-backend
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-06-25T14:03:07Z"
    hostIP: 10.5.1.69
    hostIPs:
    - ip: 10.5.1.69
    phase: Running
    podIP: 10.244.1.98
    podIPs:
    - ip: 10.244.1.98
    qosClass: Burstable
    startTime: "2025-06-25T14:02:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-24T23:07:27Z"
    generateName: kafka-broker-79c9658c46-
    labels:
      app: kafka-broker
      pod-template-hash: 79c9658c46
    name: kafka-broker-79c9658c46-58g9w
    namespace: kafka
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kafka-broker-79c9658c46
      uid: 509c553d-ade5-4b0a-87d7-6455d721dd99
    resourceVersion: "763163"
    uid: 8bf6b867-e6dc-4710-a2ef-d00055ddc082
  spec:
    containers:
    - env:
      - name: KAFKA_BROKER_ID
        value: "1"
      - name: KAFKA_ZOOKEEPER_CONNECT
        value: zookeeper-service:2181
      - name: KAFKA_LISTENERS
        value: PLAINTEXT://0.0.0.0:29092
      - name: KAFKA_ADVERTISED_LISTENERS
        value: PLAINTEXT://kafka-service.kafka:29092
      image: 192.168.2.225:5000/wurstmeister/kafka
      imagePullPolicy: IfNotPresent
      name: kafka-broker
      ports:
      - containerPort: 29092
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4ppmw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker1erpnode
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-4ppmw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T23:07:28Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T23:07:27Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T23:07:28Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T23:07:28Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T23:07:27Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c47cdeffb5f8cfd1b029125390826857fa552b0dcb170582818b08ae61a31943
      image: 192.168.2.225:5000/wurstmeister/kafka:latest
      imageID: 192.168.2.225:5000/wurstmeister/kafka@sha256:21cbf472c22beda18b8b088c284e010a195100d32c245e6d93121296f25a24c7
      lastState: {}
      name: kafka-broker
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-24T23:07:28Z"
    hostIP: 10.5.1.69
    hostIPs:
    - ip: 10.5.1.69
    phase: Running
    podIP: 10.244.1.86
    podIPs:
    - ip: 10.244.1.86
    qosClass: BestEffort
    startTime: "2025-06-24T23:07:27Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-22T11:53:48Z"
    generateName: zookeeper-84654f8f94-
    labels:
      app: zookeeper
      pod-template-hash: 84654f8f94
    name: zookeeper-84654f8f94-4pnh9
    namespace: kafka
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: zookeeper-84654f8f94
      uid: c0942076-c660-4dff-a353-bd860b2535aa
    resourceVersion: "721151"
    uid: 84d6dd90-5df2-493f-a88d-7f852e2d9628
  spec:
    containers:
    - image: 192.168.2.225:5000/wurstmeister/zookeeper
      imagePullPolicy: IfNotPresent
      name: zookeeper
      ports:
      - containerPort: 2181
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gqx4p
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker1erpnode
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-gqx4p
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T11:53:48Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T11:53:48Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T11:53:48Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T11:53:48Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T11:53:48Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://88c2c88f12b48f664dd69a1b85d71eee2e4a343017aec49e5e7d7d9369d35967
      image: 192.168.2.225:5000/wurstmeister/zookeeper:latest
      imageID: 192.168.2.225:5000/wurstmeister/zookeeper@sha256:83356b7df6f52cc1b9ca941b71dbfa9d1b092413e1ec24546ae68f5f795f6796
      lastState: {}
      name: zookeeper
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-22T11:53:48Z"
    hostIP: 10.5.1.69
    hostIPs:
    - ip: 10.5.1.69
    phase: Running
    podIP: 10.244.1.22
    podIPs:
    - ip: 10.244.1.22
    qosClass: BestEffort
    startTime: "2025-06-22T11:53:48Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-20T15:30:47Z"
    generateName: kube-flannel-ds-
    labels:
      app: flannel
      controller-revision-hash: 7f55c9d97d
      k8s-app: flannel
      pod-template-generation: "1"
      tier: node
    name: kube-flannel-ds-8dxg9
    namespace: kube-flannel
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-flannel-ds
      uid: 3ba1c98b-b5f9-404d-856c-e76acabf5fc4
    resourceVersion: "721106"
    uid: 76a43cb4-143f-4c73-ac5b-1a339745aa2d
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - worker2erpnode
    containers:
    - args:
      - --ip-masq
      - --kube-subnet-mgr
      command:
      - /opt/bin/flanneld
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: EVENT_QUEUE_DEPTH
        value: "5000"
      image: ghcr.io/flannel-io/flannel:v0.27.0
      imagePullPolicy: IfNotPresent
      name: kube-flannel
      resources:
        requests:
          cpu: 100m
          memory: 50Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
        privileged: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/flannel
        name: run
      - mountPath: /etc/kube-flannel/
        name: flannel-cfg
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jg66j
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - args:
      - -f
      - /flannel
      - /opt/cni/bin/flannel
      command:
      - cp
      image: ghcr.io/flannel-io/flannel-cni-plugin:v1.7.1-flannel1
      imagePullPolicy: IfNotPresent
      name: install-cni-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/cni/bin
        name: cni-plugin
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jg66j
        readOnly: true
    - args:
      - -f
      - /etc/kube-flannel/cni-conf.json
      - /etc/cni/net.d/10-flannel.conflist
      command:
      - cp
      image: ghcr.io/flannel-io/flannel:v0.27.0
      imagePullPolicy: IfNotPresent
      name: install-cni
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/cni/net.d
        name: cni
      - mountPath: /etc/kube-flannel/
        name: flannel-cfg
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jg66j
        readOnly: true
    nodeName: worker2erpnode
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: flannel
    serviceAccountName: flannel
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /run/flannel
        type: ""
      name: run
    - hostPath:
        path: /opt/cni/bin
        type: ""
      name: cni-plugin
    - hostPath:
        path: /etc/cni/net.d
        type: ""
      name: cni
    - configMap:
        defaultMode: 420
        name: kube-flannel-cfg
      name: flannel-cfg
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - name: kube-api-access-jg66j
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T15:31:32Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T15:32:05Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T15:32:06Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T15:32:06Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T15:30:47Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://effabb7ab6b669444727068a0ee2bf9c35694da7af93dd77c32ef760a8f1719e
      image: ghcr.io/flannel-io/flannel:v0.27.0
      imageID: ghcr.io/flannel-io/flannel@sha256:1144f69c99e5c2ee7f02369e5b2ad669b6956efbb091353df1980bf8910767ff
      lastState: {}
      name: kube-flannel
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-20T15:32:05Z"
    hostIP: 10.5.1.70
    hostIPs:
    - ip: 10.5.1.70
    initContainerStatuses:
    - containerID: containerd://3ba7fd15dedb3b2c2d47261a1eb199711cbd0e13d3e41ee9e007dd5b36052757
      image: ghcr.io/flannel-io/flannel-cni-plugin:v1.7.1-flannel1
      imageID: ghcr.io/flannel-io/flannel-cni-plugin@sha256:cb3176a2c9eae5fa0acd7f45397e706eacb4577dac33cad89f93b775ff5611df
      lastState: {}
      name: install-cni-plugin
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://3ba7fd15dedb3b2c2d47261a1eb199711cbd0e13d3e41ee9e007dd5b36052757
          exitCode: 0
          finishedAt: "2025-06-20T15:31:32Z"
          reason: Completed
          startedAt: "2025-06-20T15:31:32Z"
    - containerID: containerd://0b66dadebbdc3ed926645ab82226a43009fdaf7b1d441f0dbe85b5f6d6588429
      image: ghcr.io/flannel-io/flannel:v0.27.0
      imageID: ghcr.io/flannel-io/flannel@sha256:1144f69c99e5c2ee7f02369e5b2ad669b6956efbb091353df1980bf8910767ff
      lastState: {}
      name: install-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://0b66dadebbdc3ed926645ab82226a43009fdaf7b1d441f0dbe85b5f6d6588429
          exitCode: 0
          finishedAt: "2025-06-20T15:32:05Z"
          reason: Completed
          startedAt: "2025-06-20T15:32:05Z"
    phase: Running
    podIP: 10.5.1.70
    podIPs:
    - ip: 10.5.1.70
    qosClass: Burstable
    startTime: "2025-06-20T15:30:49Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-20T14:40:06Z"
    generateName: kube-flannel-ds-
    labels:
      app: flannel
      controller-revision-hash: 7f55c9d97d
      k8s-app: flannel
      pod-template-generation: "1"
      tier: node
    name: kube-flannel-ds-8l4qz
    namespace: kube-flannel
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-flannel-ds
      uid: 3ba1c98b-b5f9-404d-856c-e76acabf5fc4
    resourceVersion: "721177"
    uid: f2c9e59c-f7a4-42cb-94e1-a0cf51cd219e
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - worker1erpnode
    containers:
    - args:
      - --ip-masq
      - --kube-subnet-mgr
      command:
      - /opt/bin/flanneld
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: EVENT_QUEUE_DEPTH
        value: "5000"
      image: ghcr.io/flannel-io/flannel:v0.27.0
      imagePullPolicy: IfNotPresent
      name: kube-flannel
      resources:
        requests:
          cpu: 100m
          memory: 50Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
        privileged: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/flannel
        name: run
      - mountPath: /etc/kube-flannel/
        name: flannel-cfg
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gx6vd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - args:
      - -f
      - /flannel
      - /opt/cni/bin/flannel
      command:
      - cp
      image: ghcr.io/flannel-io/flannel-cni-plugin:v1.7.1-flannel1
      imagePullPolicy: IfNotPresent
      name: install-cni-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/cni/bin
        name: cni-plugin
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gx6vd
        readOnly: true
    - args:
      - -f
      - /etc/kube-flannel/cni-conf.json
      - /etc/cni/net.d/10-flannel.conflist
      command:
      - cp
      image: ghcr.io/flannel-io/flannel:v0.27.0
      imagePullPolicy: IfNotPresent
      name: install-cni
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/cni/net.d
        name: cni
      - mountPath: /etc/kube-flannel/
        name: flannel-cfg
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gx6vd
        readOnly: true
    nodeName: worker1erpnode
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: flannel
    serviceAccountName: flannel
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /run/flannel
        type: ""
      name: run
    - hostPath:
        path: /opt/cni/bin
        type: ""
      name: cni-plugin
    - hostPath:
        path: /etc/cni/net.d
        type: ""
      name: cni
    - configMap:
        defaultMode: 420
        name: kube-flannel-cfg
      name: flannel-cfg
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - name: kube-api-access-gx6vd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T14:59:09Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T14:59:34Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T14:59:35Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T14:59:35Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T14:40:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7e1d1fc3386a5c460646205c04bd0ae5d47a2ba93931748b96ee62e9320c68e8
      image: ghcr.io/flannel-io/flannel:v0.27.0
      imageID: ghcr.io/flannel-io/flannel@sha256:1144f69c99e5c2ee7f02369e5b2ad669b6956efbb091353df1980bf8910767ff
      lastState: {}
      name: kube-flannel
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-20T14:59:34Z"
    hostIP: 10.5.1.69
    hostIPs:
    - ip: 10.5.1.69
    initContainerStatuses:
    - containerID: containerd://1f046fe1008b427c8ffac85cd2890abd1fdc6885c34c3341987b81cf39f2c0e0
      image: ghcr.io/flannel-io/flannel-cni-plugin:v1.7.1-flannel1
      imageID: ghcr.io/flannel-io/flannel-cni-plugin@sha256:cb3176a2c9eae5fa0acd7f45397e706eacb4577dac33cad89f93b775ff5611df
      lastState: {}
      name: install-cni-plugin
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://1f046fe1008b427c8ffac85cd2890abd1fdc6885c34c3341987b81cf39f2c0e0
          exitCode: 0
          finishedAt: "2025-06-20T14:59:09Z"
          reason: Completed
          startedAt: "2025-06-20T14:59:09Z"
    - containerID: containerd://4c10cda59d25f5f346254d51d623fa1c3c6688c5443514b9e6beaf9aa265fe13
      image: ghcr.io/flannel-io/flannel:v0.27.0
      imageID: ghcr.io/flannel-io/flannel@sha256:1144f69c99e5c2ee7f02369e5b2ad669b6956efbb091353df1980bf8910767ff
      lastState: {}
      name: install-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://4c10cda59d25f5f346254d51d623fa1c3c6688c5443514b9e6beaf9aa265fe13
          exitCode: 0
          finishedAt: "2025-06-20T14:59:33Z"
          reason: Completed
          startedAt: "2025-06-20T14:59:33Z"
    phase: Running
    podIP: 10.5.1.69
    podIPs:
    - ip: 10.5.1.69
    qosClass: Burstable
    startTime: "2025-06-20T14:40:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-20T14:40:06Z"
    generateName: kube-flannel-ds-
    labels:
      app: flannel
      controller-revision-hash: 7f55c9d97d
      k8s-app: flannel
      pod-template-generation: "1"
      tier: node
    name: kube-flannel-ds-b97g8
    namespace: kube-flannel
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-flannel-ds
      uid: 3ba1c98b-b5f9-404d-856c-e76acabf5fc4
    resourceVersion: "721142"
    uid: a28b975b-2947-4843-850d-29ada93b6966
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - mastererpnode
    containers:
    - args:
      - --ip-masq
      - --kube-subnet-mgr
      command:
      - /opt/bin/flanneld
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: EVENT_QUEUE_DEPTH
        value: "5000"
      image: ghcr.io/flannel-io/flannel:v0.27.0
      imagePullPolicy: IfNotPresent
      name: kube-flannel
      resources:
        requests:
          cpu: 100m
          memory: 50Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
        privileged: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/flannel
        name: run
      - mountPath: /etc/kube-flannel/
        name: flannel-cfg
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l2t58
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - args:
      - -f
      - /flannel
      - /opt/cni/bin/flannel
      command:
      - cp
      image: ghcr.io/flannel-io/flannel-cni-plugin:v1.7.1-flannel1
      imagePullPolicy: IfNotPresent
      name: install-cni-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/cni/bin
        name: cni-plugin
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l2t58
        readOnly: true
    - args:
      - -f
      - /etc/kube-flannel/cni-conf.json
      - /etc/cni/net.d/10-flannel.conflist
      command:
      - cp
      image: ghcr.io/flannel-io/flannel:v0.27.0
      imagePullPolicy: IfNotPresent
      name: install-cni
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/cni/net.d
        name: cni
      - mountPath: /etc/kube-flannel/
        name: flannel-cfg
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l2t58
        readOnly: true
    nodeName: mastererpnode
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: flannel
    serviceAccountName: flannel
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /run/flannel
        type: ""
      name: run
    - hostPath:
        path: /opt/cni/bin
        type: ""
      name: cni-plugin
    - hostPath:
        path: /etc/cni/net.d
        type: ""
      name: cni
    - configMap:
        defaultMode: 420
        name: kube-flannel-cfg
      name: flannel-cfg
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - name: kube-api-access-l2t58
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T14:40:07Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T14:40:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T14:40:09Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T14:40:09Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T14:40:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://29e7ddce107528dcf1426084732713bb1e37e0473f16d76c0c8552297144a0c0
      image: ghcr.io/flannel-io/flannel:v0.27.0
      imageID: ghcr.io/flannel-io/flannel@sha256:1144f69c99e5c2ee7f02369e5b2ad669b6956efbb091353df1980bf8910767ff
      lastState: {}
      name: kube-flannel
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-20T14:40:08Z"
    hostIP: 10.5.1.66
    hostIPs:
    - ip: 10.5.1.66
    initContainerStatuses:
    - containerID: containerd://564391a2fff0b698975cdc8cf3ca3f17f3b05ee7d1af182455304ee3d1335aab
      image: ghcr.io/flannel-io/flannel-cni-plugin:v1.7.1-flannel1
      imageID: ghcr.io/flannel-io/flannel-cni-plugin@sha256:cb3176a2c9eae5fa0acd7f45397e706eacb4577dac33cad89f93b775ff5611df
      lastState: {}
      name: install-cni-plugin
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://564391a2fff0b698975cdc8cf3ca3f17f3b05ee7d1af182455304ee3d1335aab
          exitCode: 0
          finishedAt: "2025-06-20T14:40:07Z"
          reason: Completed
          startedAt: "2025-06-20T14:40:06Z"
    - containerID: containerd://cf1ebea8d81f83fd982b7754e697c169a86e2de9416ae05d6c4c9965044a2781
      image: ghcr.io/flannel-io/flannel:v0.27.0
      imageID: ghcr.io/flannel-io/flannel@sha256:1144f69c99e5c2ee7f02369e5b2ad669b6956efbb091353df1980bf8910767ff
      lastState: {}
      name: install-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://cf1ebea8d81f83fd982b7754e697c169a86e2de9416ae05d6c4c9965044a2781
          exitCode: 0
          finishedAt: "2025-06-20T14:40:07Z"
          reason: Completed
          startedAt: "2025-06-20T14:40:07Z"
    phase: Running
    podIP: 10.5.1.66
    podIPs:
    - ip: 10.5.1.66
    qosClass: Burstable
    startTime: "2025-06-20T14:40:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-21T10:53:21Z"
    generateName: coredns-55cb58b774-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 55cb58b774
    name: coredns-55cb58b774-9rj8f
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-55cb58b774
      uid: cef6033e-ff18-4db5-a99f-eb0bb5920fc6
    resourceVersion: "721061"
    uid: 53e2ed62-560e-4803-bff6-f606b13d67f9
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: registry.k8s.io/coredns/coredns:v1.11.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-724fc
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: worker2erpnode
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - name: kube-api-access-724fc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T10:54:40Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T10:53:21Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T10:54:40Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T10:54:40Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T10:53:21Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d7223aa4e17c38b8046c73231e74c1ffdc1b450b5715eb205fb3869fd1dffe64
      image: registry.k8s.io/coredns/coredns:v1.11.3
      imageID: registry.k8s.io/coredns/coredns@sha256:9caabbf6238b189a65d0d6e6ac138de60d6a1c419e5a341fbbb7c78382559c6e
      lastState: {}
      name: coredns
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-21T10:54:40Z"
    hostIP: 10.5.1.70
    hostIPs:
    - ip: 10.5.1.70
    phase: Running
    podIP: 10.244.2.7
    podIPs:
    - ip: 10.244.2.7
    qosClass: Burstable
    startTime: "2025-06-21T10:53:21Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-21T10:53:21Z"
    generateName: coredns-55cb58b774-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 55cb58b774
    name: coredns-55cb58b774-xxdb4
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-55cb58b774
      uid: cef6033e-ff18-4db5-a99f-eb0bb5920fc6
    resourceVersion: "721086"
    uid: 6198f126-2789-458e-b80d-5955cc4b4f9f
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: registry.k8s.io/coredns/coredns:v1.11.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qtdlg
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: worker1erpnode
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - name: kube-api-access-qtdlg
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T10:54:53Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T10:53:21Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T10:54:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T10:54:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T10:53:21Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ad8960f18ef359545afa7d24aeae22f9527d9069d18446d9c437f8ceebcb19aa
      image: registry.k8s.io/coredns/coredns:v1.11.3
      imageID: registry.k8s.io/coredns/coredns@sha256:9caabbf6238b189a65d0d6e6ac138de60d6a1c419e5a341fbbb7c78382559c6e
      lastState: {}
      name: coredns
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-21T10:54:53Z"
    hostIP: 10.5.1.69
    hostIPs:
    - ip: 10.5.1.69
    phase: Running
    podIP: 10.244.1.7
    podIPs:
    - ip: 10.244.1.7
    qosClass: Burstable
    startTime: "2025-06-21T10:53:21Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubeadm.kubernetes.io/etcd.advertise-client-urls: https://192.168.2.221:2379
      kubernetes.io/config.hash: fea8d142670c911c1de8b73586f9d7ab
      kubernetes.io/config.mirror: fea8d142670c911c1de8b73586f9d7ab
      kubernetes.io/config.seen: "2025-06-21T10:51:40.972031046Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2025-06-21T10:52:48Z"
    labels:
      component: etcd
      tier: control-plane
    name: etcd-mastererpnode
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: mastererpnode
      uid: 2de27e0f-ce4b-4b84-80ae-9c80c451509e
    resourceVersion: "721050"
    uid: a4b963dd-4bf4-433a-b0c3-5b7dfcc3d30f
  spec:
    containers:
    - command:
      - etcd
      - --advertise-client-urls=https://192.168.2.221:2379
      - --cert-file=/etc/kubernetes/pki/etcd/server.crt
      - --client-cert-auth=true
      - --data-dir=/var/lib/etcd
      - --experimental-initial-corrupt-check=true
      - --experimental-watch-progress-notify-interval=5s
      - --initial-advertise-peer-urls=https://192.168.2.221:2380
      - --initial-cluster=mastererpnode=https://192.168.2.221:2380
      - --key-file=/etc/kubernetes/pki/etcd/server.key
      - --listen-client-urls=https://127.0.0.1:2379,https://192.168.2.221:2379
      - --listen-metrics-urls=http://127.0.0.1:2381
      - --listen-peer-urls=https://192.168.2.221:2380
      - --name=mastererpnode
      - --peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt
      - --peer-client-cert-auth=true
      - --peer-key-file=/etc/kubernetes/pki/etcd/peer.key
      - --peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt
      - --snapshot-count=10000
      - --trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt
      image: registry.k8s.io/etcd:3.5.15-0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /health?exclude=NOSPACE&serializable=true
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: etcd
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /health?serializable=false
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/etcd
        name: etcd-data
      - mountPath: /etc/kubernetes/pki/etcd
        name: etcd-certs
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: mastererpnode
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/pki/etcd
        type: DirectoryOrCreate
      name: etcd-certs
    - hostPath:
        path: /var/lib/etcd
        type: DirectoryOrCreate
      name: etcd-data
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T10:53:40Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T10:53:40Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T10:53:42Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T10:53:42Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T10:53:40Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://896393ec980f192505b0fa1edb32b6d8e6d1faef4c5daaba6617f1fc4791ca4b
      image: registry.k8s.io/etcd:3.5.15-0
      imageID: registry.k8s.io/etcd@sha256:a6dc63e6e8cfa0307d7851762fa6b629afb18f28d8aa3fab5a6e91b4af60026a
      lastState: {}
      name: etcd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-21T10:52:28Z"
    hostIP: 10.5.1.66
    hostIPs:
    - ip: 10.5.1.66
    phase: Running
    podIP: 10.5.1.66
    podIPs:
    - ip: 10.5.1.66
    qosClass: Burstable
    startTime: "2025-06-21T10:53:40Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint: 192.168.2.221:6443
      kubernetes.io/config.hash: 7e2568cf903ed29e09cac770c2207937
      kubernetes.io/config.mirror: 7e2568cf903ed29e09cac770c2207937
      kubernetes.io/config.seen: "2025-06-20T14:09:25.374714735Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2025-06-20T14:09:25Z"
    labels:
      component: kube-apiserver
      tier: control-plane
    name: kube-apiserver-mastererpnode
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: mastererpnode
      uid: 2de27e0f-ce4b-4b84-80ae-9c80c451509e
    resourceVersion: "720999"
    uid: 98619d4a-8556-4d28-92a9-da088f222340
  spec:
    containers:
    - command:
      - kube-apiserver
      - --advertise-address=192.168.2.221
      - --allow-privileged=true
      - --authorization-mode=Node,RBAC
      - --client-ca-file=/etc/kubernetes/pki/ca.crt
      - --enable-admission-plugins=NodeRestriction
      - --enable-bootstrap-token-auth=true
      - --etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt
      - --etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt
      - --etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key
      - --etcd-servers=https://127.0.0.1:2379
      - --kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt
      - --kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt
      - --proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key
      - --requestheader-allowed-names=front-proxy-client
      - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt
      - --requestheader-extra-headers-prefix=X-Remote-Extra-
      - --requestheader-group-headers=X-Remote-Group
      - --requestheader-username-headers=X-Remote-User
      - --secure-port=6443
      - --service-account-issuer=https://kubernetes.default.svc.cluster.local
      - --service-account-key-file=/etc/kubernetes/pki/sa.pub
      - --service-account-signing-key-file=/etc/kubernetes/pki/sa.key
      - --service-cluster-ip-range=10.96.0.0/12
      - --tls-cert-file=/etc/kubernetes/pki/apiserver.crt
      - --tls-private-key-file=/etc/kubernetes/pki/apiserver.key
      image: registry.k8s.io/kube-apiserver:v1.30.14
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 192.168.2.221
          path: /livez
          port: 6443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-apiserver
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 192.168.2.221
          path: /readyz
          port: 6443
          scheme: HTTPS
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 15
      resources:
        requests:
          cpu: 250m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 192.168.2.221
          path: /livez
          port: 6443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ca-certificates
        name: etc-ca-certificates
        readOnly: true
      - mountPath: /etc/pki
        name: etc-pki
        readOnly: true
      - mountPath: /etc/kubernetes/pki
        name: k8s-certs
        readOnly: true
      - mountPath: /usr/local/share/ca-certificates
        name: usr-local-share-ca-certificates
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: mastererpnode
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /etc/pki
        type: DirectoryOrCreate
      name: etc-pki
    - hostPath:
        path: /etc/kubernetes/pki
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T10:53:40Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T10:53:40Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T10:53:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T10:53:41Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T10:53:40Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ef03ddb0fde1871d802c2ede3a9c18042e51186a3ddddb7ea842470880d0e707
      image: registry.k8s.io/kube-apiserver:v1.30.14
      imageID: registry.k8s.io/kube-apiserver@sha256:be079fe85d6b6804b89ab4fdd6a35cd56341e99ea809881cfe37962f440dc1be
      lastState: {}
      name: kube-apiserver
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-06-20T14:09:21Z"
    hostIP: 10.5.1.66
    hostIPs:
    - ip: 10.5.1.66
    phase: Running
    podIP: 10.5.1.66
    podIPs:
    - ip: 10.5.1.66
    qosClass: Burstable
    startTime: "2025-06-21T10:53:40Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: cbd8eaf458adeb2d311f68337a66ec4c
      kubernetes.io/config.mirror: cbd8eaf458adeb2d311f68337a66ec4c
      kubernetes.io/config.seen: "2025-06-20T14:09:25.374715624Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2025-06-20T14:09:25Z"
    labels:
      component: kube-controller-manager
      tier: control-plane
    name: kube-controller-manager-mastererpnode
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: mastererpnode
      uid: 2de27e0f-ce4b-4b84-80ae-9c80c451509e
    resourceVersion: "721157"
    uid: b058e23c-44ea-4cd0-aa5c-5ead9d76e0cd
  spec:
    containers:
    - command:
      - kube-controller-manager
      - --allocate-node-cidrs=true
      - --authentication-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --authorization-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --bind-address=127.0.0.1
      - --client-ca-file=/etc/kubernetes/pki/ca.crt
      - --cluster-cidr=10.244.0.0/16
      - --cluster-name=kubernetes
      - --cluster-signing-cert-file=/etc/kubernetes/pki/ca.crt
      - --cluster-signing-key-file=/etc/kubernetes/pki/ca.key
      - --controllers=*,bootstrapsigner,tokencleaner
      - --kubeconfig=/etc/kubernetes/controller-manager.conf
      - --leader-elect=true
      - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt
      - --root-ca-file=/etc/kubernetes/pki/ca.crt
      - --service-account-private-key-file=/etc/kubernetes/pki/sa.key
      - --service-cluster-ip-range=10.96.0.0/12
      - --use-service-account-credentials=true
      image: registry.k8s.io/kube-controller-manager:v1.30.14
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-controller-manager
      resources:
        requests:
          cpu: 200m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ca-certificates
        name: etc-ca-certificates
        readOnly: true
      - mountPath: /etc/pki
        name: etc-pki
        readOnly: true
      - mountPath: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        name: flexvolume-dir
      - mountPath: /etc/kubernetes/pki
        name: k8s-certs
        readOnly: true
      - mountPath: /etc/kubernetes/controller-manager.conf
        name: kubeconfig
        readOnly: true
      - mountPath: /usr/local/share/ca-certificates
        name: usr-local-share-ca-certificates
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: mastererpnode
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /etc/pki
        type: DirectoryOrCreate
      name: etc-pki
    - hostPath:
        path: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        type: DirectoryOrCreate
      name: flexvolume-dir
    - hostPath:
        path: /etc/kubernetes/pki
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /etc/kubernetes/controller-manager.conf
        type: FileOrCreate
      name: kubeconfig
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T10:53:40Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T10:53:40Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T10:53:46Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T10:53:46Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T10:53:40Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://2edfe24172189f93a56515e16d1895b9a61c9c31f98d219395cff37bb279d745
      image: registry.k8s.io/kube-controller-manager:v1.30.14
      imageID: registry.k8s.io/kube-controller-manager@sha256:eba41d76b6af10af941147e2b449c6d68eaa42c1fd0fc8f0ab8ec2ff0ab84964
      lastState:
        terminated:
          containerID: containerd://fb388c0f4c754befeb77cc51503d528408ca0d64e8799cfc1ca27aac577dba9e
          exitCode: 1
          finishedAt: "2025-06-21T10:51:52Z"
          reason: Error
          startedAt: "2025-06-20T14:09:21Z"
      name: kube-controller-manager
      ready: true
      restartCount: 13
      started: true
      state:
        running:
          startedAt: "2025-06-21T10:51:53Z"
    hostIP: 10.5.1.66
    hostIPs:
    - ip: 10.5.1.66
    phase: Running
    podIP: 10.5.1.66
    podIPs:
    - ip: 10.5.1.66
    qosClass: Burstable
    startTime: "2025-06-21T10:53:40Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-20T15:30:47Z"
    generateName: kube-proxy-
    labels:
      controller-revision-hash: 66648fc774
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-6789d
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: a8cc5684-dcf6-4b4e-87ae-f40ffb75d366
    resourceVersion: "721158"
    uid: 1fe44293-c03d-4d1b-bf68-b6c87890f571
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - worker2erpnode
    containers:
    - command:
      - /usr/local/bin/kube-proxy
      - --config=/var/lib/kube-proxy/config.conf
      - --hostname-override=$(NODE_NAME)
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.k8s.io/kube-proxy:v1.30.14
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kube-proxy
        name: kube-proxy
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8v7zx
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: worker2erpnode
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kube-proxy
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-api-access-8v7zx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T15:31:24Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T15:30:49Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T15:31:24Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T15:31:24Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T15:30:47Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a381f8da9f20ec3842320761932211f437226137b1e22cffccaf6211212081b8
      image: registry.k8s.io/kube-proxy:v1.30.14
      imageID: registry.k8s.io/kube-proxy@sha256:ac095b8ab9589fcd394702da0809fb3fa844beb04fe909e8df59dc141ef8b63b
      lastState: {}
      name: kube-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-20T15:31:23Z"
    hostIP: 10.5.1.70
    hostIPs:
    - ip: 10.5.1.70
    phase: Running
    podIP: 10.5.1.70
    podIPs:
    - ip: 10.5.1.70
    qosClass: BestEffort
    startTime: "2025-06-20T15:30:49Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-20T14:09:40Z"
    generateName: kube-proxy-
    labels:
      controller-revision-hash: 66648fc774
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-lgrpn
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: a8cc5684-dcf6-4b4e-87ae-f40ffb75d366
    resourceVersion: "721133"
    uid: 37edceb7-bef7-46fc-a916-f1e4a1ed0b78
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - mastererpnode
    containers:
    - command:
      - /usr/local/bin/kube-proxy
      - --config=/var/lib/kube-proxy/config.conf
      - --hostname-override=$(NODE_NAME)
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.k8s.io/kube-proxy:v1.30.14
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kube-proxy
        name: kube-proxy
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cmwmh
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: mastererpnode
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kube-proxy
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-api-access-cmwmh
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T14:09:41Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T14:09:40Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T14:09:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T14:09:41Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T14:09:40Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://4c73f6b040bc543cfb7d0a9db292644853f685a8e517b561fd7e904136379d2f
      image: registry.k8s.io/kube-proxy:v1.30.14
      imageID: registry.k8s.io/kube-proxy@sha256:ac095b8ab9589fcd394702da0809fb3fa844beb04fe909e8df59dc141ef8b63b
      lastState: {}
      name: kube-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-20T14:09:40Z"
    hostIP: 10.5.1.66
    hostIPs:
    - ip: 10.5.1.66
    phase: Running
    podIP: 10.5.1.66
    podIPs:
    - ip: 10.5.1.66
    qosClass: BestEffort
    startTime: "2025-06-20T14:09:40Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-20T14:31:17Z"
    generateName: kube-proxy-
    labels:
      controller-revision-hash: 66648fc774
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-v5bj7
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: a8cc5684-dcf6-4b4e-87ae-f40ffb75d366
    resourceVersion: "721094"
    uid: a1eded2f-4b2f-4b05-baca-92043a52f573
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - worker1erpnode
    containers:
    - command:
      - /usr/local/bin/kube-proxy
      - --config=/var/lib/kube-proxy/config.conf
      - --hostname-override=$(NODE_NAME)
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.k8s.io/kube-proxy:v1.30.14
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kube-proxy
        name: kube-proxy
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jkz5t
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: worker1erpnode
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kube-proxy
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-api-access-jkz5t
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T14:59:01Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T14:31:19Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T14:59:01Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T14:59:01Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T14:31:17Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e526ae52bec24a47df324996fc0e4f0bffcb8637ac7b3dc2b900b9eb831700f8
      image: registry.k8s.io/kube-proxy:v1.30.14
      imageID: registry.k8s.io/kube-proxy@sha256:ac095b8ab9589fcd394702da0809fb3fa844beb04fe909e8df59dc141ef8b63b
      lastState: {}
      name: kube-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-20T14:59:00Z"
    hostIP: 10.5.1.69
    hostIPs:
    - ip: 10.5.1.69
    phase: Running
    podIP: 10.5.1.69
    podIPs:
    - ip: 10.5.1.69
    qosClass: BestEffort
    startTime: "2025-06-20T14:31:19Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: d4e64f2fb1c20b261ea563c26b4c6c51
      kubernetes.io/config.mirror: d4e64f2fb1c20b261ea563c26b4c6c51
      kubernetes.io/config.seen: "2025-06-20T14:09:21.115467494Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2025-06-20T14:09:24Z"
    labels:
      component: kube-scheduler
      tier: control-plane
    name: kube-scheduler-mastererpnode
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: mastererpnode
      uid: 2de27e0f-ce4b-4b84-80ae-9c80c451509e
    resourceVersion: "721087"
    uid: 24314ddc-62d7-48c8-99f9-ccff85ee699c
  spec:
    containers:
    - command:
      - kube-scheduler
      - --authentication-kubeconfig=/etc/kubernetes/scheduler.conf
      - --authorization-kubeconfig=/etc/kubernetes/scheduler.conf
      - --bind-address=127.0.0.1
      - --kubeconfig=/etc/kubernetes/scheduler.conf
      - --leader-elect=true
      image: registry.k8s.io/kube-scheduler:v1.30.14
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-scheduler
      resources:
        requests:
          cpu: 100m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/kubernetes/scheduler.conf
        name: kubeconfig
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: mastererpnode
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/scheduler.conf
        type: FileOrCreate
      name: kubeconfig
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T10:53:40Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T10:53:40Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T10:53:45Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T10:53:45Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T10:53:40Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://06e47b8f4a56563b1517289893a70215d94b3b73012bbb7a94d29d7c11ebda99
      image: registry.k8s.io/kube-scheduler:v1.30.14
      imageID: registry.k8s.io/kube-scheduler@sha256:74a5cf9cfa9fcc2246f68c650f1f5c7add20da2145f13800fd97ba1d69fc06c8
      lastState:
        terminated:
          containerID: containerd://c69c382dbdc7468719dc3db3d2394ad10725a7d0dd1297dea8838846972d80a4
          exitCode: 1
          finishedAt: "2025-06-21T10:51:57Z"
          reason: Error
          startedAt: "2025-06-20T14:09:21Z"
      name: kube-scheduler
      ready: true
      restartCount: 11
      started: true
      state:
        running:
          startedAt: "2025-06-21T10:51:58Z"
    hostIP: 10.5.1.66
    hostIPs:
    - ip: 10.5.1.66
    phase: Running
    podIP: 10.5.1.66
    podIPs:
    - ip: 10.5.1.66
    qosClass: Burstable
    startTime: "2025-06-21T10:53:40Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/port: "7472"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-06-21T12:37:25Z"
    generateName: controller-6dd967fdc7-
    labels:
      app: metallb
      component: controller
      pod-template-hash: 6dd967fdc7
    name: controller-6dd967fdc7-pfmtr
    namespace: metallb-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: controller-6dd967fdc7
      uid: 9832206d-e245-4ca3-9d96-8b32701901b9
    resourceVersion: "721045"
    uid: 812f6166-f1eb-4e51-8cb1-cd6577b2d464
  spec:
    containers:
    - args:
      - --port=7472
      - --log-level=info
      - --tls-min-version=VersionTLS12
      env:
      - name: METALLB_ML_SECRET_NAME
        value: memberlist
      - name: METALLB_DEPLOYMENT
        value: controller
      image: quay.io/metallb/controller:v0.14.8
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /metrics
          port: monitoring
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: controller
      ports:
      - containerPort: 7472
        name: monitoring
        protocol: TCP
      - containerPort: 9443
        name: webhook-server
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /metrics
          port: monitoring
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/k8s-webhook-server/serving-certs
        name: cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5wwf5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker2erpnode
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: controller
    serviceAccountName: controller
    terminationGracePeriodSeconds: 0
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: cert
      secret:
        defaultMode: 420
        secretName: metallb-webhook-cert
    - name: kube-api-access-5wwf5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T12:37:37Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T12:37:26Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T12:37:46Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T12:37:46Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T12:37:25Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://654bbeef319e19ea08edc07d8056378d8c82656b56b9c35d6c44cd6bb1395b96
      image: quay.io/metallb/controller:v0.14.8
      imageID: quay.io/metallb/controller@sha256:93b83b39d06bbcb0aedc0eb750c9e43e3c46dc08a6f88400ed96105224d784ec
      lastState: {}
      name: controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-21T12:37:36Z"
    hostIP: 10.5.1.70
    hostIPs:
    - ip: 10.5.1.70
    phase: Running
    podIP: 10.244.2.8
    podIPs:
    - ip: 10.244.2.8
    qosClass: BestEffort
    startTime: "2025-06-21T12:37:26Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/port: "7472"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-06-21T12:37:26Z"
    generateName: speaker-
    labels:
      app: metallb
      component: speaker
      controller-revision-hash: 54b79db49c
      pod-template-generation: "1"
    name: speaker-64hs8
    namespace: metallb-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: speaker
      uid: cb7e8121-7f9d-4a39-9530-5abcc68f7e11
    resourceVersion: "721167"
    uid: 0bd702f2-1452-4920-96e0-12631ce51ecd
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - worker1erpnode
    containers:
    - args:
      - --port=7472
      - --log-level=info
      env:
      - name: METALLB_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: METALLB_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: METALLB_HOST
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: METALLB_ML_BIND_ADDR
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: METALLB_ML_LABELS
        value: app=metallb,component=speaker
      - name: METALLB_ML_SECRET_KEY_PATH
        value: /etc/ml_secret_key
      image: quay.io/metallb/speaker:v0.14.8
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /metrics
          port: monitoring
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: speaker
      ports:
      - containerPort: 7472
        hostPort: 7472
        name: monitoring
        protocol: TCP
      - containerPort: 7946
        hostPort: 7946
        name: memberlist-tcp
        protocol: TCP
      - containerPort: 7946
        hostPort: 7946
        name: memberlist-udp
        protocol: UDP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /metrics
          port: monitoring
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_RAW
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ml_secret_key
        name: memberlist
        readOnly: true
      - mountPath: /etc/metallb
        name: metallb-excludel2
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q2cqr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: worker1erpnode
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: speaker
    serviceAccountName: speaker
    terminationGracePeriodSeconds: 2
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - name: memberlist
      secret:
        defaultMode: 420
        secretName: memberlist
    - configMap:
        defaultMode: 256
        name: metallb-excludel2
      name: metallb-excludel2
    - name: kube-api-access-q2cqr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T12:38:01Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T12:37:26Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T07:06:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T07:06:41Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T12:37:26Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://53786fe003172286227ebed78a31e54a0bb93cbd8a35be9e08c7a6547ca339bb
      image: quay.io/metallb/speaker:v0.14.8
      imageID: quay.io/metallb/speaker@sha256:fd86bfc502601d6525739d411a0045e7085a4008a732be7e271c851800952142
      lastState:
        terminated:
          containerID: containerd://247a4a9509dbfaa8e30c357aa448674df4c6d02c4c8b19c7c4dcc2a6d2db87ee
          exitCode: 1
          finishedAt: "2025-06-24T07:06:23Z"
          reason: Error
          startedAt: "2025-06-24T07:06:23Z"
      name: speaker
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2025-06-24T07:06:24Z"
    hostIP: 10.5.1.69
    hostIPs:
    - ip: 10.5.1.69
    phase: Running
    podIP: 192.168.2.222
    podIPs:
    - ip: 192.168.2.222
    qosClass: BestEffort
    startTime: "2025-06-21T12:37:26Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/port: "7472"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-06-21T12:37:26Z"
    generateName: speaker-
    labels:
      app: metallb
      component: speaker
      controller-revision-hash: 54b79db49c
      pod-template-generation: "1"
    name: speaker-7xrrn
    namespace: metallb-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: speaker
      uid: cb7e8121-7f9d-4a39-9530-5abcc68f7e11
    resourceVersion: "720980"
    uid: e93ed2f5-220c-4db5-b554-0921720707c1
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - mastererpnode
    containers:
    - args:
      - --port=7472
      - --log-level=info
      env:
      - name: METALLB_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: METALLB_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: METALLB_HOST
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: METALLB_ML_BIND_ADDR
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: METALLB_ML_LABELS
        value: app=metallb,component=speaker
      - name: METALLB_ML_SECRET_KEY_PATH
        value: /etc/ml_secret_key
      image: quay.io/metallb/speaker:v0.14.8
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /metrics
          port: monitoring
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: speaker
      ports:
      - containerPort: 7472
        hostPort: 7472
        name: monitoring
        protocol: TCP
      - containerPort: 7946
        hostPort: 7946
        name: memberlist-tcp
        protocol: TCP
      - containerPort: 7946
        hostPort: 7946
        name: memberlist-udp
        protocol: UDP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /metrics
          port: monitoring
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_RAW
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ml_secret_key
        name: memberlist
        readOnly: true
      - mountPath: /etc/metallb
        name: metallb-excludel2
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h97kk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: mastererpnode
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: speaker
    serviceAccountName: speaker
    terminationGracePeriodSeconds: 2
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - name: memberlist
      secret:
        defaultMode: 420
        secretName: memberlist
    - configMap:
        defaultMode: 256
        name: metallb-excludel2
      name: metallb-excludel2
    - name: kube-api-access-h97kk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T12:38:03Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T12:37:26Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T06:49:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T06:49:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T12:37:26Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8d06e12e0cbeb54a6a1fd59246290f7e9942f8a6c2243fae5d97b8fa34c74dcf
      image: quay.io/metallb/speaker:v0.14.8
      imageID: quay.io/metallb/speaker@sha256:fd86bfc502601d6525739d411a0045e7085a4008a732be7e271c851800952142
      lastState:
        terminated:
          containerID: containerd://dfbdebc302d9fba34075c9070b1fe143dd49af4e804dd27f553deb14fc5f8783
          exitCode: 1
          finishedAt: "2025-06-24T06:48:53Z"
          reason: Error
          startedAt: "2025-06-24T06:48:53Z"
      name: speaker
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2025-06-24T06:48:53Z"
    hostIP: 10.5.1.66
    hostIPs:
    - ip: 10.5.1.66
    phase: Running
    podIP: 192.168.2.221
    podIPs:
    - ip: 192.168.2.221
    qosClass: BestEffort
    startTime: "2025-06-21T12:37:26Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/port: "7472"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-06-21T12:37:26Z"
    generateName: speaker-
    labels:
      app: metallb
      component: speaker
      controller-revision-hash: 54b79db49c
      pod-template-generation: "1"
    name: speaker-nlljf
    namespace: metallb-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: speaker
      uid: cb7e8121-7f9d-4a39-9530-5abcc68f7e11
    resourceVersion: "721129"
    uid: 31fc1120-eda5-46a2-aeef-5aa4d7b0588b
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - worker2erpnode
    containers:
    - args:
      - --port=7472
      - --log-level=info
      env:
      - name: METALLB_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: METALLB_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: METALLB_HOST
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: METALLB_ML_BIND_ADDR
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: METALLB_ML_LABELS
        value: app=metallb,component=speaker
      - name: METALLB_ML_SECRET_KEY_PATH
        value: /etc/ml_secret_key
      image: quay.io/metallb/speaker:v0.14.8
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /metrics
          port: monitoring
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: speaker
      ports:
      - containerPort: 7472
        hostPort: 7472
        name: monitoring
        protocol: TCP
      - containerPort: 7946
        hostPort: 7946
        name: memberlist-tcp
        protocol: TCP
      - containerPort: 7946
        hostPort: 7946
        name: memberlist-udp
        protocol: UDP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /metrics
          port: monitoring
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_RAW
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ml_secret_key
        name: memberlist
        readOnly: true
      - mountPath: /etc/metallb
        name: metallb-excludel2
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wgcwv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: worker2erpnode
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: speaker
    serviceAccountName: speaker
    terminationGracePeriodSeconds: 2
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - name: memberlist
      secret:
        defaultMode: 420
        secretName: memberlist
    - configMap:
        defaultMode: 256
        name: metallb-excludel2
      name: metallb-excludel2
    - name: kube-api-access-wgcwv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T12:37:57Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T12:37:26Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T07:05:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-24T07:05:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T12:37:26Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://859a374351b151b9f3fefb8daf332a6df0ec9277ca1c8c03215b6f4c4b91146a
      image: quay.io/metallb/speaker:v0.14.8
      imageID: quay.io/metallb/speaker@sha256:fd86bfc502601d6525739d411a0045e7085a4008a732be7e271c851800952142
      lastState:
        terminated:
          containerID: containerd://684c612c082a1e1220db451c8a7209dfd0b6e27470a2b3a753fafad33c4c775a
          exitCode: 1
          finishedAt: "2025-06-24T07:04:53Z"
          reason: Error
          startedAt: "2025-06-24T07:04:53Z"
      name: speaker
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2025-06-24T07:04:53Z"
    hostIP: 10.5.1.70
    hostIPs:
    - ip: 10.5.1.70
    phase: Running
    podIP: 192.168.2.223
    podIPs:
    - ip: 192.168.2.223
    qosClass: BestEffort
    startTime: "2025-06-21T12:37:26Z"
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-06-20T14:09:24Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "198"
    uid: 794e9831-6844-42e8-996a-7f93a614d2c1
  spec:
    clusterIP: 10.96.0.1
    clusterIPs:
    - 10.96.0.1
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 6443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"oracle-db","namespace":"default"},"spec":{"externalName":"192.168.2.226","ports":[{"port":1521}],"type":"ExternalName"}}
    creationTimestamp: "2025-06-21T18:54:24Z"
    name: oracle-db
    namespace: default
    resourceVersion: "209012"
    uid: 6988a99e-2ffa-477b-bd24-8564de985201
  spec:
    externalName: 192.168.2.226
    ports:
    - port: 1521
      protocol: TCP
      targetPort: 1521
    sessionAffinity: None
    type: ExternalName
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"parametrageglobal","namespace":"default"},"spec":{"ports":[{"name":"http-backend","nodePort":32105,"port":1995,"protocol":"TCP","targetPort":1995}],"selector":{"app":"paramglob-backend","type":"backend"},"type":"NodePort"}}
    creationTimestamp: "2025-06-24T15:28:36Z"
    name: parametrageglobal
    namespace: default
    resourceVersion: "716567"
    uid: 8c51d03d-cf4c-44bb-be80-2517577ba6a0
  spec:
    clusterIP: 10.104.173.118
    clusterIPs:
    - 10.104.173.118
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-backend
      nodePort: 32105
      port: 1995
      protocol: TCP
      targetPort: 1995
    selector:
      app: paramglob-backend
      type: backend
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"service-admin","namespace":"default"},"spec":{"ports":[{"name":"http-backend","nodePort":32104,"port":1994,"protocol":"TCP","targetPort":1994}],"selector":{"app":"admin-backend","type":"backend"},"type":"NodePort"}}
    creationTimestamp: "2025-06-24T13:33:05Z"
    name: service-admin
    namespace: default
    resourceVersion: "702351"
    uid: e400edda-73ab-4853-af42-d165c0da418c
  spec:
    clusterIP: 10.110.156.130
    clusterIPs:
    - 10.110.156.130
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-backend
      nodePort: 32104
      port: 1994
      protocol: TCP
      targetPort: 1994
    selector:
      app: admin-backend
      type: backend
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"service-admin-front","namespace":"default"},"spec":{"ports":[{"name":"http-front","nodePort":31100,"port":80,"protocol":"TCP","targetPort":80}],"selector":{"app":"admin-front","type":"front"},"type":"NodePort"}}
    creationTimestamp: "2025-06-24T15:24:31Z"
    name: service-admin-front
    namespace: default
    resourceVersion: "716068"
    uid: c898beee-0ce3-44d9-a570-19e272ae511a
  spec:
    clusterIP: 10.104.187.44
    clusterIPs:
    - 10.104.187.44
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-front
      nodePort: 31100
      port: 80
      protocol: TCP
      targetPort: 80
    selector:
      app: admin-front
      type: front
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"service-asi","namespace":"default"},"spec":{"ports":[{"name":"http-backend","nodePort":32118,"port":19099,"protocol":"TCP","targetPort":19099}],"selector":{"app":"asi-backend","type":"backend"},"type":"NodePort"}}
    creationTimestamp: "2025-06-24T20:37:29Z"
    name: service-asi
    namespace: default
    resourceVersion: "749030"
    uid: ed18004a-4e6f-4133-a5e1-406a673b0264
  spec:
    clusterIP: 10.110.180.79
    clusterIPs:
    - 10.110.180.79
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-backend
      nodePort: 32118
      port: 19099
      protocol: TCP
      targetPort: 19099
    selector:
      app: asi-backend
      type: backend
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"service-asi-front","namespace":"default"},"spec":{"ports":[{"name":"http-front","nodePort":31106,"port":80,"protocol":"TCP","targetPort":80}],"selector":{"app":"asi-front","type":"front"},"type":"NodePort"}}
    creationTimestamp: "2025-06-24T20:59:47Z"
    name: service-asi-front
    namespace: default
    resourceVersion: "751180"
    uid: 89df5108-0580-422d-b67b-518089496bd9
  spec:
    clusterIP: 10.102.53.103
    clusterIPs:
    - 10.102.53.103
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-front
      nodePort: 31106
      port: 80
      protocol: TCP
      targetPort: 80
    selector:
      app: asi-front
      type: front
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"service-backfo","namespace":"default"},"spec":{"ports":[{"name":"http-backend","nodePort":32109,"port":8999,"protocol":"TCP","targetPort":8999}],"selector":{"app":"fo-backend","type":"backend"},"type":"NodePort"}}
    creationTimestamp: "2025-06-24T19:42:25Z"
    name: service-backfo
    namespace: default
    resourceVersion: "743761"
    uid: 0ca80f78-42da-4668-b703-3748ae4359a7
  spec:
    clusterIP: 10.96.195.165
    clusterIPs:
    - 10.96.195.165
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-backend
      nodePort: 32109
      port: 8999
      protocol: TCP
      targetPort: 8999
    selector:
      app: fo-backend
      type: backend
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"service-budget","namespace":"default"},"spec":{"ports":[{"name":"http-backend","nodePort":32108,"port":9097,"protocol":"TCP","targetPort":9097}],"selector":{"app":"budget-backend","type":"backend"},"type":"NodePort"}}
    creationTimestamp: "2025-06-24T18:03:18Z"
    name: service-budget
    namespace: default
    resourceVersion: "734352"
    uid: 24dd4e40-5025-4571-aa21-e5839af1b1c6
  spec:
    clusterIP: 10.106.107.127
    clusterIPs:
    - 10.106.107.127
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-backend
      nodePort: 32108
      port: 9097
      protocol: TCP
      targetPort: 9097
    selector:
      app: budget-backend
      type: backend
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"service-budget-front","namespace":"default"},"spec":{"ports":[{"name":"http-front","nodePort":31110,"port":80,"protocol":"TCP","targetPort":80}],"selector":{"app":"budget-front","type":"front"},"type":"NodePort"}}
    creationTimestamp: "2025-06-24T18:03:38Z"
    name: service-budget-front
    namespace: default
    resourceVersion: "734407"
    uid: 6fab438e-dfec-418b-beb0-be39e509bc84
  spec:
    clusterIP: 10.101.234.212
    clusterIPs:
    - 10.101.234.212
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-front
      nodePort: 31110
      port: 80
      protocol: TCP
      targetPort: 80
    selector:
      app: budget-front
      type: front
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"service-comptabilite","namespace":"default"},"spec":{"ports":[{"name":"http-backend","nodePort":32115,"port":8093,"protocol":"TCP","targetPort":8093}],"selector":{"app":"comptabilite-backend","type":"backend"},"type":"NodePort"}}
    creationTimestamp: "2025-06-24T20:09:39Z"
    name: service-comptabilite
    namespace: default
    resourceVersion: "746302"
    uid: 3314aadd-9775-4c3f-a61d-cc635d0e2b49
  spec:
    clusterIP: 10.97.20.57
    clusterIPs:
    - 10.97.20.57
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-backend
      nodePort: 32115
      port: 8093
      protocol: TCP
      targetPort: 8093
    selector:
      app: comptabilite-backend
      type: backend
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"service-cotisation","namespace":"default"},"spec":{"ports":[{"name":"http-backend","nodePort":32111,"port":8082,"protocol":"TCP","targetPort":8082}],"selector":{"app":"cotisation-backend","type":"backend"},"type":"NodePort"}}
    creationTimestamp: "2025-06-24T20:31:11Z"
    name: service-cotisation
    namespace: default
    resourceVersion: "748371"
    uid: 626d99cf-fade-4244-8c2d-4fcfc6472964
  spec:
    clusterIP: 10.104.183.56
    clusterIPs:
    - 10.104.183.56
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-backend
      nodePort: 32111
      port: 8082
      protocol: TCP
      targetPort: 8082
    selector:
      app: cotisation-backend
      type: backend
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"service-etatfinancier","namespace":"default"},"spec":{"ports":[{"name":"http-backend","nodePort":32119,"port":1999,"protocol":"TCP","targetPort":1999}],"selector":{"app":"etatfinancier-backend","type":"backend"},"type":"NodePort"}}
    creationTimestamp: "2025-06-25T13:34:50Z"
    name: service-etatfinancier
    namespace: default
    resourceVersion: "841752"
    uid: 08c2c2d3-03dd-41d6-bf77-a52aa6ea6086
  spec:
    clusterIP: 10.96.95.118
    clusterIPs:
    - 10.96.95.118
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-backend
      nodePort: 32119
      port: 1999
      protocol: TCP
      targetPort: 1999
    selector:
      app: etatfinancier-backend
      type: backend
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"service-fo-front","namespace":"default"},"spec":{"ports":[{"name":"http-front","nodePort":31104,"port":80,"protocol":"TCP","targetPort":80}],"selector":{"app":"fo-front","type":"front"},"type":"NodePort"}}
    creationTimestamp: "2025-06-24T19:42:20Z"
    name: service-fo-front
    namespace: default
    resourceVersion: "743750"
    uid: 64c71b1a-5b1f-4135-afc0-6c94689c52d0
  spec:
    clusterIP: 10.101.45.2
    clusterIPs:
    - 10.101.45.2
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-front
      nodePort: 31104
      port: 80
      protocol: TCP
      targetPort: 80
    selector:
      app: fo-front
      type: front
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"service-front-finance","namespace":"default"},"spec":{"ports":[{"name":"http-front","nodePort":31103,"port":80,"protocol":"TCP","targetPort":80}],"selector":{"app":"front-finance","type":"front"},"type":"NodePort"}}
    creationTimestamp: "2025-06-24T20:19:16Z"
    name: service-front-finance
    namespace: default
    resourceVersion: "747219"
    uid: 748726a1-4df7-444d-8803-b7219dba05c4
  spec:
    clusterIP: 10.106.180.167
    clusterIPs:
    - 10.106.180.167
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-front
      nodePort: 31103
      port: 80
      protocol: TCP
      targetPort: 80
    selector:
      app: front-finance
      type: front
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"service-front-tb","namespace":"default"},"spec":{"ports":[{"name":"http-front","nodePort":31105,"port":80,"protocol":"TCP","targetPort":80}],"selector":{"app":"front-tb","type":"front"},"type":"NodePort"}}
    creationTimestamp: "2025-06-24T21:06:17Z"
    name: service-front-tb
    namespace: default
    resourceVersion: "751771"
    uid: bf63b712-4478-47ca-9bce-6aacdb778948
  spec:
    clusterIP: 10.105.223.174
    clusterIPs:
    - 10.105.223.174
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-front
      nodePort: 31105
      port: 80
      protocol: TCP
      targetPort: 80
    selector:
      app: front-tb
      type: front
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"service-gateway","namespace":"default"},"spec":{"ports":[{"name":"http-gateway","nodePort":32103,"port":8888,"protocol":"TCP","targetPort":8888}],"selector":{"app":"gateway","type":"backend"},"type":"NodePort"}}
    creationTimestamp: "2025-06-24T13:28:17Z"
    name: service-gateway
    namespace: default
    resourceVersion: "701725"
    uid: b97c0133-0887-44f5-a9df-fc8d303cf5dc
  spec:
    clusterIP: 10.102.94.252
    clusterIPs:
    - 10.102.94.252
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-gateway
      nodePort: 32103
      port: 8888
      protocol: TCP
      targetPort: 8888
    selector:
      app: gateway
      type: backend
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"service-gira","namespace":"default"},"spec":{"ports":[{"name":"http-backend","nodePort":32117,"port":8989,"protocol":"TCP","targetPort":8989}],"selector":{"app":"gira-backend","type":"backend"},"type":"NodePort"}}
    creationTimestamp: "2025-06-24T20:34:06Z"
    name: service-gira
    namespace: default
    resourceVersion: "748663"
    uid: 292032df-c011-4904-af6f-f23cff2a4862
  spec:
    clusterIP: 10.110.213.154
    clusterIPs:
    - 10.110.213.154
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-backend
      nodePort: 32117
      port: 8989
      protocol: TCP
      targetPort: 8989
    selector:
      app: gira-backend
      type: backend
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"service-gira-front","namespace":"default"},"spec":{"ports":[{"name":"http-front","nodePort":31108,"port":80,"protocol":"TCP","targetPort":80}],"selector":{"app":"gira-front","type":"front"},"type":"NodePort"}}
    creationTimestamp: "2025-06-23T15:02:59Z"
    name: service-gira-front
    namespace: default
    resourceVersion: "535741"
    uid: c3c5f287-0e70-4729-88b5-e83b777d023e
  spec:
    clusterIP: 10.111.156.191
    clusterIPs:
    - 10.111.156.191
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-front
      nodePort: 31108
      port: 80
      protocol: TCP
      targetPort: 80
    selector:
      app: gira-front
      type: front
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"service-immatriculation","namespace":"default"},"spec":{"ports":[{"name":"http-backend","nodePort":32110,"port":1996,"protocol":"TCP","targetPort":1996}],"selector":{"app":"immatriculation-backend","type":"backend"},"type":"NodePort"}}
    creationTimestamp: "2025-06-24T20:03:39Z"
    name: service-immatriculation
    namespace: default
    resourceVersion: "745753"
    uid: 7dd76468-9437-49eb-a5fa-2b2af70d18c7
  spec:
    clusterIP: 10.105.127.73
    clusterIPs:
    - 10.105.127.73
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-backend
      nodePort: 32110
      port: 1996
      protocol: TCP
      targetPort: 1996
    selector:
      app: immatriculation-backend
      type: backend
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"service-mandat","namespace":"default"},"spec":{"ports":[{"name":"http-backend","nodePort":32116,"port":8099,"protocol":"TCP","targetPort":8099}],"selector":{"app":"mandat-backend","type":"backend"},"type":"NodePort"}}
    creationTimestamp: "2025-06-24T20:16:20Z"
    name: service-mandat
    namespace: default
    resourceVersion: "746928"
    uid: 804674c9-02d4-4a91-9832-b00632f90c29
  spec:
    clusterIP: 10.102.90.78
    clusterIPs:
    - 10.102.90.78
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-backend
      nodePort: 32116
      port: 8099
      protocol: TCP
      targetPort: 8099
    selector:
      app: mandat-backend
      type: backend
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"service-pension","namespace":"default"},"spec":{"ports":[{"name":"http-backend","nodePort":32123,"port":8083,"protocol":"TCP","targetPort":8083}],"selector":{"app":"pension-backend","type":"backend"},"type":"NodePort"}}
    creationTimestamp: "2025-06-25T13:33:05Z"
    name: service-pension
    namespace: default
    resourceVersion: "841566"
    uid: c5f88b8e-b828-4b94-8fcd-2a89f588287b
  spec:
    clusterIP: 10.108.163.214
    clusterIPs:
    - 10.108.163.214
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-backend
      nodePort: 32123
      port: 8083
      protocol: TCP
      targetPort: 8083
    selector:
      app: pension-backend
      type: backend
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"service-pf","namespace":"default"},"spec":{"ports":[{"name":"http-backend","nodePort":32128,"port":8085,"protocol":"TCP","targetPort":8085}],"selector":{"app":"pf-backend","type":"backend"},"type":"NodePort"}}
    creationTimestamp: "2025-06-25T14:09:44Z"
    name: service-pf
    namespace: default
    resourceVersion: "845288"
    uid: e57ce30f-721c-4af4-a569-431f13237791
  spec:
    clusterIP: 10.97.35.91
    clusterIPs:
    - 10.97.35.91
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-backend
      nodePort: 32128
      port: 8085
      protocol: TCP
      targetPort: 8085
    selector:
      app: pf-backend
      type: backend
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"service-pp","namespace":"default"},"spec":{"ports":[{"name":"http-backend","nodePort":31226,"port":8086,"protocol":"TCP","targetPort":8086}],"selector":{"app":"pp-backend","type":"backend"},"type":"NodePort"}}
    creationTimestamp: "2025-06-25T13:32:42Z"
    name: service-pp
    namespace: default
    resourceVersion: "841503"
    uid: 65d9542c-257d-4294-bb2f-048fcbc93f97
  spec:
    clusterIP: 10.97.210.179
    clusterIPs:
    - 10.97.210.179
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-backend
      nodePort: 31226
      port: 8086
      protocol: TCP
      targetPort: 8086
    selector:
      app: pp-backend
      type: backend
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"service-rapprochement","namespace":"default"},"spec":{"ports":[{"name":"http-backend","port":8092,"protocol":"TCP","targetPort":8092}],"selector":{"app":"rapprochement-backend","type":"backend"},"type":"ClusterIP"}}
    creationTimestamp: "2025-06-25T13:36:24Z"
    name: service-rapprochement
    namespace: default
    resourceVersion: "841922"
    uid: 81ca54eb-35a9-490e-baa7-a0d3dd2bfb69
  spec:
    clusterIP: 10.104.77.1
    clusterIPs:
    - 10.104.77.1
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-backend
      port: 8092
      protocol: TCP
      targetPort: 8092
    selector:
      app: rapprochement-backend
      type: backend
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"service-rec","namespace":"default"},"spec":{"ports":[{"name":"http-backend","nodePort":32107,"port":9098,"protocol":"TCP","targetPort":9098}],"selector":{"app":"rec-backend","type":"backend"},"type":"NodePort"}}
    creationTimestamp: "2025-06-24T17:43:39Z"
    name: service-rec
    namespace: default
    resourceVersion: "732534"
    uid: 7cda675d-2c95-42d6-b00b-89cb7e738c50
  spec:
    clusterIP: 10.102.111.252
    clusterIPs:
    - 10.102.111.252
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-backend
      nodePort: 32107
      port: 9098
      protocol: TCP
      targetPort: 9098
    selector:
      app: rec-backend
      type: backend
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"service-register","namespace":"default"},"spec":{"ports":[{"name":"http-front","nodePort":32101,"port":8761,"protocol":"TCP","targetPort":8761}],"selector":{"app":"registry-backend","type":"backend"},"type":"NodePort"}}
    creationTimestamp: "2025-06-21T14:37:17Z"
    name: service-register
    namespace: default
    resourceVersion: "176301"
    uid: 372ad6a8-8d32-46b1-88ab-5e093fbef8e7
  spec:
    clusterIP: 10.97.118.112
    clusterIPs:
    - 10.97.118.112
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-front
      nodePort: 32101
      port: 8761
      protocol: TCP
      targetPort: 8761
    selector:
      app: registry-backend
      type: backend
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"service-rp","namespace":"default"},"spec":{"ports":[{"name":"http-backend","nodePort":32225,"port":8084,"protocol":"TCP","targetPort":8084}],"selector":{"app":"rp-backend","type":"backend"},"type":"NodePort"}}
    creationTimestamp: "2025-06-25T13:37:49Z"
    name: service-rp
    namespace: default
    resourceVersion: "842099"
    uid: 4af19167-fa61-40e2-abc7-a49c20692f91
  spec:
    clusterIP: 10.105.74.131
    clusterIPs:
    - 10.105.74.131
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-backend
      nodePort: 32225
      port: 8084
      protocol: TCP
      targetPort: 8084
    selector:
      app: rp-backend
      type: backend
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"service-sirh","namespace":"default"},"spec":{"ports":[{"name":"http-backend","nodePort":32106,"port":9099,"protocol":"TCP","targetPort":9099}],"selector":{"app":"sirh-backend","type":"backend"},"type":"NodePort"}}
    creationTimestamp: "2025-06-24T16:43:16Z"
    name: service-sirh
    namespace: default
    resourceVersion: "726338"
    uid: c6466aac-6a4d-404d-8ac3-34ac059222b1
  spec:
    clusterIP: 10.98.184.169
    clusterIPs:
    - 10.98.184.169
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-backend
      nodePort: 32106
      port: 9099
      protocol: TCP
      targetPort: 9099
    selector:
      app: sirh-backend
      type: backend
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"service-sirh-front","namespace":"default"},"spec":{"ports":[{"name":"http-front","nodePort":31107,"port":80,"protocol":"TCP","targetPort":80}],"selector":{"app":"sirh-front","type":"front"},"type":"NodePort"}}
    creationTimestamp: "2025-06-23T11:37:12Z"
    name: service-sirh-front
    namespace: default
    resourceVersion: "510114"
    uid: 447be3d0-9a39-48bb-8d91-3a89d604648a
  spec:
    clusterIP: 10.110.71.208
    clusterIPs:
    - 10.110.71.208
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-front
      nodePort: 31107
      port: 80
      protocol: TCP
      targetPort: 80
    selector:
      app: sirh-front
      type: front
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"service-tresorerie","namespace":"default"},"spec":{"ports":[{"name":"http-backend","nodePort":32114,"port":8094,"protocol":"TCP","targetPort":8094}],"selector":{"app":"tresorerie-backend","type":"backend"},"type":"NodePort"}}
    creationTimestamp: "2025-06-24T20:40:47Z"
    name: service-tresorerie
    namespace: default
    resourceVersion: "749353"
    uid: bfd1a46f-0a2c-49de-b0e2-487e366ce9f2
  spec:
    clusterIP: 10.104.7.138
    clusterIPs:
    - 10.104.7.138
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-backend
      nodePort: 32114
      port: 8094
      protocol: TCP
      targetPort: 8094
    selector:
      app: tresorerie-backend
      type: backend
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"kafka-broker"},"name":"kafka-service","namespace":"kafka"},"spec":{"ports":[{"nodePort":30092,"port":29092,"targetPort":29092}],"selector":{"app":"kafka-broker"},"type":"NodePort"}}
    creationTimestamp: "2025-06-21T17:28:33Z"
    labels:
      app: kafka-broker
    name: kafka-service
    namespace: kafka
    resourceVersion: "763143"
    uid: 34caff84-9233-40fc-b607-ec594dff43af
  spec:
    clusterIP: 10.108.53.60
    clusterIPs:
    - 10.108.53.60
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 30092
      port: 29092
      protocol: TCP
      targetPort: 29092
    selector:
      app: kafka-broker
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"zookeeper-service"},"name":"zookeeper-service","namespace":"kafka"},"spec":{"ports":[{"name":"zookeeper-port","nodePort":30181,"port":2181,"targetPort":2181}],"selector":{"app":"zookeeper"},"type":"NodePort"}}
    creationTimestamp: "2025-06-21T17:28:33Z"
    labels:
      app: zookeeper-service
    name: zookeeper-service
    namespace: kafka
    resourceVersion: "197653"
    uid: ac59cd75-e094-420e-a8c4-521bf862efbb
  spec:
    clusterIP: 10.100.61.117
    clusterIPs:
    - 10.100.61.117
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: zookeeper-port
      nodePort: 30181
      port: 2181
      protocol: TCP
      targetPort: 2181
    selector:
      app: zookeeper
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/port: "9153"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-06-20T14:09:25Z"
    labels:
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: CoreDNS
    name: kube-dns
    namespace: kube-system
    resourceVersion: "237"
    uid: 7493dd57-7755-45c3-9dec-e43877ff62e9
  spec:
    clusterIP: 10.96.0.10
    clusterIPs:
    - 10.96.0.10
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    - name: metrics
      port: 9153
      protocol: TCP
      targetPort: 9153
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"metallb-webhook-service","namespace":"metallb-system"},"spec":{"ports":[{"port":443,"targetPort":9443}],"selector":{"component":"controller"}}}
    creationTimestamp: "2025-06-21T12:37:25Z"
    name: metallb-webhook-service
    namespace: metallb-system
    resourceVersion: "161505"
    uid: a593e715-35dd-4bc6-9bfc-8314929d7977
  spec:
    clusterIP: 10.109.198.56
    clusterIPs:
    - 10.109.198.56
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 443
      protocol: TCP
      targetPort: 9443
    selector:
      component: controller
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"app":"flannel","k8s-app":"flannel","tier":"node"},"name":"kube-flannel-ds","namespace":"kube-flannel"},"spec":{"selector":{"matchLabels":{"app":"flannel","k8s-app":"flannel"}},"template":{"metadata":{"labels":{"app":"flannel","k8s-app":"flannel","tier":"node"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}}},"containers":[{"args":["--ip-masq","--kube-subnet-mgr"],"command":["/opt/bin/flanneld"],"env":[{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"EVENT_QUEUE_DEPTH","value":"5000"}],"image":"ghcr.io/flannel-io/flannel:v0.27.0","name":"kube-flannel","resources":{"requests":{"cpu":"100m","memory":"50Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN","NET_RAW"]},"privileged":false},"volumeMounts":[{"mountPath":"/run/flannel","name":"run"},{"mountPath":"/etc/kube-flannel/","name":"flannel-cfg"},{"mountPath":"/run/xtables.lock","name":"xtables-lock"}]}],"hostNetwork":true,"initContainers":[{"args":["-f","/flannel","/opt/cni/bin/flannel"],"command":["cp"],"image":"ghcr.io/flannel-io/flannel-cni-plugin:v1.7.1-flannel1","name":"install-cni-plugin","volumeMounts":[{"mountPath":"/opt/cni/bin","name":"cni-plugin"}]},{"args":["-f","/etc/kube-flannel/cni-conf.json","/etc/cni/net.d/10-flannel.conflist"],"command":["cp"],"image":"ghcr.io/flannel-io/flannel:v0.27.0","name":"install-cni","volumeMounts":[{"mountPath":"/etc/cni/net.d","name":"cni"},{"mountPath":"/etc/kube-flannel/","name":"flannel-cfg"}]}],"priorityClassName":"system-node-critical","serviceAccountName":"flannel","tolerations":[{"effect":"NoSchedule","operator":"Exists"}],"volumes":[{"hostPath":{"path":"/run/flannel"},"name":"run"},{"hostPath":{"path":"/opt/cni/bin"},"name":"cni-plugin"},{"hostPath":{"path":"/etc/cni/net.d"},"name":"cni"},{"configMap":{"name":"kube-flannel-cfg"},"name":"flannel-cfg"},{"hostPath":{"path":"/run/xtables.lock","type":"FileOrCreate"},"name":"xtables-lock"}]}}}}
    creationTimestamp: "2025-06-20T14:40:06Z"
    generation: 1
    labels:
      app: flannel
      k8s-app: flannel
      tier: node
    name: kube-flannel-ds
    namespace: kube-flannel
    resourceVersion: "7720"
    uid: 3ba1c98b-b5f9-404d-856c-e76acabf5fc4
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: flannel
        k8s-app: flannel
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: flannel
          k8s-app: flannel
          tier: node
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - args:
          - --ip-masq
          - --kube-subnet-mgr
          command:
          - /opt/bin/flanneld
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: EVENT_QUEUE_DEPTH
            value: "5000"
          image: ghcr.io/flannel-io/flannel:v0.27.0
          imagePullPolicy: IfNotPresent
          name: kube-flannel
          resources:
            requests:
              cpu: 100m
              memory: 50Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run/flannel
            name: run
          - mountPath: /etc/kube-flannel/
            name: flannel-cfg
          - mountPath: /run/xtables.lock
            name: xtables-lock
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - args:
          - -f
          - /flannel
          - /opt/cni/bin/flannel
          command:
          - cp
          image: ghcr.io/flannel-io/flannel-cni-plugin:v1.7.1-flannel1
          imagePullPolicy: IfNotPresent
          name: install-cni-plugin
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/cni/bin
            name: cni-plugin
        - args:
          - -f
          - /etc/kube-flannel/cni-conf.json
          - /etc/cni/net.d/10-flannel.conflist
          command:
          - cp
          image: ghcr.io/flannel-io/flannel:v0.27.0
          imagePullPolicy: IfNotPresent
          name: install-cni
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/cni/net.d
            name: cni
          - mountPath: /etc/kube-flannel/
            name: flannel-cfg
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: flannel
        serviceAccountName: flannel
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          operator: Exists
        volumes:
        - hostPath:
            path: /run/flannel
            type: ""
          name: run
        - hostPath:
            path: /opt/cni/bin
            type: ""
          name: cni-plugin
        - hostPath:
            path: /etc/cni/net.d
            type: ""
          name: cni
        - configMap:
            defaultMode: 420
            name: kube-flannel-cfg
          name: flannel-cfg
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberAvailable: 3
    numberMisscheduled: 0
    numberReady: 3
    observedGeneration: 1
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-20T14:09:25Z"
    generation: 1
    labels:
      k8s-app: kube-proxy
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "148493"
    uid: a8cc5684-dcf6-4b4e-87ae-f40ffb75d366
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-proxy
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-proxy
      spec:
        containers:
        - command:
          - /usr/local/bin/kube-proxy
          - --config=/var/lib/kube-proxy/config.conf
          - --hostname-override=$(NODE_NAME)
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: registry.k8s.io/kube-proxy:v1.30.14
          imagePullPolicy: IfNotPresent
          name: kube-proxy
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kube-proxy
            name: kube-proxy
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-proxy
        serviceAccountName: kube-proxy
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: kube-proxy
          name: kube-proxy
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /lib/modules
            type: ""
          name: lib-modules
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberAvailable: 3
    numberMisscheduled: 0
    numberReady: 3
    observedGeneration: 1
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"app":"metallb","component":"speaker"},"name":"speaker","namespace":"metallb-system"},"spec":{"selector":{"matchLabels":{"app":"metallb","component":"speaker"}},"template":{"metadata":{"annotations":{"prometheus.io/port":"7472","prometheus.io/scrape":"true"},"labels":{"app":"metallb","component":"speaker"}},"spec":{"containers":[{"args":["--port=7472","--log-level=info"],"env":[{"name":"METALLB_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"METALLB_POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"METALLB_HOST","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"METALLB_ML_BIND_ADDR","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"METALLB_ML_LABELS","value":"app=metallb,component=speaker"},{"name":"METALLB_ML_SECRET_KEY_PATH","value":"/etc/ml_secret_key"}],"image":"quay.io/metallb/speaker:v0.14.8","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/metrics","port":"monitoring"},"initialDelaySeconds":10,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1},"name":"speaker","ports":[{"containerPort":7472,"name":"monitoring"},{"containerPort":7946,"name":"memberlist-tcp"},{"containerPort":7946,"name":"memberlist-udp","protocol":"UDP"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/metrics","port":"monitoring"},"initialDelaySeconds":10,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"add":["NET_RAW"],"drop":["ALL"]},"readOnlyRootFilesystem":true},"volumeMounts":[{"mountPath":"/etc/ml_secret_key","name":"memberlist","readOnly":true},{"mountPath":"/etc/metallb","name":"metallb-excludel2","readOnly":true}]}],"hostNetwork":true,"nodeSelector":{"kubernetes.io/os":"linux"},"serviceAccountName":"speaker","terminationGracePeriodSeconds":2,"tolerations":[{"effect":"NoSchedule","key":"node-role.kubernetes.io/master","operator":"Exists"},{"effect":"NoSchedule","key":"node-role.kubernetes.io/control-plane","operator":"Exists"}],"volumes":[{"name":"memberlist","secret":{"defaultMode":420,"secretName":"memberlist"}},{"configMap":{"defaultMode":256,"name":"metallb-excludel2"},"name":"metallb-excludel2"}]}}}}
    creationTimestamp: "2025-06-21T12:37:25Z"
    generation: 1
    labels:
      app: metallb
      component: speaker
    name: speaker
    namespace: metallb-system
    resourceVersion: "654541"
    uid: cb7e8121-7f9d-4a39-9530-5abcc68f7e11
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: metallb
        component: speaker
    template:
      metadata:
        annotations:
          prometheus.io/port: "7472"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: metallb
          component: speaker
      spec:
        containers:
        - args:
          - --port=7472
          - --log-level=info
          env:
          - name: METALLB_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: METALLB_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: METALLB_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: METALLB_ML_BIND_ADDR
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: METALLB_ML_LABELS
            value: app=metallb,component=speaker
          - name: METALLB_ML_SECRET_KEY_PATH
            value: /etc/ml_secret_key
          image: quay.io/metallb/speaker:v0.14.8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /metrics
              port: monitoring
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: speaker
          ports:
          - containerPort: 7472
            name: monitoring
            protocol: TCP
          - containerPort: 7946
            name: memberlist-tcp
            protocol: TCP
          - containerPort: 7946
            name: memberlist-udp
            protocol: UDP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /metrics
              port: monitoring
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_RAW
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/ml_secret_key
            name: memberlist
            readOnly: true
          - mountPath: /etc/metallb
            name: metallb-excludel2
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: speaker
        serviceAccountName: speaker
        terminationGracePeriodSeconds: 2
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        volumes:
        - name: memberlist
          secret:
            defaultMode: 420
            secretName: memberlist
        - configMap:
            defaultMode: 256
            name: metallb-excludel2
          name: metallb-excludel2
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberAvailable: 3
    numberMisscheduled: 0
    numberReady: 3
    observedGeneration: 1
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"admin-backend","type":"backend"},"name":"admin-backend","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"admin-backend","type":"backend"}},"strategy":{"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"admin-backend","type":"backend"}},"spec":{"containers":[{"env":[{"name":"ORACLEHOSTADMIN","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-host-admin","name":"oracle-config-admin"}}},{"name":"ORACLEPORTADMIN","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-port-admin","name":"oracle-config-admin"}}},{"name":"ORACLEUSERADMIN","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-user-admin","name":"oracle-config-admin"}}},{"name":"ORACLEPASSWORDADMIN","valueFrom":{"secretKeyRef":{"key":"password","name":"oracle-instance-password-admin"}}}],"image":"192.168.2.225:5000/administration:0.0.1-SNAPSHOT","imagePullPolicy":"Always","name":"admin-backend","ports":[{"containerPort":1994,"name":"api","protocol":"TCP"}],"resources":{"limits":{"cpu":"3","memory":"2Gi"},"requests":{"cpu":"300m","memory":"512Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN","NET_RAW"]}}}],"imagePullSecrets":[{"name":"regcred"}],"nodeSelector":{"kubernetes.io/hostname":"worker1erpnode"}}}}}
    creationTimestamp: "2025-06-24T17:19:08Z"
    generation: 1
    labels:
      app: admin-backend
      type: backend
    name: admin-backend
    namespace: default
    resourceVersion: "730247"
    uid: e4628333-4c64-4c27-b01d-ffd3ce8a3a78
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: admin-backend
        type: backend
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: admin-backend
          type: backend
      spec:
        containers:
        - env:
          - name: ORACLEHOSTADMIN
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-admin
                name: oracle-config-admin
          - name: ORACLEPORTADMIN
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-admin
                name: oracle-config-admin
          - name: ORACLEUSERADMIN
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-admin
                name: oracle-config-admin
          - name: ORACLEPASSWORDADMIN
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-admin
          image: 192.168.2.225:5000/administration:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          name: admin-backend
          ports:
          - containerPort: 1994
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "3"
              memory: 2Gi
            requests:
              cpu: 300m
              memory: 512Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker1erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-24T17:19:10Z"
      lastUpdateTime: "2025-06-24T17:19:10Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-06-24T17:19:08Z"
      lastUpdateTime: "2025-06-24T17:19:10Z"
      message: ReplicaSet "admin-backend-684d8bc6c6" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"admin-front","type":"front"},"name":"admin-front","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"admin-front","type":"front"}},"strategy":{"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"admin-front","type":"front"}},"spec":{"containers":[{"image":"192.168.2.225:5000/frontadmin:2","imagePullPolicy":"Always","name":"admin-front","ports":[{"containerPort":80,"name":"api","protocol":"TCP"}],"resources":{"limits":{"cpu":"5","memory":"3Gi"},"requests":{"cpu":"400m","memory":"700Mi"}}}],"imagePullSecrets":[{"name":"regcred"}],"nodeSelector":{"kubernetes.io/hostname":"worker2erpnode"}}}}}
    creationTimestamp: "2025-06-24T18:50:13Z"
    generation: 1
    labels:
      app: admin-front
      type: front
    name: admin-front
    namespace: default
    resourceVersion: "738917"
    uid: 4358b8e2-7583-4efc-bbe7-11c8092e8417
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: admin-front
        type: front
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: admin-front
          type: front
      spec:
        containers:
        - image: 192.168.2.225:5000/frontadmin:2
          imagePullPolicy: Always
          name: admin-front
          ports:
          - containerPort: 80
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "5"
              memory: 3Gi
            requests:
              cpu: 400m
              memory: 700Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker2erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-24T18:50:14Z"
      lastUpdateTime: "2025-06-24T18:50:14Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-06-24T18:50:13Z"
      lastUpdateTime: "2025-06-24T18:50:14Z"
      message: ReplicaSet "admin-front-559f78795b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"asi-backend","type":"backend"},"name":"asi-backend","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"asi-backend","type":"backend"}},"strategy":{"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"asi-backend","type":"backend"}},"spec":{"containers":[{"env":[{"name":"ORACLEHOSTASI","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-host-asi","name":"oracle-config-asi"}}},{"name":"ORACLEPORTASI","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-port-asi","name":"oracle-config-asi"}}},{"name":"ORACLEUSERASI","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-user-asi","name":"oracle-config-asi"}}},{"name":"ORACLEPASSWORDASI","valueFrom":{"secretKeyRef":{"key":"password","name":"oracle-instance-password-asi"}}},{"name":"ORACLEHOSTPG","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-host-pg","name":"oracle-config-parametrageglobal"}}},{"name":"ORACLEPORTPG","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-port-pg","name":"oracle-config-parametrageglobal"}}},{"name":"ORACLEUSERPG","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-user-pg","name":"oracle-config-parametrageglobal"}}},{"name":"ORACLEPASSWORDPG","valueFrom":{"secretKeyRef":{"key":"password","name":"oracle-instance-password-paramglobal"}}}],"image":"192.168.2.225:5000/asi:0.0.1-SNAPSHOT","imagePullPolicy":"Always","name":"asi-backend","ports":[{"containerPort":19099,"name":"api","protocol":"TCP"}],"resources":{"limits":{"cpu":"2","memory":"4Gi"},"requests":{"cpu":"200m","memory":"512Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN","NET_RAW"]}}}],"imagePullSecrets":[{"name":"regcred"}],"nodeSelector":{"kubernetes.io/hostname":"worker1erpnode"}}}}}
    creationTimestamp: "2025-06-24T20:38:14Z"
    generation: 1
    labels:
      app: asi-backend
      type: backend
    name: asi-backend
    namespace: default
    resourceVersion: "880355"
    uid: cc0fe031-1efe-4b4c-b5ae-2054e236526e
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: asi-backend
        type: backend
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: asi-backend
          type: backend
      spec:
        containers:
        - env:
          - name: ORACLEHOSTASI
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-asi
                name: oracle-config-asi
          - name: ORACLEPORTASI
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-asi
                name: oracle-config-asi
          - name: ORACLEUSERASI
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-asi
                name: oracle-config-asi
          - name: ORACLEPASSWORDASI
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-asi
          - name: ORACLEHOSTPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-pg
                name: oracle-config-parametrageglobal
          - name: ORACLEPORTPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-pg
                name: oracle-config-parametrageglobal
          - name: ORACLEUSERPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-pg
                name: oracle-config-parametrageglobal
          - name: ORACLEPASSWORDPG
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-paramglobal
          image: 192.168.2.225:5000/asi:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          name: asi-backend
          ports:
          - containerPort: 19099
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 4Gi
            requests:
              cpu: 200m
              memory: 512Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker1erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-24T20:38:14Z"
      lastUpdateTime: "2025-06-24T20:38:15Z"
      message: ReplicaSet "asi-backend-cfd448788" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-06-25T20:33:47Z"
      lastUpdateTime: "2025-06-25T20:33:47Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"asi-front","type":"front"},"name":"asi-front-deployment","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"asi-front","type":"front"}},"strategy":{"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"asi-front","type":"front"}},"spec":{"containers":[{"image":"192.168.2.225:5000/frontasi:1","imagePullPolicy":"Always","name":"asi-front","ports":[{"containerPort":80,"name":"api","protocol":"TCP"}],"resources":{"limits":{"cpu":"2","memory":"3Gi"},"requests":{"cpu":"300m","memory":"1024Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN","NET_RAW"]}}}],"imagePullSecrets":[{"name":"regcred"}],"nodeSelector":{"kubernetes.io/hostname":"worker2erpnode"}}}}}
    creationTimestamp: "2025-06-23T16:05:23Z"
    generation: 1
    labels:
      app: asi-front
      type: front
    name: asi-front-deployment
    namespace: default
    resourceVersion: "880288"
    uid: 65ee0eab-4e8f-44f8-9d35-335b8bc170ba
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: asi-front
        type: front
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: asi-front
          type: front
      spec:
        containers:
        - image: 192.168.2.225:5000/frontasi:1
          imagePullPolicy: Always
          name: asi-front
          ports:
          - containerPort: 80
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 3Gi
            requests:
              cpu: 300m
              memory: 1Gi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker2erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-23T16:05:23Z"
      lastUpdateTime: "2025-06-23T16:05:26Z"
      message: ReplicaSet "asi-front-deployment-7f75c67b49" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-06-25T20:33:19Z"
      lastUpdateTime: "2025-06-25T20:33:19Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"budget-backend","type":"backend"},"name":"budget-backend","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"budget-backend","type":"backend"}},"strategy":{"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"budget-backend","type":"backend"}},"spec":{"containers":[{"env":[{"name":"ORACLEHOSTBUDGET","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-host-budget","name":"oracle-config-budget"}}},{"name":"ORACLEPORTBUDGET","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-port-budget","name":"oracle-config-budget"}}},{"name":"ORACLEUSERBUDGET","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-user-budget","name":"oracle-config-budget"}}},{"name":"ORACLEPASSWORDBUDGET","valueFrom":{"secretKeyRef":{"key":"password","name":"oracle-instance-password-budget"}}},{"name":"ORACLEHOSTPG","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-host-pg","name":"oracle-config-pg"}}},{"name":"ORACLEPORTPG","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-port-pg","name":"oracle-config-pg"}}},{"name":"ORACLEUSERPG","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-user-pg","name":"oracle-config-pg"}}},{"name":"ORACLEPASSWORDPG","valueFrom":{"secretKeyRef":{"key":"password","name":"oracle-instance-password-pg"}}}],"image":"192.168.2.225:5000/budget:0.0.1-SNAPSHOT","imagePullPolicy":"Always","name":"budget-backend","ports":[{"containerPort":9097,"name":"api","protocol":"TCP"}],"resources":{"limits":{"cpu":"2","memory":"1Gi"},"requests":{"cpu":"200m","memory":"256Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN","NET_RAW"]}}}],"imagePullSecrets":[{"name":"regcred"}],"nodeSelector":{"kubernetes.io/hostname":"worker1erpnode"}}}}}
    creationTimestamp: "2025-06-24T18:03:26Z"
    generation: 1
    labels:
      app: budget-backend
      type: backend
    name: budget-backend
    namespace: default
    resourceVersion: "734391"
    uid: 9c79f46f-bf32-4f0c-acb9-0218fa6d3b70
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: budget-backend
        type: backend
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: budget-backend
          type: backend
      spec:
        containers:
        - env:
          - name: ORACLEHOSTBUDGET
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-budget
                name: oracle-config-budget
          - name: ORACLEPORTBUDGET
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-budget
                name: oracle-config-budget
          - name: ORACLEUSERBUDGET
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-budget
                name: oracle-config-budget
          - name: ORACLEPASSWORDBUDGET
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-budget
          - name: ORACLEHOSTPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-pg
                name: oracle-config-pg
          - name: ORACLEPORTPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-pg
                name: oracle-config-pg
          - name: ORACLEUSERPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-pg
                name: oracle-config-pg
          - name: ORACLEPASSWORDPG
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-pg
          image: 192.168.2.225:5000/budget:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          name: budget-backend
          ports:
          - containerPort: 9097
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 256Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker1erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-24T18:03:29Z"
      lastUpdateTime: "2025-06-24T18:03:29Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-06-24T18:03:26Z"
      lastUpdateTime: "2025-06-24T18:03:29Z"
      message: ReplicaSet "budget-backend-6c7c7fbc67" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"budget-front","type":"front"},"name":"budget-front-deployment","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"budget-front","type":"front"}},"strategy":{"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"budget-front","type":"front"}},"spec":{"containers":[{"image":"192.168.2.225:5000/frontbudget:2","imagePullPolicy":"Always","name":"budget-front","ports":[{"containerPort":80,"name":"api","protocol":"TCP"}],"resources":{"limits":{"cpu":"2","memory":"3Gi"},"requests":{"cpu":"300m","memory":"1024Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN","NET_RAW"]}}}],"imagePullSecrets":[{"name":"regcred"}],"nodeSelector":{"kubernetes.io/hostname":"worker2erpnode"}}}}}
    creationTimestamp: "2025-06-24T18:39:57Z"
    generation: 1
    labels:
      app: budget-front
      type: front
    name: budget-front-deployment
    namespace: default
    resourceVersion: "737889"
    uid: cfd95c72-67d3-4b38-8c65-dbeb3b6bc440
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: budget-front
        type: front
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: budget-front
          type: front
      spec:
        containers:
        - image: 192.168.2.225:5000/frontbudget:2
          imagePullPolicy: Always
          name: budget-front
          ports:
          - containerPort: 80
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 3Gi
            requests:
              cpu: 300m
              memory: 1Gi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker2erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-24T18:39:58Z"
      lastUpdateTime: "2025-06-24T18:39:58Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-06-24T18:39:57Z"
      lastUpdateTime: "2025-06-24T18:39:58Z"
      message: ReplicaSet "budget-front-deployment-74cf679df6" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"comptabilite-backend","type":"backend"},"name":"comptabilite-backend","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"comptabilite-backend","type":"backend"}},"strategy":{"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"comptabilite-backend","type":"backend"}},"spec":{"containers":[{"env":[{"name":"ORACLEHOSTCOMPTA","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-host-comptabilite","name":"oracle-config-comptabilite"}}},{"name":"ORACLEPORTCOMPTA","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-port-comptabilite","name":"oracle-config-comptabilite"}}},{"name":"ORACLEUSERCOMPTA","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-user-comptabilite","name":"oracle-config-comptabilite"}}},{"name":"ORACLEPASSWORDCOMPTA","valueFrom":{"secretKeyRef":{"key":"password","name":"oracle-instance-password-comptabilite"}}},{"name":"ORACLEHOSTPG","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-host-pg","name":"oracle-config-pg"}}},{"name":"ORACLEPORTPG","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-port-pg","name":"oracle-config-pg"}}},{"name":"ORACLEUSERPG","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-user-pg","name":"oracle-config-pg"}}},{"name":"ORACLEPASSWORDPG","valueFrom":{"secretKeyRef":{"key":"password","name":"oracle-instance-password-pg"}}},{"name":"ORACLEHOSTIMM","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-host-imm","name":"oracle-config-imm"}}},{"name":"ORACLEPORTIMM","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-port-imm","name":"oracle-config-imm"}}},{"name":"ORACLEUSERIMM","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-user-imm","name":"oracle-config-imm"}}},{"name":"ORACLEPASSWORDIMM","valueFrom":{"secretKeyRef":{"key":"password","name":"oracle-instance-password-imm"}}},{"name":"ORACLEHOSTCOTISATION","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-host-cotisation","name":"oracle-config-cotisation"}}},{"name":"ORACLEPORTCOTISATION","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-port-cotisation","name":"oracle-config-cotisation"}}},{"name":"ORACLEUSERCOTISATION","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-user-cotisation","name":"oracle-config-cotisation"}}},{"name":"ORACLEPASSWORDCOTISATION","valueFrom":{"secretKeyRef":{"key":"password","name":"oracle-instance-password-cotisation"}}},{"name":"ORACLEHOSTTRACACTION","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-host-tracaction","name":"oracle-config-tracaction"}}},{"name":"ORACLEPORTTRACACTION","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-port-tracaction","name":"oracle-config-tracaction"}}},{"name":"ORACLEUSERTRACACTION","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-user-tracaction","name":"oracle-config-tracaction"}}},{"name":"ORACLEPASSWORDTRACACTION","valueFrom":{"secretKeyRef":{"key":"password","name":"oracle-instance-password-tracaction"}}}],"image":"192.168.2.225:5000/comptabilite:0.0.1-SNAPSHOT","imagePullPolicy":"Always","name":"comptabilite-backend","ports":[{"containerPort":8093,"name":"api","protocol":"TCP"}],"resources":{"limits":{"cpu":"4","memory":"2Gi"},"requests":{"cpu":"200m","memory":"256Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN","NET_RAW"]}}}],"imagePullSecrets":[{"name":"regcred"}],"nodeSelector":{"kubernetes.io/hostname":"worker1erpnode"}}}}}
    creationTimestamp: "2025-06-25T09:33:12Z"
    generation: 1
    labels:
      app: comptabilite-backend
      type: backend
    name: comptabilite-backend
    namespace: default
    resourceVersion: "822479"
    uid: 79b0925e-b686-45c9-a6fd-72f1add31a45
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: comptabilite-backend
        type: backend
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: comptabilite-backend
          type: backend
      spec:
        containers:
        - env:
          - name: ORACLEHOSTCOMPTA
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-comptabilite
                name: oracle-config-comptabilite
          - name: ORACLEPORTCOMPTA
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-comptabilite
                name: oracle-config-comptabilite
          - name: ORACLEUSERCOMPTA
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-comptabilite
                name: oracle-config-comptabilite
          - name: ORACLEPASSWORDCOMPTA
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-comptabilite
          - name: ORACLEHOSTPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-pg
                name: oracle-config-pg
          - name: ORACLEPORTPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-pg
                name: oracle-config-pg
          - name: ORACLEUSERPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-pg
                name: oracle-config-pg
          - name: ORACLEPASSWORDPG
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-pg
          - name: ORACLEHOSTIMM
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-imm
                name: oracle-config-imm
          - name: ORACLEPORTIMM
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-imm
                name: oracle-config-imm
          - name: ORACLEUSERIMM
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-imm
                name: oracle-config-imm
          - name: ORACLEPASSWORDIMM
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-imm
          - name: ORACLEHOSTCOTISATION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-cotisation
                name: oracle-config-cotisation
          - name: ORACLEPORTCOTISATION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-cotisation
                name: oracle-config-cotisation
          - name: ORACLEUSERCOTISATION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-cotisation
                name: oracle-config-cotisation
          - name: ORACLEPASSWORDCOTISATION
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-cotisation
          - name: ORACLEHOSTTRACACTION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-tracaction
                name: oracle-config-tracaction
          - name: ORACLEPORTTRACACTION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-tracaction
                name: oracle-config-tracaction
          - name: ORACLEUSERTRACACTION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-tracaction
                name: oracle-config-tracaction
          - name: ORACLEPASSWORDTRACACTION
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-tracaction
          image: 192.168.2.225:5000/comptabilite:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          name: comptabilite-backend
          ports:
          - containerPort: 8093
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "4"
              memory: 2Gi
            requests:
              cpu: 200m
              memory: 256Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker1erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-25T09:33:12Z"
      lastUpdateTime: "2025-06-25T09:33:15Z"
      message: ReplicaSet "comptabilite-backend-58964b6fbc" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-06-25T10:01:57Z"
      lastUpdateTime: "2025-06-25T10:01:57Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"cotisation-backend","type":"backend"},"name":"cotisation-backend","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"cotisation-backend","type":"backend"}},"strategy":{"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"cotisation-backend","type":"backend"}},"spec":{"containers":[{"env":[{"name":"ORACLEHOSTIMM","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-host-imm","name":"oracle-config-imm"}}},{"name":"ORACLEPORTIMM","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-port-imm","name":"oracle-config-imm"}}},{"name":"ORACLEUSERIMM","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-user-imm","name":"oracle-config-imm"}}},{"name":"ORACLEPASSWORDIMM","valueFrom":{"secretKeyRef":{"key":"password","name":"oracle-instance-password-imm"}}},{"name":"ORACLEHOSTCOTISATION","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-host-cotisation","name":"oracle-config-cotisation"}}},{"name":"ORACLEPORTCOTISATION","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-port-cotisation","name":"oracle-config-cotisation"}}},{"name":"ORACLEUSERCOTISATION","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-user-cotisation","name":"oracle-config-cotisation"}}},{"name":"ORACLEHOSTTRESORERIE","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-host-tresorerie","name":"oracle-config-tresorerie"}}},{"name":"ORACLEPORTTRESORERIE","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-port-tresorerie","name":"oracle-config-tresorerie"}}},{"name":"ORACLEUSERTRESORERIE","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-user-tresorerie","name":"oracle-config-tresorerie"}}},{"name":"ORACLEPASSWORDTRESORERIE","valueFrom":{"secretKeyRef":{"key":"password","name":"oracle-instance-password-tresorerie"}}},{"name":"ORACLEPASSWORDCOTISATION","valueFrom":{"secretKeyRef":{"key":"password","name":"oracle-instance-password-cotisation"}}}],"image":"192.168.2.225:5000/cotisation:0.0.1-SNAPSHOT","imagePullPolicy":"Always","name":"cotisation-backend","ports":[{"containerPort":8082,"name":"api","protocol":"TCP"}],"resources":{"limits":{"cpu":"2","memory":"1Gi"},"requests":{"cpu":"100m","memory":"128Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN","NET_RAW"]}}}],"imagePullSecrets":[{"name":"regcred"}],"nodeSelector":{"kubernetes.io/hostname":"worker1erpnode"}}}}}
    creationTimestamp: "2025-06-24T20:31:18Z"
    generation: 1
    labels:
      app: cotisation-backend
      type: backend
    name: cotisation-backend
    namespace: default
    resourceVersion: "748407"
    uid: c95c90e7-3a0a-4c94-ae7d-ae9a1a730fcc
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: cotisation-backend
        type: backend
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: cotisation-backend
          type: backend
      spec:
        containers:
        - env:
          - name: ORACLEHOSTIMM
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-imm
                name: oracle-config-imm
          - name: ORACLEPORTIMM
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-imm
                name: oracle-config-imm
          - name: ORACLEUSERIMM
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-imm
                name: oracle-config-imm
          - name: ORACLEPASSWORDIMM
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-imm
          - name: ORACLEHOSTCOTISATION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-cotisation
                name: oracle-config-cotisation
          - name: ORACLEPORTCOTISATION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-cotisation
                name: oracle-config-cotisation
          - name: ORACLEUSERCOTISATION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-cotisation
                name: oracle-config-cotisation
          - name: ORACLEHOSTTRESORERIE
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-tresorerie
                name: oracle-config-tresorerie
          - name: ORACLEPORTTRESORERIE
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-tresorerie
                name: oracle-config-tresorerie
          - name: ORACLEUSERTRESORERIE
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-tresorerie
                name: oracle-config-tresorerie
          - name: ORACLEPASSWORDTRESORERIE
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-tresorerie
          - name: ORACLEPASSWORDCOTISATION
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-cotisation
          image: 192.168.2.225:5000/cotisation:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          name: cotisation-backend
          ports:
          - containerPort: 8082
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker1erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-24T20:31:19Z"
      lastUpdateTime: "2025-06-24T20:31:19Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-06-24T20:31:18Z"
      lastUpdateTime: "2025-06-24T20:31:19Z"
      message: ReplicaSet "cotisation-backend-76c5c9d5f8" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"etatfinancier-backend","type":"backend"},"name":"etatfinancier-backend","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"etatfinancier-backend","type":"backend"}},"strategy":{"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"etatfinancier-backend","type":"backend"}},"spec":{"containers":[{"env":[{"name":"ORACLEHOSTETATFINANCIER","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-host-etatfinancier","name":"oracle-config-etatfinancier"}}},{"name":"ORACLEPORTETATFINANCIER","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-port-etatfinancier","name":"oracle-config-etatfinancier"}}},{"name":"ORACLEUSERETATFINANCIER","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-user-etatfinancier","name":"oracle-config-etatfinancier"}}},{"name":"ORACLEPASSWORDETATFINANCIER","valueFrom":{"secretKeyRef":{"key":"password","name":"oracle-instance-password-etatfinancier"}}}],"image":"192.168.2.225:5000/etatfinancier:0.0.1-SNAPSHOT","imagePullPolicy":"Always","name":"etatfinancier-backend","ports":[{"containerPort":1999,"name":"api","protocol":"TCP"}],"resources":{"limits":{"cpu":"2","memory":"1Gi"},"requests":{"cpu":"100m","memory":"512Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN","NET_RAW"]}}}],"imagePullSecrets":[{"name":"regcred"}],"nodeSelector":{"kubernetes.io/hostname":"worker1erpnode"}}}}}
    creationTimestamp: "2025-06-25T13:34:56Z"
    generation: 1
    labels:
      app: etatfinancier-backend
      type: backend
    name: etatfinancier-backend
    namespace: default
    resourceVersion: "841789"
    uid: d32be8fb-8927-4b21-b81c-d052fcae0496
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: etatfinancier-backend
        type: backend
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: etatfinancier-backend
          type: backend
      spec:
        containers:
        - env:
          - name: ORACLEHOSTETATFINANCIER
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-etatfinancier
                name: oracle-config-etatfinancier
          - name: ORACLEPORTETATFINANCIER
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-etatfinancier
                name: oracle-config-etatfinancier
          - name: ORACLEUSERETATFINANCIER
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-etatfinancier
                name: oracle-config-etatfinancier
          - name: ORACLEPASSWORDETATFINANCIER
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-etatfinancier
          image: 192.168.2.225:5000/etatfinancier:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          name: etatfinancier-backend
          ports:
          - containerPort: 1999
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 512Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker1erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-25T13:34:59Z"
      lastUpdateTime: "2025-06-25T13:34:59Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-06-25T13:34:56Z"
      lastUpdateTime: "2025-06-25T13:34:59Z"
      message: ReplicaSet "etatfinancier-backend-7684968867" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"fo-backend","type":"backend"},"name":"fo-backend","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"fo-backend","type":"backend"}},"strategy":{"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"fo-backend","type":"backend"}},"spec":{"containers":[{"env":[{"name":"ORACLEHOSTFO","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-host-fo","name":"oracle-config-fo"}}},{"name":"ORACLEPORTFO","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-port-fo","name":"oracle-config-fo"}}},{"name":"ORACLEUSERFO","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-user-fo","name":"oracle-config-fo"}}},{"name":"ORACLEPASSWORDFO","valueFrom":{"secretKeyRef":{"key":"password","name":"oracle-instance-password-fo"}}},{"name":"ORACLEHOST","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-host-pg","name":"oracle-config-pg"}}},{"name":"ORACLEPORT","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-port-pg","name":"oracle-config-pg"}}},{"name":"ORACLEUSER","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-user-pg","name":"oracle-config-pg"}}},{"name":"ORACLEPASSWORD","valueFrom":{"secretKeyRef":{"key":"password","name":"oracle-instance-password-pg"}}},{"name":"ORACLEHOSTTRACACTION","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-host-tracaction","name":"oracle-config-tracaction"}}},{"name":"ORACLEPORTTRACACTION","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-port-tracaction","name":"oracle-config-tracaction"}}},{"name":"ORACLEUSERTRACACTION","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-user-tracaction","name":"oracle-config-tracaction"}}},{"name":"ORACLEPASSWORDTRACACTION","valueFrom":{"secretKeyRef":{"key":"password","name":"oracle-instance-password-tracaction"}}}],"image":"192.168.2.225:5000/fontoffice:0.0.1-SNAPSHOT","imagePullPolicy":"Always","name":"fo-backend","ports":[{"containerPort":8999,"name":"api","protocol":"TCP"}],"resources":{"limits":{"cpu":"2","memory":"1Gi"},"requests":{"cpu":"200m","memory":"256Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN","NET_RAW"]}}}],"imagePullSecrets":[{"name":"regcred"}],"nodeSelector":{"kubernetes.io/hostname":"worker1erpnode"}}}}}
    creationTimestamp: "2025-06-24T19:42:37Z"
    generation: 1
    labels:
      app: fo-backend
      type: backend
    name: fo-backend
    namespace: default
    resourceVersion: "877013"
    uid: 2a765c4a-47b2-4d89-8694-e4c0044147fd
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: fo-backend
        type: backend
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: fo-backend
          type: backend
      spec:
        containers:
        - env:
          - name: ORACLEHOSTFO
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-fo
                name: oracle-config-fo
          - name: ORACLEPORTFO
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-fo
                name: oracle-config-fo
          - name: ORACLEUSERFO
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-fo
                name: oracle-config-fo
          - name: ORACLEPASSWORDFO
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-fo
          - name: ORACLEHOST
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-pg
                name: oracle-config-pg
          - name: ORACLEPORT
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-pg
                name: oracle-config-pg
          - name: ORACLEUSER
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-pg
                name: oracle-config-pg
          - name: ORACLEPASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-pg
          - name: ORACLEHOSTTRACACTION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-tracaction
                name: oracle-config-tracaction
          - name: ORACLEPORTTRACACTION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-tracaction
                name: oracle-config-tracaction
          - name: ORACLEUSERTRACACTION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-tracaction
                name: oracle-config-tracaction
          - name: ORACLEPASSWORDTRACACTION
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-tracaction
          image: 192.168.2.225:5000/fontoffice:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          name: fo-backend
          ports:
          - containerPort: 8999
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 256Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker1erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-24T19:42:37Z"
      lastUpdateTime: "2025-06-24T19:42:38Z"
      message: ReplicaSet "fo-backend-8476c5b957" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-06-25T19:57:37Z"
      lastUpdateTime: "2025-06-25T19:57:37Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"fo-front","type":"front"},"name":"fo-front-deployment","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"fo-front","type":"front"}},"strategy":{"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"fo-front","type":"front"}},"spec":{"containers":[{"image":"192.168.2.225:5000/frontfrontoffice:1","imagePullPolicy":"Always","name":"fo-front","ports":[{"containerPort":80,"name":"api","protocol":"TCP"}],"resources":{"limits":{"cpu":"3","memory":"4Gi"},"requests":{"cpu":"300m","memory":"2046Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN","NET_RAW"]}}}],"imagePullSecrets":[{"name":"regcred"}],"nodeSelector":{"kubernetes.io/hostname":"worker2erpnode"}}}}}
    creationTimestamp: "2025-06-24T19:42:32Z"
    generation: 1
    labels:
      app: fo-front
      type: front
    name: fo-front-deployment
    namespace: default
    resourceVersion: "743798"
    uid: cf02420d-bf1f-4de0-a652-45b74a527622
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: fo-front
        type: front
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: fo-front
          type: front
      spec:
        containers:
        - image: 192.168.2.225:5000/frontfrontoffice:1
          imagePullPolicy: Always
          name: fo-front
          ports:
          - containerPort: 80
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "3"
              memory: 4Gi
            requests:
              cpu: 300m
              memory: 2046Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker2erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-24T19:42:33Z"
      lastUpdateTime: "2025-06-24T19:42:33Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-06-24T19:42:32Z"
      lastUpdateTime: "2025-06-24T19:42:33Z"
      message: ReplicaSet "fo-front-deployment-5b75cbc844" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"fp","type":"front"},"name":"fp","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"fp","type":"front"}},"strategy":{"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"fp","type":"front"}},"spec":{"containers":[{"image":"192.168.2.225:5000/frontprestation:1","imagePullPolicy":"Always","name":"fp","ports":[{"containerPort":80,"name":"api","protocol":"TCP"}],"resources":{"limits":{"cpu":"2","memory":"1Gi"},"requests":{"cpu":"100m","memory":"128Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN","NET_RAW"]}}}],"imagePullSecrets":[{"name":"regcred"}],"nodeSelector":{"kubernetes.io/hostname":"worker2erpnode"}}}}}
    creationTimestamp: "2025-06-23T16:08:12Z"
    generation: 1
    labels:
      app: fp
      type: front
    name: fp
    namespace: default
    resourceVersion: "849146"
    uid: d370b5f9-ab94-4363-8a4f-158a4b64ae19
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: fp
        type: front
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: fp
          type: front
      spec:
        containers:
        - image: 192.168.2.225:5000/frontprestation:1
          imagePullPolicy: Always
          name: fp
          ports:
          - containerPort: 80
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker2erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-23T16:08:12Z"
      lastUpdateTime: "2025-06-23T16:08:15Z"
      message: ReplicaSet "fp-7987c86d4f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-06-25T14:50:18Z"
      lastUpdateTime: "2025-06-25T14:50:18Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"front-finance","type":"front"},"name":"front-finance","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"front-finance","type":"front"}},"strategy":{"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"front-finance","type":"front"}},"spec":{"containers":[{"image":"192.168.2.225:5000/frontfinance:2","imagePullPolicy":"Always","name":"front-finance","ports":[{"containerPort":80,"name":"api","protocol":"TCP"}],"resources":{"limits":{"cpu":"3","memory":"3Gi"},"requests":{"cpu":"300m","memory":"2048Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN","NET_RAW"]}}}],"imagePullSecrets":[{"name":"regcred"}],"nodeSelector":{"kubernetes.io/hostname":"worker2erpnode"}}}}}
    creationTimestamp: "2025-06-24T20:34:59Z"
    generation: 1
    labels:
      app: front-finance
      type: front
    name: front-finance
    namespace: default
    resourceVersion: "748802"
    uid: 2b32cd35-f74d-41e0-b20c-53f5e286f7ab
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: front-finance
        type: front
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: front-finance
          type: front
      spec:
        containers:
        - image: 192.168.2.225:5000/frontfinance:2
          imagePullPolicy: Always
          name: front-finance
          ports:
          - containerPort: 80
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "3"
              memory: 3Gi
            requests:
              cpu: 300m
              memory: 2Gi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker2erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-24T20:35:00Z"
      lastUpdateTime: "2025-06-24T20:35:00Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-06-24T20:34:59Z"
      lastUpdateTime: "2025-06-24T20:35:00Z"
      message: ReplicaSet "front-finance-cc6457784" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"front-tb","type":"front"},"name":"front-tb","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"front-tb","type":"front"}},"strategy":{"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"front-tb","type":"front"}},"spec":{"containers":[{"image":"192.168.2.225:5000/fronttableaudebord:1","imagePullPolicy":"Always","name":"front-tb","ports":[{"containerPort":80,"name":"api","protocol":"TCP"}],"resources":{"limits":{"cpu":"4046m","memory":"6120Mi"},"requests":{"cpu":"1124m","memory":"1152Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN","NET_RAW"]}}}],"imagePullSecrets":[{"name":"regcred"}],"nodeSelector":{"kubernetes.io/hostname":"worker2erpnode"}}}}}
    creationTimestamp: "2025-06-25T09:30:56Z"
    generation: 1
    labels:
      app: front-tb
      type: front
    name: front-tb
    namespace: default
    resourceVersion: "819629"
    uid: a9dc39e5-7e45-4c30-a17a-b807799b4976
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: front-tb
        type: front
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: front-tb
          type: front
      spec:
        containers:
        - image: 192.168.2.225:5000/fronttableaudebord:1
          imagePullPolicy: Always
          name: front-tb
          ports:
          - containerPort: 80
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: 4046m
              memory: 6120Mi
            requests:
              cpu: 1124m
              memory: 1152Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker2erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-25T09:30:58Z"
      lastUpdateTime: "2025-06-25T09:30:58Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-06-25T09:30:56Z"
      lastUpdateTime: "2025-06-25T09:30:58Z"
      message: ReplicaSet "front-tb-dcd9fcf97" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"gateway","type":"backend"},"name":"gateway","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"gateway","type":"backend"}},"strategy":{"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"gateway","type":"backend"}},"spec":{"containers":[{"image":"192.168.2.225:5000/gateway:0.0.1-SNAPSHOT","imagePullPolicy":"Always","name":"gateway","ports":[{"containerPort":8888,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"2","memory":"1Gi"},"requests":{"cpu":"100m","memory":"128Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN","NET_RAW"]}}}],"imagePullSecrets":[{"name":"regcred"}],"nodeSelector":{"kubernetes.io/hostname":"worker1erpnode"}}}}}
    creationTimestamp: "2025-06-24T17:18:33Z"
    generation: 1
    labels:
      app: gateway
      type: backend
    name: gateway
    namespace: default
    resourceVersion: "730167"
    uid: f2466454-338f-4436-843a-939b2fdf7490
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: gateway
        type: backend
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: gateway
          type: backend
      spec:
        containers:
        - image: 192.168.2.225:5000/gateway:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          name: gateway
          ports:
          - containerPort: 8888
            name: http
            protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker1erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-24T17:18:34Z"
      lastUpdateTime: "2025-06-24T17:18:34Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-06-24T17:18:33Z"
      lastUpdateTime: "2025-06-24T17:18:34Z"
      message: ReplicaSet "gateway-7b9f4c767b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"gira-backend","type":"backend"},"name":"gira-backend","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"gira-backend","type":"backend"}},"strategy":{"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"gira-backend","type":"backend"}},"spec":{"containers":[{"env":[{"name":"ORACLEHOSTGIRA","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-host-gira","name":"oracle-config-gira"}}},{"name":"ORACLEPORTGIRA","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-port-gira","name":"oracle-config-gira"}}},{"name":"ORACLEUSERGIRA","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-user-gira","name":"oracle-config-gira"}}},{"name":"ORACLEPASSWORDGIRA","valueFrom":{"secretKeyRef":{"key":"password","name":"oracle-instance-password-gira"}}},{"name":"ORACLEHOSTPG","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-host-pg","name":"oracle-config-pg"}}},{"name":"ORACLEPORTPG","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-port-pg","name":"oracle-config-pg"}}},{"name":"ORACLEUSERPG","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-user-pg","name":"oracle-config-pg"}}},{"name":"ORACLEPASSWORDPG","valueFrom":{"secretKeyRef":{"key":"password","name":"oracle-instance-password-pg"}}}],"image":"192.168.2.225:5000/gira:0.0.1-SNAPSHOT","imagePullPolicy":"Always","name":"gira-backend","ports":[{"containerPort":8989,"name":"api","protocol":"TCP"}],"resources":{"limits":{"cpu":"2","memory":"1Gi"},"requests":{"cpu":"100m","memory":"128Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN","NET_RAW"]}}}],"imagePullSecrets":[{"name":"regcred"}],"nodeSelector":{"kubernetes.io/hostname":"worker1erpnode"}}}}}
    creationTimestamp: "2025-06-24T20:34:14Z"
    generation: 1
    labels:
      app: gira-backend
      type: backend
    name: gira-backend
    namespace: default
    resourceVersion: "748701"
    uid: 864efb7f-be7a-41a2-9c15-0815bb4c1752
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: gira-backend
        type: backend
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: gira-backend
          type: backend
      spec:
        containers:
        - env:
          - name: ORACLEHOSTGIRA
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-gira
                name: oracle-config-gira
          - name: ORACLEPORTGIRA
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-gira
                name: oracle-config-gira
          - name: ORACLEUSERGIRA
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-gira
                name: oracle-config-gira
          - name: ORACLEPASSWORDGIRA
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-gira
          - name: ORACLEHOSTPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-pg
                name: oracle-config-pg
          - name: ORACLEPORTPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-pg
                name: oracle-config-pg
          - name: ORACLEUSERPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-pg
                name: oracle-config-pg
          - name: ORACLEPASSWORDPG
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-pg
          image: 192.168.2.225:5000/gira:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          name: gira-backend
          ports:
          - containerPort: 8989
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker1erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-24T20:34:15Z"
      lastUpdateTime: "2025-06-24T20:34:15Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-06-24T20:34:14Z"
      lastUpdateTime: "2025-06-24T20:34:15Z"
      message: ReplicaSet "gira-backend-59d89b9474" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"gira-front","type":"front"},"name":"gira-front-deployment","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"gira-front","type":"front"}},"template":{"metadata":{"labels":{"app":"gira-front","type":"front"}},"spec":{"containers":[{"image":"192.168.2.225:5000/frontgira:1","imagePullPolicy":"Always","name":"gira-front","ports":[{"containerPort":80,"name":"api","protocol":"TCP"}],"resources":{"limits":{"cpu":"2","memory":"3Gi"},"requests":{"cpu":"300m","memory":"1024Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN","NET_RAW"]}}}],"imagePullSecrets":[{"name":"regcred"}],"nodeSelector":{"kubernetes.io/hostname":"worker2erpnode"}}}}}
    creationTimestamp: "2025-06-23T16:06:30Z"
    generation: 1
    labels:
      app: gira-front
      type: front
    name: gira-front-deployment
    namespace: default
    resourceVersion: "760431"
    uid: 3f67a10d-c05e-4e6b-a494-cbdb73f5e7d7
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: gira-front
        type: front
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: gira-front
          type: front
      spec:
        containers:
        - image: 192.168.2.225:5000/frontgira:1
          imagePullPolicy: Always
          name: gira-front
          ports:
          - containerPort: 80
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 3Gi
            requests:
              cpu: 300m
              memory: 1Gi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker2erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-23T16:06:30Z"
      lastUpdateTime: "2025-06-23T16:06:33Z"
      message: ReplicaSet "gira-front-deployment-6c46494f77" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-06-24T22:39:08Z"
      lastUpdateTime: "2025-06-24T22:39:08Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"immatriculation-backend","type":"backend"},"name":"immatriculation-backend","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"immatriculation-backend","type":"backend"}},"strategy":{"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"immatriculation-backend","type":"backend"}},"spec":{"containers":[{"env":[{"name":"ORACLEHOSTIMM","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-host-imm","name":"oracle-config-imm"}}},{"name":"ORACLEPORTIMM","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-port-imm","name":"oracle-config-imm"}}},{"name":"ORACLEUSERIMM","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-user-imm","name":"oracle-config-imm"}}},{"name":"ORACLEPASSWORDIMM","valueFrom":{"secretKeyRef":{"key":"password","name":"oracle-instance-password-imm"}}},{"name":"ORACLEHOSTPG","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-host-pg","name":"oracle-config-parametrageglobal"}}},{"name":"ORACLEPORTPG","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-port-pg","name":"oracle-config-parametrageglobal"}}},{"name":"ORACLEUSERPG","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-user-pg","name":"oracle-config-parametrageglobal"}}},{"name":"ORACLEHOSTCOTISATION","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-host-cotisation","name":"oracle-config-cotisation"}}},{"name":"ORACLEPORTCOTISATION","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-port-cotisation","name":"oracle-config-cotisation"}}},{"name":"ORACLEUSERCOTISATION","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-user-cotisation","name":"oracle-config-cotisation"}}},{"name":"ORACLEPASSWORDPG","valueFrom":{"secretKeyRef":{"key":"password","name":"oracle-instance-password-paramglobal"}}},{"name":"ORACLEPASSWORDCOTISATION","valueFrom":{"secretKeyRef":{"key":"password","name":"oracle-instance-password-cotisation"}}}],"image":"192.168.2.225:5000/immatriculation:0.0.1-SNAPSHOT","imagePullPolicy":"Always","name":"immatriculation-backend","ports":[{"containerPort":1996,"name":"api","protocol":"TCP"}],"resources":{"limits":{"cpu":"3","memory":"5Gi"},"requests":{"cpu":"300m","memory":"2046Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN","NET_RAW"]}}}],"imagePullSecrets":[{"name":"regcred"}],"nodeSelector":{"kubernetes.io/hostname":"worker1erpnode"}}}}}
    creationTimestamp: "2025-06-24T20:03:33Z"
    generation: 1
    labels:
      app: immatriculation-backend
      type: backend
    name: immatriculation-backend
    namespace: default
    resourceVersion: "745742"
    uid: 53847c09-648b-417d-be7d-0ea971ddf4a4
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: immatriculation-backend
        type: backend
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: immatriculation-backend
          type: backend
      spec:
        containers:
        - env:
          - name: ORACLEHOSTIMM
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-imm
                name: oracle-config-imm
          - name: ORACLEPORTIMM
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-imm
                name: oracle-config-imm
          - name: ORACLEUSERIMM
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-imm
                name: oracle-config-imm
          - name: ORACLEPASSWORDIMM
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-imm
          - name: ORACLEHOSTPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-pg
                name: oracle-config-parametrageglobal
          - name: ORACLEPORTPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-pg
                name: oracle-config-parametrageglobal
          - name: ORACLEUSERPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-pg
                name: oracle-config-parametrageglobal
          - name: ORACLEHOSTCOTISATION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-cotisation
                name: oracle-config-cotisation
          - name: ORACLEPORTCOTISATION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-cotisation
                name: oracle-config-cotisation
          - name: ORACLEUSERCOTISATION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-cotisation
                name: oracle-config-cotisation
          - name: ORACLEPASSWORDPG
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-paramglobal
          - name: ORACLEPASSWORDCOTISATION
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-cotisation
          image: 192.168.2.225:5000/immatriculation:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          name: immatriculation-backend
          ports:
          - containerPort: 1996
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "3"
              memory: 5Gi
            requests:
              cpu: 300m
              memory: 2046Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker1erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-24T20:03:34Z"
      lastUpdateTime: "2025-06-24T20:03:34Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-06-24T20:03:33Z"
      lastUpdateTime: "2025-06-24T20:03:34Z"
      message: ReplicaSet "immatriculation-backend-6494c5d444" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"mandat-backend","type":"backend"},"name":"mandat-backend","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"mandat-backend","type":"backend"}},"strategy":{"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"mandat-backend","type":"backend"}},"spec":{"containers":[{"env":[{"name":"ORACLEHOSTMANDAT","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-host-mandat","name":"oracle-config-mandat"}}},{"name":"ORACLEPORTMANDAT","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-port-mandat","name":"oracle-config-mandat"}}},{"name":"ORACLEUSERMANDAT","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-user-mandat","name":"oracle-config-mandat"}}},{"name":"ORACLEPASSWORDMANDAT","valueFrom":{"secretKeyRef":{"key":"password","name":"oracle-instance-password-mandat"}}},{"name":"ORACLEHOSTCOMPTA","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-host-comptabilite","name":"oracle-config-comptabilite"}}},{"name":"ORACLEPORTCOMPTA","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-port-comptabilite","name":"oracle-config-comptabilite"}}},{"name":"ORACLEUSERCOMPTA","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-user-comptabilite","name":"oracle-config-comptabilite"}}},{"name":"ORACLEPASSWORDCOMPTA","valueFrom":{"secretKeyRef":{"key":"password","name":"oracle-instance-password-comptabilite"}}},{"name":"ORACLEHOSTPG","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-host-pg","name":"oracle-config-pg"}}},{"name":"ORACLEPORTPG","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-port-pg","name":"oracle-config-pg"}}},{"name":"ORACLEUSERPG","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-user-pg","name":"oracle-config-pg"}}},{"name":"ORACLEPASSWORDPG","valueFrom":{"secretKeyRef":{"key":"password","name":"oracle-instance-password-pg"}}},{"name":"ORACLEHOSTTRACACTION","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-host-tracaction","name":"oracle-config-tracaction"}}},{"name":"ORACLEPORTTRACACTION","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-port-tracaction","name":"oracle-config-tracaction"}}},{"name":"ORACLEUSERTRACACTION","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-user-tracaction","name":"oracle-config-tracaction"}}},{"name":"ORACLEPASSWORDTRACACTION","valueFrom":{"secretKeyRef":{"key":"password","name":"oracle-instance-password-tracaction"}}}],"image":"192.168.2.225:5000/mandat:0.0.1-SNAPSHOT","imagePullPolicy":"Always","name":"mandat-backend","ports":[{"containerPort":8099,"name":"api","protocol":"TCP"}],"resources":{"limits":{"cpu":"2","memory":"1Gi"},"requests":{"cpu":"100m","memory":"128Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN","NET_RAW"]}}}],"imagePullSecrets":[{"name":"regcred"}]}}}}
    creationTimestamp: "2025-06-24T22:45:51Z"
    generation: 1
    labels:
      app: mandat-backend
      type: backend
    name: mandat-backend
    namespace: default
    resourceVersion: "763498"
    uid: fa534498-668b-445c-af99-704348906fe0
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: mandat-backend
        type: backend
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: mandat-backend
          type: backend
      spec:
        containers:
        - env:
          - name: ORACLEHOSTMANDAT
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-mandat
                name: oracle-config-mandat
          - name: ORACLEPORTMANDAT
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-mandat
                name: oracle-config-mandat
          - name: ORACLEUSERMANDAT
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-mandat
                name: oracle-config-mandat
          - name: ORACLEPASSWORDMANDAT
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-mandat
          - name: ORACLEHOSTCOMPTA
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-comptabilite
                name: oracle-config-comptabilite
          - name: ORACLEPORTCOMPTA
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-comptabilite
                name: oracle-config-comptabilite
          - name: ORACLEUSERCOMPTA
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-comptabilite
                name: oracle-config-comptabilite
          - name: ORACLEPASSWORDCOMPTA
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-comptabilite
          - name: ORACLEHOSTPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-pg
                name: oracle-config-pg
          - name: ORACLEPORTPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-pg
                name: oracle-config-pg
          - name: ORACLEUSERPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-pg
                name: oracle-config-pg
          - name: ORACLEPASSWORDPG
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-pg
          - name: ORACLEHOSTTRACACTION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-tracaction
                name: oracle-config-tracaction
          - name: ORACLEPORTTRACACTION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-tracaction
                name: oracle-config-tracaction
          - name: ORACLEUSERTRACACTION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-tracaction
                name: oracle-config-tracaction
          - name: ORACLEPASSWORDTRACACTION
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-tracaction
          image: 192.168.2.225:5000/mandat:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          name: mandat-backend
          ports:
          - containerPort: 8099
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-24T22:45:51Z"
      lastUpdateTime: "2025-06-24T22:45:52Z"
      message: ReplicaSet "mandat-backend-5fcb7c7866" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-06-24T23:10:35Z"
      lastUpdateTime: "2025-06-24T23:10:35Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"paramglob-backend","type":"backend"},"name":"paramglob-back-deployment","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"paramglob-backend","type":"backend"}},"strategy":{"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"paramglob-backend","type":"backend"}},"spec":{"containers":[{"env":[{"name":"ORACLEHOST","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-host-pg","name":"oracle-config-pg"}}},{"name":"ORACLEPORT","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-port-pg","name":"oracle-config-pg"}}},{"name":"ORACLEUSER","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-user-pg","name":"oracle-config-pg"}}},{"name":"ORACLEPASSWORD","valueFrom":{"secretKeyRef":{"key":"password","name":"oracle-instance-password-pg"}}}],"image":"192.168.2.225:5000/parametrageglobal:0.0.1-SNAPSHOT","imagePullPolicy":"Always","name":"paramglob-backend","ports":[{"containerPort":1995,"name":"api","protocol":"TCP"}],"resources":{"limits":{"cpu":"3","memory":"2Gi"},"requests":{"cpu":"300m","memory":"512Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN","NET_RAW"]}}}],"imagePullSecrets":[{"name":"regcred"}],"nodeSelector":{"kubernetes.io/hostname":"worker1erpnode"}}}}}
    creationTimestamp: "2025-06-24T17:19:43Z"
    generation: 1
    labels:
      app: paramglob-backend
      type: backend
    name: paramglob-back-deployment
    namespace: default
    resourceVersion: "864560"
    uid: f8404d1c-03fd-4094-a90f-27dd9b4d2a31
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: paramglob-backend
        type: backend
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: paramglob-backend
          type: backend
      spec:
        containers:
        - env:
          - name: ORACLEHOST
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-pg
                name: oracle-config-pg
          - name: ORACLEPORT
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-pg
                name: oracle-config-pg
          - name: ORACLEUSER
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-pg
                name: oracle-config-pg
          - name: ORACLEPASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-pg
          image: 192.168.2.225:5000/parametrageglobal:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          name: paramglob-backend
          ports:
          - containerPort: 1995
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "3"
              memory: 2Gi
            requests:
              cpu: 300m
              memory: 512Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker1erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-24T17:19:43Z"
      lastUpdateTime: "2025-06-24T17:19:44Z"
      message: ReplicaSet "paramglob-back-deployment-66848d9897" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-06-25T17:40:47Z"
      lastUpdateTime: "2025-06-25T17:40:47Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"pp-backend","type":"backend"},"name":"pp-backend","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"pp-backend","type":"backend"}},"strategy":{"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"pp-backend","type":"backend"}},"spec":{"containers":[{"env":[{"name":"ORACLEHOSTPP","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-host-pp","name":"oracle-config-pp"}}},{"name":"ORACLEPORTPP","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-port-pp","name":"oracle-config-pp"}}},{"name":"ORACLEUSERPP","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-user-pp","name":"oracle-config-pp"}}},{"name":"ORACLEPASSWORDPP","valueFrom":{"secretKeyRef":{"key":"password","name":"oracle-instance-password-pp"}}},{"name":"ORACLEHOSTTRACACTION","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-host-tracaction","name":"oracle-config-tracaction"}}},{"name":"ORACLEPORTTRACACTION","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-port-tracaction","name":"oracle-config-tracaction"}}},{"name":"ORACLEUSERTRACACTION","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-user-tracaction","name":"oracle-config-tracaction"}}},{"name":"ORACLEPASSWORDTRACACTION","valueFrom":{"secretKeyRef":{"key":"password","name":"oracle-instance-password-tracaction"}}}],"image":"192.168.2.225:5000/paiementprestation:0.0.1-SNAPSHOT","imagePullPolicy":"Always","name":"pp-backend","ports":[{"containerPort":8086,"name":"api","protocol":"TCP"}],"resources":{"limits":{"cpu":"2","memory":"1Gi"},"requests":{"cpu":"100m","memory":"128Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN","NET_RAW"]}}}],"imagePullSecrets":[{"name":"regcred"}],"nodeSelector":{"kubernetes.io/hostname":"worker1erpnode"}}}}}
    creationTimestamp: "2025-06-25T13:32:48Z"
    generation: 1
    labels:
      app: pp-backend
      type: backend
    name: pp-backend
    namespace: default
    resourceVersion: "841539"
    uid: 97e7914a-8300-4387-9843-b62e106fe646
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: pp-backend
        type: backend
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: pp-backend
          type: backend
      spec:
        containers:
        - env:
          - name: ORACLEHOSTPP
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-pp
                name: oracle-config-pp
          - name: ORACLEPORTPP
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-pp
                name: oracle-config-pp
          - name: ORACLEUSERPP
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-pp
                name: oracle-config-pp
          - name: ORACLEPASSWORDPP
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-pp
          - name: ORACLEHOSTTRACACTION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-tracaction
                name: oracle-config-tracaction
          - name: ORACLEPORTTRACACTION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-tracaction
                name: oracle-config-tracaction
          - name: ORACLEUSERTRACACTION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-tracaction
                name: oracle-config-tracaction
          - name: ORACLEPASSWORDTRACACTION
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-tracaction
          image: 192.168.2.225:5000/paiementprestation:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          name: pp-backend
          ports:
          - containerPort: 8086
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker1erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-25T13:32:51Z"
      lastUpdateTime: "2025-06-25T13:32:51Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-06-25T13:32:48Z"
      lastUpdateTime: "2025-06-25T13:32:51Z"
      message: ReplicaSet "pp-backend-bc489546f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"rec-backend","type":"backend"},"name":"rec-backend","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"rec-backend","type":"backend"}},"strategy":{"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"rec-backend","type":"backend"}},"spec":{"containers":[{"env":[{"name":"ORACLEHOSTREC","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-host-rec","name":"oracle-config-rec"}}},{"name":"ORACLEPORTREC","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-port-rec","name":"oracle-config-rec"}}},{"name":"ORACLEUSERREC","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-user-rec","name":"oracle-config-rec"}}},{"name":"ORACLEPASSWORDREC","valueFrom":{"secretKeyRef":{"key":"password","name":"oracle-instance-password-rec"}}},{"name":"ORACLEHOSTPG","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-host-pg","name":"oracle-config-pg"}}},{"name":"ORACLEPORTPG","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-port-pg","name":"oracle-config-pg"}}},{"name":"ORACLEUSERPG","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-user-pg","name":"oracle-config-pg"}}},{"name":"ORACLEPASSWORDPG","valueFrom":{"secretKeyRef":{"key":"password","name":"oracle-instance-password-pg"}}}],"image":"192.168.2.225:5000/recrutement:0.0.1-SNAPSHOT","imagePullPolicy":"Always","name":"rec-backend","ports":[{"containerPort":9098,"name":"api","protocol":"TCP"}],"resources":{"limits":{"cpu":"2","memory":"1Gi"},"requests":{"cpu":"100m","memory":"128Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN","NET_RAW"]}}}],"imagePullSecrets":[{"name":"regcred"}],"nodeSelector":{"kubernetes.io/hostname":"worker1erpnode"}}}}}
    creationTimestamp: "2025-06-24T17:43:47Z"
    generation: 1
    labels:
      app: rec-backend
      type: backend
    name: rec-backend
    namespace: default
    resourceVersion: "866046"
    uid: ebf0c4fa-9f19-43b9-8981-0249047e241e
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: rec-backend
        type: backend
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: rec-backend
          type: backend
      spec:
        containers:
        - env:
          - name: ORACLEHOSTREC
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-rec
                name: oracle-config-rec
          - name: ORACLEPORTREC
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-rec
                name: oracle-config-rec
          - name: ORACLEUSERREC
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-rec
                name: oracle-config-rec
          - name: ORACLEPASSWORDREC
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-rec
          - name: ORACLEHOSTPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-pg
                name: oracle-config-pg
          - name: ORACLEPORTPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-pg
                name: oracle-config-pg
          - name: ORACLEUSERPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-pg
                name: oracle-config-pg
          - name: ORACLEPASSWORDPG
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-pg
          image: 192.168.2.225:5000/recrutement:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          name: rec-backend
          ports:
          - containerPort: 9098
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker1erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-24T17:43:47Z"
      lastUpdateTime: "2025-06-24T17:43:48Z"
      message: ReplicaSet "rec-backend-84969f554" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-06-25T17:56:56Z"
      lastUpdateTime: "2025-06-25T17:56:56Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"registry-backend","type":"backend"},"name":"registry-backend","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"registry-backend","type":"backend"}},"strategy":{"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"registry-backend","type":"backend"}},"spec":{"containers":[{"image":"192.168.2.225:5000/serveurdecouverte:0.0.1-SNAPSHOT","imagePullPolicy":"Always","name":"registry-backend","ports":[{"containerPort":8761,"name":"api","protocol":"TCP"}],"resources":{"limits":{"cpu":"2","memory":"1Gi"},"requests":{"cpu":"300m","memory":"256Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN","NET_RAW"]}}}],"imagePullSecrets":[{"name":"regcred"}]}}}}
    creationTimestamp: "2025-06-24T17:17:41Z"
    generation: 1
    labels:
      app: registry-backend
      type: backend
    name: registry-backend
    namespace: default
    resourceVersion: "730066"
    uid: d1496ac6-34da-4493-986c-65517317262a
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: registry-backend
        type: backend
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: registry-backend
          type: backend
      spec:
        containers:
        - image: 192.168.2.225:5000/serveurdecouverte:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          name: registry-backend
          ports:
          - containerPort: 8761
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 300m
              memory: 256Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-24T17:17:42Z"
      lastUpdateTime: "2025-06-24T17:17:42Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-06-24T17:17:41Z"
      lastUpdateTime: "2025-06-24T17:17:42Z"
      message: ReplicaSet "registry-backend-7db896c947" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"sirh-backend","type":"backend"},"name":"sirh-backend","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"sirh-backend","type":"backend"}},"strategy":{"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"sirh-backend","type":"backend"}},"spec":{"containers":[{"env":[{"name":"ORACLEHOSTSIRH","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-host-sirh","name":"oracle-config-sirh"}}},{"name":"ORACLEPORTSIRH","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-port-sirh","name":"oracle-config-sirh"}}},{"name":"ORACLEUSERSIRH","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-user-sirh","name":"oracle-config-sirh"}}},{"name":"ORACLEPASSWORDSIRH","valueFrom":{"secretKeyRef":{"key":"password","name":"oracle-instance-password-sirh"}}},{"name":"ORACLEHOSTPG","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-host-pg","name":"oracle-config-parametrageglobal"}}},{"name":"ORACLEPORTPG","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-port-pg","name":"oracle-config-parametrageglobal"}}},{"name":"ORACLEUSERPG","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-user-pg","name":"oracle-config-parametrageglobal"}}},{"name":"ORACLEPASSWORDPG","valueFrom":{"secretKeyRef":{"key":"password","name":"oracle-instance-password-paramglobal"}}}],"image":"192.168.2.225:5000/sirh:0.0.1-SNAPSHOT","imagePullPolicy":"Always","name":"sirh-backend","ports":[{"containerPort":9099,"name":"api","protocol":"TCP"}],"resources":{"limits":{"cpu":"2","memory":"1Gi"},"requests":{"cpu":"100m","memory":"128Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN","NET_RAW"]}}}],"imagePullSecrets":[{"name":"regcred"}],"nodeSelector":{"kubernetes.io/hostname":"worker1erpnode"}}}}}
    creationTimestamp: "2025-06-24T20:56:00Z"
    generation: 1
    labels:
      app: sirh-backend
      type: backend
    name: sirh-backend
    namespace: default
    resourceVersion: "764522"
    uid: 84286fa1-9477-41fc-beeb-5aad9f91ae4e
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: sirh-backend
        type: backend
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: sirh-backend
          type: backend
      spec:
        containers:
        - env:
          - name: ORACLEHOSTSIRH
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-sirh
                name: oracle-config-sirh
          - name: ORACLEPORTSIRH
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-sirh
                name: oracle-config-sirh
          - name: ORACLEUSERSIRH
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-sirh
                name: oracle-config-sirh
          - name: ORACLEPASSWORDSIRH
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-sirh
          - name: ORACLEHOSTPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-pg
                name: oracle-config-parametrageglobal
          - name: ORACLEPORTPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-pg
                name: oracle-config-parametrageglobal
          - name: ORACLEUSERPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-pg
                name: oracle-config-parametrageglobal
          - name: ORACLEPASSWORDPG
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-paramglobal
          image: 192.168.2.225:5000/sirh:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          name: sirh-backend
          ports:
          - containerPort: 9099
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker1erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-24T20:56:00Z"
      lastUpdateTime: "2025-06-24T20:56:01Z"
      message: ReplicaSet "sirh-backend-8d4c44f9" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-06-24T23:21:21Z"
      lastUpdateTime: "2025-06-24T23:21:21Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"sirh-front","type":"front"},"name":"sirh-front-deployment","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"sirh-front","type":"front"}},"strategy":{"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"sirh-front","type":"front"}},"spec":{"containers":[{"image":"192.168.2.225:5000/frontsirh:1","imagePullPolicy":"Always","name":"sirh-front","ports":[{"containerPort":80,"name":"api","protocol":"TCP"}],"resources":{"limits":{"cpu":"3","memory":"4Gi"},"requests":{"cpu":"300m","memory":"2046Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN","NET_RAW"]}}}],"imagePullSecrets":[{"name":"regcred"}],"nodeSelector":{"kubernetes.io/hostname":"worker2erpnode"}}}}}
    creationTimestamp: "2025-06-25T20:47:10Z"
    generation: 1
    labels:
      app: sirh-front
      type: front
    name: sirh-front-deployment
    namespace: default
    resourceVersion: "883365"
    uid: aab70f60-12f2-4c26-818d-1bf7b423bd80
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: sirh-front
        type: front
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: sirh-front
          type: front
      spec:
        containers:
        - image: 192.168.2.225:5000/frontsirh:1
          imagePullPolicy: Always
          name: sirh-front
          ports:
          - containerPort: 80
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "3"
              memory: 4Gi
            requests:
              cpu: 300m
              memory: 2046Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker2erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-25T20:47:10Z"
      lastUpdateTime: "2025-06-25T20:47:11Z"
      message: ReplicaSet "sirh-front-deployment-846fcfb76c" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-06-25T21:06:08Z"
      lastUpdateTime: "2025-06-25T21:06:08Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"tresorerie-backend","type":"backend"},"name":"tresorerie-backend","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"tresorerie-backend","type":"backend"}},"strategy":{"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"tresorerie-backend","type":"backend"}},"spec":{"containers":[{"env":[{"name":"ORACLEHOSTIMM","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-host-imm","name":"oracle-config-imm"}}},{"name":"ORACLEPORTIMM","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-port-imm","name":"oracle-config-imm"}}},{"name":"ORACLEUSERIMM","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-user-imm","name":"oracle-config-imm"}}},{"name":"ORACLEPASSWORDIMM","valueFrom":{"secretKeyRef":{"key":"password","name":"oracle-instance-password-imm"}}},{"name":"ORACLEHOSTPG","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-host-pg","name":"oracle-config-pg"}}},{"name":"ORACLEPORTPG","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-port-pg","name":"oracle-config-pg"}}},{"name":"ORACLEUSERPG","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-user-pg","name":"oracle-config-pg"}}},{"name":"ORACLEPASSWORDPG","valueFrom":{"secretKeyRef":{"key":"password","name":"oracle-instance-password-pg"}}},{"name":"ORACLEHOSTMANDAT","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-host-mandat","name":"oracle-config-mandat"}}},{"name":"ORACLEPORTMANDAT","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-port-mandat","name":"oracle-config-mandat"}}},{"name":"ORACLEUSERMANDAT","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-user-mandat","name":"oracle-config-mandat"}}},{"name":"ORACLEPASSWORDMANDAT","valueFrom":{"secretKeyRef":{"key":"password","name":"oracle-instance-password-mandat"}}},{"name":"ORACLEHOSTTRACACTION","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-host-tracaction","name":"oracle-config-tracaction"}}},{"name":"ORACLEPORTTRACACTION","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-port-tracaction","name":"oracle-config-tracaction"}}},{"name":"ORACLEUSERTRACACTION","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-user-tracaction","name":"oracle-config-tracaction"}}},{"name":"ORACLEPASSWORDTRACACTION","valueFrom":{"secretKeyRef":{"key":"password","name":"oracle-instance-password-tracaction"}}},{"name":"ORACLEHOSTCOMPTA","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-host-comptabilite","name":"oracle-config-comptabilite"}}},{"name":"ORACLEPORTCOMPTA","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-port-comptabilite","name":"oracle-config-comptabilite"}}},{"name":"ORACLEUSERCOMPTA","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-user-comptabilite","name":"oracle-config-comptabilite"}}},{"name":"ORACLEPASSWORDCOMPTA","valueFrom":{"secretKeyRef":{"key":"password","name":"oracle-instance-password-comptabilite"}}},{"name":"ORACLEHOSTCOTISATION","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-host-cotisation","name":"oracle-config-cotisation"}}},{"name":"ORACLEPORTCOTISATION","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-port-cotisation","name":"oracle-config-cotisation"}}},{"name":"ORACLEUSERCOTISATION","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-user-cotisation","name":"oracle-config-cotisation"}}},{"name":"ORACLEPASSWORDCOTISATION","valueFrom":{"secretKeyRef":{"key":"password","name":"oracle-instance-password-cotisation"}}},{"name":"ORACLEHOSTTRESORERIE","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-host-tresorerie","name":"oracle-config-tresorerie"}}},{"name":"ORACLEPORTTRESORERIE","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-port-tresorerie","name":"oracle-config-tresorerie"}}},{"name":"ORACLEUSERTRESORERIE","valueFrom":{"configMapKeyRef":{"key":"default.oracle-instance-user-tresorerie","name":"oracle-config-tresorerie"}}},{"name":"ORACLEPASSWORDTRESORERIE","valueFrom":{"secretKeyRef":{"key":"password","name":"oracle-instance-password-tresorerie"}}}],"image":"192.168.2.225:5000/tresorerie:0.0.1-SNAPSHOT","imagePullPolicy":"Always","name":"tresorerie-backend","ports":[{"containerPort":8094,"name":"api","protocol":"TCP"}],"resources":{"limits":{"cpu":"3","memory":"4Gi"},"requests":{"cpu":"200m","memory":"1024Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN","NET_RAW"]}}}],"imagePullSecrets":[{"name":"regcred"}],"nodeSelector":{"kubernetes.io/hostname":"worker1erpnode"}}}}}
    creationTimestamp: "2025-06-24T20:40:52Z"
    generation: 1
    labels:
      app: tresorerie-backend
      type: backend
    name: tresorerie-backend
    namespace: default
    resourceVersion: "844666"
    uid: ba8017a3-624e-45d7-8b94-9ab0298d6437
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: tresorerie-backend
        type: backend
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: tresorerie-backend
          type: backend
      spec:
        containers:
        - env:
          - name: ORACLEHOSTIMM
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-imm
                name: oracle-config-imm
          - name: ORACLEPORTIMM
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-imm
                name: oracle-config-imm
          - name: ORACLEUSERIMM
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-imm
                name: oracle-config-imm
          - name: ORACLEPASSWORDIMM
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-imm
          - name: ORACLEHOSTPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-pg
                name: oracle-config-pg
          - name: ORACLEPORTPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-pg
                name: oracle-config-pg
          - name: ORACLEUSERPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-pg
                name: oracle-config-pg
          - name: ORACLEPASSWORDPG
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-pg
          - name: ORACLEHOSTMANDAT
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-mandat
                name: oracle-config-mandat
          - name: ORACLEPORTMANDAT
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-mandat
                name: oracle-config-mandat
          - name: ORACLEUSERMANDAT
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-mandat
                name: oracle-config-mandat
          - name: ORACLEPASSWORDMANDAT
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-mandat
          - name: ORACLEHOSTTRACACTION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-tracaction
                name: oracle-config-tracaction
          - name: ORACLEPORTTRACACTION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-tracaction
                name: oracle-config-tracaction
          - name: ORACLEUSERTRACACTION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-tracaction
                name: oracle-config-tracaction
          - name: ORACLEPASSWORDTRACACTION
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-tracaction
          - name: ORACLEHOSTCOMPTA
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-comptabilite
                name: oracle-config-comptabilite
          - name: ORACLEPORTCOMPTA
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-comptabilite
                name: oracle-config-comptabilite
          - name: ORACLEUSERCOMPTA
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-comptabilite
                name: oracle-config-comptabilite
          - name: ORACLEPASSWORDCOMPTA
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-comptabilite
          - name: ORACLEHOSTCOTISATION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-cotisation
                name: oracle-config-cotisation
          - name: ORACLEPORTCOTISATION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-cotisation
                name: oracle-config-cotisation
          - name: ORACLEUSERCOTISATION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-cotisation
                name: oracle-config-cotisation
          - name: ORACLEPASSWORDCOTISATION
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-cotisation
          - name: ORACLEHOSTTRESORERIE
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-tresorerie
                name: oracle-config-tresorerie
          - name: ORACLEPORTTRESORERIE
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-tresorerie
                name: oracle-config-tresorerie
          - name: ORACLEUSERTRESORERIE
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-tresorerie
                name: oracle-config-tresorerie
          - name: ORACLEPASSWORDTRESORERIE
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-tresorerie
          image: 192.168.2.225:5000/tresorerie:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          name: tresorerie-backend
          ports:
          - containerPort: 8094
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "3"
              memory: 4Gi
            requests:
              cpu: 200m
              memory: 1Gi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker1erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-24T20:40:52Z"
      lastUpdateTime: "2025-06-24T20:40:54Z"
      message: ReplicaSet "tresorerie-backend-5546878dfb" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-06-25T14:03:08Z"
      lastUpdateTime: "2025-06-25T14:03:08Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"kafka-broker"},"name":"kafka-broker","namespace":"kafka"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"kafka-broker"}},"template":{"metadata":{"labels":{"app":"kafka-broker"}},"spec":{"containers":[{"env":[{"name":"KAFKA_BROKER_ID","value":"1"},{"name":"KAFKA_ZOOKEEPER_CONNECT","value":"zookeeper-service:2181"},{"name":"KAFKA_LISTENERS","value":"PLAINTEXT://0.0.0.0:29092"},{"name":"KAFKA_ADVERTISED_LISTENERS","value":"PLAINTEXT://kafka-service.kafka:29092"}],"image":"192.168.2.225:5000/wurstmeister/kafka","imagePullPolicy":"IfNotPresent","name":"kafka-broker","ports":[{"containerPort":29092}]}]}}}}
    creationTimestamp: "2025-06-24T23:07:27Z"
    generation: 1
    labels:
      app: kafka-broker
    name: kafka-broker
    namespace: kafka
    resourceVersion: "763167"
    uid: 0d78fa01-af6b-43f7-8501-22dbad0f7889
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: kafka-broker
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: kafka-broker
      spec:
        containers:
        - env:
          - name: KAFKA_BROKER_ID
            value: "1"
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: zookeeper-service:2181
          - name: KAFKA_LISTENERS
            value: PLAINTEXT://0.0.0.0:29092
          - name: KAFKA_ADVERTISED_LISTENERS
            value: PLAINTEXT://kafka-service.kafka:29092
          image: 192.168.2.225:5000/wurstmeister/kafka
          imagePullPolicy: IfNotPresent
          name: kafka-broker
          ports:
          - containerPort: 29092
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-24T23:07:28Z"
      lastUpdateTime: "2025-06-24T23:07:28Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-06-24T23:07:27Z"
      lastUpdateTime: "2025-06-24T23:07:28Z"
      message: ReplicaSet "kafka-broker-79c9658c46" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"zookeeper"},"name":"zookeeper","namespace":"kafka"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"zookeeper"}},"template":{"metadata":{"labels":{"app":"zookeeper"}},"spec":{"containers":[{"image":"192.168.2.225:5000/wurstmeister/zookeeper","imagePullPolicy":"IfNotPresent","name":"zookeeper","ports":[{"containerPort":2181}]}]}}}}
    creationTimestamp: "2025-06-22T11:53:48Z"
    generation: 1
    labels:
      app: zookeeper
    name: zookeeper
    namespace: kafka
    resourceVersion: "334532"
    uid: 60f1ee05-b04c-4d86-a6ad-fd4e39fa4735
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: zookeeper
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: zookeeper
      spec:
        containers:
        - image: 192.168.2.225:5000/wurstmeister/zookeeper
          imagePullPolicy: IfNotPresent
          name: zookeeper
          ports:
          - containerPort: 2181
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-22T11:53:48Z"
      lastUpdateTime: "2025-06-22T11:53:48Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-06-22T11:53:48Z"
      lastUpdateTime: "2025-06-22T11:53:48Z"
      message: ReplicaSet "zookeeper-84654f8f94" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-06-20T14:09:25Z"
    generation: 2
    labels:
      k8s-app: kube-dns
    name: coredns
    namespace: kube-system
    resourceVersion: "148862"
    uid: 282aef1c-87aa-4f83-9101-c79c6146a713
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-dns
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: registry.k8s.io/coredns/coredns:v1.11.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-06-21T10:53:45Z"
      lastUpdateTime: "2025-06-21T10:53:45Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-06-20T14:29:19Z"
      lastUpdateTime: "2025-06-21T10:54:53Z"
      message: ReplicaSet "coredns-55cb58b774" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"metallb","component":"controller"},"name":"controller","namespace":"metallb-system"},"spec":{"revisionHistoryLimit":3,"selector":{"matchLabels":{"app":"metallb","component":"controller"}},"template":{"metadata":{"annotations":{"prometheus.io/port":"7472","prometheus.io/scrape":"true"},"labels":{"app":"metallb","component":"controller"}},"spec":{"containers":[{"args":["--port=7472","--log-level=info","--tls-min-version=VersionTLS12"],"env":[{"name":"METALLB_ML_SECRET_NAME","value":"memberlist"},{"name":"METALLB_DEPLOYMENT","value":"controller"}],"image":"quay.io/metallb/controller:v0.14.8","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/metrics","port":"monitoring"},"initialDelaySeconds":10,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1},"name":"controller","ports":[{"containerPort":7472,"name":"monitoring"},{"containerPort":9443,"name":"webhook-server","protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/metrics","port":"monitoring"},"initialDelaySeconds":10,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]},"readOnlyRootFilesystem":true},"volumeMounts":[{"mountPath":"/tmp/k8s-webhook-server/serving-certs","name":"cert","readOnly":true}]}],"nodeSelector":{"kubernetes.io/os":"linux"},"securityContext":{"fsGroup":65534,"runAsNonRoot":true,"runAsUser":65534},"serviceAccountName":"controller","terminationGracePeriodSeconds":0,"volumes":[{"name":"cert","secret":{"defaultMode":420,"secretName":"metallb-webhook-cert"}}]}}}}
    creationTimestamp: "2025-06-21T12:37:25Z"
    generation: 1
    labels:
      app: metallb
      component: controller
    name: controller
    namespace: metallb-system
    resourceVersion: "161616"
    uid: 940d6a73-be2b-4479-9f91-fc56643dece3
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 3
    selector:
      matchLabels:
        app: metallb
        component: controller
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          prometheus.io/port: "7472"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: metallb
          component: controller
      spec:
        containers:
        - args:
          - --port=7472
          - --log-level=info
          - --tls-min-version=VersionTLS12
          env:
          - name: METALLB_ML_SECRET_NAME
            value: memberlist
          - name: METALLB_DEPLOYMENT
            value: controller
          image: quay.io/metallb/controller:v0.14.8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /metrics
              port: monitoring
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: controller
          ports:
          - containerPort: 7472
            name: monitoring
            protocol: TCP
          - containerPort: 9443
            name: webhook-server
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /metrics
              port: monitoring
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/k8s-webhook-server/serving-certs
            name: cert
            readOnly: true
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
        serviceAccount: controller
        serviceAccountName: controller
        terminationGracePeriodSeconds: 0
        volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: metallb-webhook-cert
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-21T12:37:46Z"
      lastUpdateTime: "2025-06-21T12:37:46Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-06-21T12:37:25Z"
      lastUpdateTime: "2025-06-21T12:37:46Z"
      message: ReplicaSet "controller-6dd967fdc7" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-24T17:19:08Z"
    generation: 1
    labels:
      app: admin-backend
      pod-template-hash: 684d8bc6c6
      type: backend
    name: admin-backend-684d8bc6c6
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: admin-backend
      uid: e4628333-4c64-4c27-b01d-ffd3ce8a3a78
    resourceVersion: "730246"
    uid: 12e34870-c593-449c-828a-ba72504e1f2b
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: admin-backend
        pod-template-hash: 684d8bc6c6
        type: backend
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: admin-backend
          pod-template-hash: 684d8bc6c6
          type: backend
      spec:
        containers:
        - env:
          - name: ORACLEHOSTADMIN
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-admin
                name: oracle-config-admin
          - name: ORACLEPORTADMIN
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-admin
                name: oracle-config-admin
          - name: ORACLEUSERADMIN
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-admin
                name: oracle-config-admin
          - name: ORACLEPASSWORDADMIN
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-admin
          image: 192.168.2.225:5000/administration:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          name: admin-backend
          ports:
          - containerPort: 1994
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "3"
              memory: 2Gi
            requests:
              cpu: 300m
              memory: 512Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker1erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-24T18:50:13Z"
    generation: 1
    labels:
      app: admin-front
      pod-template-hash: 559f78795b
      type: front
    name: admin-front-559f78795b
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: admin-front
      uid: 4358b8e2-7583-4efc-bbe7-11c8092e8417
    resourceVersion: "738915"
    uid: 375a46c3-2453-4375-a505-41893e081391
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: admin-front
        pod-template-hash: 559f78795b
        type: front
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: admin-front
          pod-template-hash: 559f78795b
          type: front
      spec:
        containers:
        - image: 192.168.2.225:5000/frontadmin:2
          imagePullPolicy: Always
          name: admin-front
          ports:
          - containerPort: 80
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "5"
              memory: 3Gi
            requests:
              cpu: 400m
              memory: 700Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker2erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-24T20:38:14Z"
    generation: 1
    labels:
      app: asi-backend
      pod-template-hash: cfd448788
      type: backend
    name: asi-backend-cfd448788
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: asi-backend
      uid: cc0fe031-1efe-4b4c-b5ae-2054e236526e
    resourceVersion: "880354"
    uid: cd98fc96-10f4-405d-9d32-589907959b0a
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: asi-backend
        pod-template-hash: cfd448788
        type: backend
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: asi-backend
          pod-template-hash: cfd448788
          type: backend
      spec:
        containers:
        - env:
          - name: ORACLEHOSTASI
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-asi
                name: oracle-config-asi
          - name: ORACLEPORTASI
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-asi
                name: oracle-config-asi
          - name: ORACLEUSERASI
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-asi
                name: oracle-config-asi
          - name: ORACLEPASSWORDASI
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-asi
          - name: ORACLEHOSTPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-pg
                name: oracle-config-parametrageglobal
          - name: ORACLEPORTPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-pg
                name: oracle-config-parametrageglobal
          - name: ORACLEUSERPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-pg
                name: oracle-config-parametrageglobal
          - name: ORACLEPASSWORDPG
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-paramglobal
          image: 192.168.2.225:5000/asi:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          name: asi-backend
          ports:
          - containerPort: 19099
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 4Gi
            requests:
              cpu: 200m
              memory: 512Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker1erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-23T16:05:23Z"
    generation: 1
    labels:
      app: asi-front
      pod-template-hash: 7f75c67b49
      type: front
    name: asi-front-deployment-7f75c67b49
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: asi-front-deployment
      uid: 65ee0eab-4e8f-44f8-9d35-335b8bc170ba
    resourceVersion: "880287"
    uid: b5eeeb36-f5f2-440b-b3c1-b55a40f595b9
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: asi-front
        pod-template-hash: 7f75c67b49
        type: front
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: asi-front
          pod-template-hash: 7f75c67b49
          type: front
      spec:
        containers:
        - image: 192.168.2.225:5000/frontasi:1
          imagePullPolicy: Always
          name: asi-front
          ports:
          - containerPort: 80
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 3Gi
            requests:
              cpu: 300m
              memory: 1Gi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker2erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-24T18:03:26Z"
    generation: 1
    labels:
      app: budget-backend
      pod-template-hash: 6c7c7fbc67
      type: backend
    name: budget-backend-6c7c7fbc67
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: budget-backend
      uid: 9c79f46f-bf32-4f0c-acb9-0218fa6d3b70
    resourceVersion: "734390"
    uid: 2ef2f1a4-f19c-4e5d-b2cd-4abad68711b3
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: budget-backend
        pod-template-hash: 6c7c7fbc67
        type: backend
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: budget-backend
          pod-template-hash: 6c7c7fbc67
          type: backend
      spec:
        containers:
        - env:
          - name: ORACLEHOSTBUDGET
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-budget
                name: oracle-config-budget
          - name: ORACLEPORTBUDGET
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-budget
                name: oracle-config-budget
          - name: ORACLEUSERBUDGET
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-budget
                name: oracle-config-budget
          - name: ORACLEPASSWORDBUDGET
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-budget
          - name: ORACLEHOSTPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-pg
                name: oracle-config-pg
          - name: ORACLEPORTPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-pg
                name: oracle-config-pg
          - name: ORACLEUSERPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-pg
                name: oracle-config-pg
          - name: ORACLEPASSWORDPG
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-pg
          image: 192.168.2.225:5000/budget:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          name: budget-backend
          ports:
          - containerPort: 9097
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 256Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker1erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-24T18:39:57Z"
    generation: 1
    labels:
      app: budget-front
      pod-template-hash: 74cf679df6
      type: front
    name: budget-front-deployment-74cf679df6
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: budget-front-deployment
      uid: cfd95c72-67d3-4b38-8c65-dbeb3b6bc440
    resourceVersion: "737888"
    uid: c3cc1d0c-3bc4-4033-a584-6cedb96534e3
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: budget-front
        pod-template-hash: 74cf679df6
        type: front
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: budget-front
          pod-template-hash: 74cf679df6
          type: front
      spec:
        containers:
        - image: 192.168.2.225:5000/frontbudget:2
          imagePullPolicy: Always
          name: budget-front
          ports:
          - containerPort: 80
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 3Gi
            requests:
              cpu: 300m
              memory: 1Gi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker2erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-25T09:33:12Z"
    generation: 1
    labels:
      app: comptabilite-backend
      pod-template-hash: 58964b6fbc
      type: backend
    name: comptabilite-backend-58964b6fbc
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: comptabilite-backend
      uid: 79b0925e-b686-45c9-a6fd-72f1add31a45
    resourceVersion: "822478"
    uid: 2c3231f9-c5a7-4ceb-90ef-607f4b6aa33a
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: comptabilite-backend
        pod-template-hash: 58964b6fbc
        type: backend
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: comptabilite-backend
          pod-template-hash: 58964b6fbc
          type: backend
      spec:
        containers:
        - env:
          - name: ORACLEHOSTCOMPTA
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-comptabilite
                name: oracle-config-comptabilite
          - name: ORACLEPORTCOMPTA
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-comptabilite
                name: oracle-config-comptabilite
          - name: ORACLEUSERCOMPTA
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-comptabilite
                name: oracle-config-comptabilite
          - name: ORACLEPASSWORDCOMPTA
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-comptabilite
          - name: ORACLEHOSTPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-pg
                name: oracle-config-pg
          - name: ORACLEPORTPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-pg
                name: oracle-config-pg
          - name: ORACLEUSERPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-pg
                name: oracle-config-pg
          - name: ORACLEPASSWORDPG
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-pg
          - name: ORACLEHOSTIMM
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-imm
                name: oracle-config-imm
          - name: ORACLEPORTIMM
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-imm
                name: oracle-config-imm
          - name: ORACLEUSERIMM
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-imm
                name: oracle-config-imm
          - name: ORACLEPASSWORDIMM
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-imm
          - name: ORACLEHOSTCOTISATION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-cotisation
                name: oracle-config-cotisation
          - name: ORACLEPORTCOTISATION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-cotisation
                name: oracle-config-cotisation
          - name: ORACLEUSERCOTISATION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-cotisation
                name: oracle-config-cotisation
          - name: ORACLEPASSWORDCOTISATION
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-cotisation
          - name: ORACLEHOSTTRACACTION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-tracaction
                name: oracle-config-tracaction
          - name: ORACLEPORTTRACACTION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-tracaction
                name: oracle-config-tracaction
          - name: ORACLEUSERTRACACTION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-tracaction
                name: oracle-config-tracaction
          - name: ORACLEPASSWORDTRACACTION
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-tracaction
          image: 192.168.2.225:5000/comptabilite:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          name: comptabilite-backend
          ports:
          - containerPort: 8093
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "4"
              memory: 2Gi
            requests:
              cpu: 200m
              memory: 256Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker1erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-24T20:31:18Z"
    generation: 1
    labels:
      app: cotisation-backend
      pod-template-hash: 76c5c9d5f8
      type: backend
    name: cotisation-backend-76c5c9d5f8
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: cotisation-backend
      uid: c95c90e7-3a0a-4c94-ae7d-ae9a1a730fcc
    resourceVersion: "748406"
    uid: 4cb20e46-e5ed-4385-8d22-3a11acf58ee3
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: cotisation-backend
        pod-template-hash: 76c5c9d5f8
        type: backend
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: cotisation-backend
          pod-template-hash: 76c5c9d5f8
          type: backend
      spec:
        containers:
        - env:
          - name: ORACLEHOSTIMM
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-imm
                name: oracle-config-imm
          - name: ORACLEPORTIMM
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-imm
                name: oracle-config-imm
          - name: ORACLEUSERIMM
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-imm
                name: oracle-config-imm
          - name: ORACLEPASSWORDIMM
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-imm
          - name: ORACLEHOSTCOTISATION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-cotisation
                name: oracle-config-cotisation
          - name: ORACLEPORTCOTISATION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-cotisation
                name: oracle-config-cotisation
          - name: ORACLEUSERCOTISATION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-cotisation
                name: oracle-config-cotisation
          - name: ORACLEHOSTTRESORERIE
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-tresorerie
                name: oracle-config-tresorerie
          - name: ORACLEPORTTRESORERIE
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-tresorerie
                name: oracle-config-tresorerie
          - name: ORACLEUSERTRESORERIE
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-tresorerie
                name: oracle-config-tresorerie
          - name: ORACLEPASSWORDTRESORERIE
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-tresorerie
          - name: ORACLEPASSWORDCOTISATION
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-cotisation
          image: 192.168.2.225:5000/cotisation:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          name: cotisation-backend
          ports:
          - containerPort: 8082
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker1erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-25T13:34:56Z"
    generation: 1
    labels:
      app: etatfinancier-backend
      pod-template-hash: "7684968867"
      type: backend
    name: etatfinancier-backend-7684968867
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: etatfinancier-backend
      uid: d32be8fb-8927-4b21-b81c-d052fcae0496
    resourceVersion: "841788"
    uid: a0be84f2-24b2-4e9a-9220-9e5ab85b09e3
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: etatfinancier-backend
        pod-template-hash: "7684968867"
        type: backend
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: etatfinancier-backend
          pod-template-hash: "7684968867"
          type: backend
      spec:
        containers:
        - env:
          - name: ORACLEHOSTETATFINANCIER
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-etatfinancier
                name: oracle-config-etatfinancier
          - name: ORACLEPORTETATFINANCIER
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-etatfinancier
                name: oracle-config-etatfinancier
          - name: ORACLEUSERETATFINANCIER
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-etatfinancier
                name: oracle-config-etatfinancier
          - name: ORACLEPASSWORDETATFINANCIER
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-etatfinancier
          image: 192.168.2.225:5000/etatfinancier:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          name: etatfinancier-backend
          ports:
          - containerPort: 1999
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 512Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker1erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-24T19:42:37Z"
    generation: 1
    labels:
      app: fo-backend
      pod-template-hash: 8476c5b957
      type: backend
    name: fo-backend-8476c5b957
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: fo-backend
      uid: 2a765c4a-47b2-4d89-8694-e4c0044147fd
    resourceVersion: "877012"
    uid: f987c843-77f8-463e-87ec-0ca4f86728d2
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: fo-backend
        pod-template-hash: 8476c5b957
        type: backend
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: fo-backend
          pod-template-hash: 8476c5b957
          type: backend
      spec:
        containers:
        - env:
          - name: ORACLEHOSTFO
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-fo
                name: oracle-config-fo
          - name: ORACLEPORTFO
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-fo
                name: oracle-config-fo
          - name: ORACLEUSERFO
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-fo
                name: oracle-config-fo
          - name: ORACLEPASSWORDFO
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-fo
          - name: ORACLEHOST
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-pg
                name: oracle-config-pg
          - name: ORACLEPORT
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-pg
                name: oracle-config-pg
          - name: ORACLEUSER
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-pg
                name: oracle-config-pg
          - name: ORACLEPASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-pg
          - name: ORACLEHOSTTRACACTION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-tracaction
                name: oracle-config-tracaction
          - name: ORACLEPORTTRACACTION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-tracaction
                name: oracle-config-tracaction
          - name: ORACLEUSERTRACACTION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-tracaction
                name: oracle-config-tracaction
          - name: ORACLEPASSWORDTRACACTION
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-tracaction
          image: 192.168.2.225:5000/fontoffice:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          name: fo-backend
          ports:
          - containerPort: 8999
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 256Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker1erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-24T19:42:32Z"
    generation: 1
    labels:
      app: fo-front
      pod-template-hash: 5b75cbc844
      type: front
    name: fo-front-deployment-5b75cbc844
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: fo-front-deployment
      uid: cf02420d-bf1f-4de0-a652-45b74a527622
    resourceVersion: "743797"
    uid: b73c28b9-b8be-4f03-9710-7ae130763739
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: fo-front
        pod-template-hash: 5b75cbc844
        type: front
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: fo-front
          pod-template-hash: 5b75cbc844
          type: front
      spec:
        containers:
        - image: 192.168.2.225:5000/frontfrontoffice:1
          imagePullPolicy: Always
          name: fo-front
          ports:
          - containerPort: 80
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "3"
              memory: 4Gi
            requests:
              cpu: 300m
              memory: 2046Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker2erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-23T16:08:12Z"
    generation: 1
    labels:
      app: fp
      pod-template-hash: 7987c86d4f
      type: front
    name: fp-7987c86d4f
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: fp
      uid: d370b5f9-ab94-4363-8a4f-158a4b64ae19
    resourceVersion: "849145"
    uid: 11071006-f30e-4d5b-82ba-dbfcc9d54bca
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: fp
        pod-template-hash: 7987c86d4f
        type: front
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: fp
          pod-template-hash: 7987c86d4f
          type: front
      spec:
        containers:
        - image: 192.168.2.225:5000/frontprestation:1
          imagePullPolicy: Always
          name: fp
          ports:
          - containerPort: 80
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker2erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-24T20:34:59Z"
    generation: 1
    labels:
      app: front-finance
      pod-template-hash: cc6457784
      type: front
    name: front-finance-cc6457784
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: front-finance
      uid: 2b32cd35-f74d-41e0-b20c-53f5e286f7ab
    resourceVersion: "748801"
    uid: 2130181e-097f-4ffb-ad06-fa232c7692d6
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: front-finance
        pod-template-hash: cc6457784
        type: front
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: front-finance
          pod-template-hash: cc6457784
          type: front
      spec:
        containers:
        - image: 192.168.2.225:5000/frontfinance:2
          imagePullPolicy: Always
          name: front-finance
          ports:
          - containerPort: 80
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "3"
              memory: 3Gi
            requests:
              cpu: 300m
              memory: 2Gi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker2erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-25T09:30:56Z"
    generation: 1
    labels:
      app: front-tb
      pod-template-hash: dcd9fcf97
      type: front
    name: front-tb-dcd9fcf97
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: front-tb
      uid: a9dc39e5-7e45-4c30-a17a-b807799b4976
    resourceVersion: "819628"
    uid: 617ac733-2f4b-4296-808a-a388599492f9
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: front-tb
        pod-template-hash: dcd9fcf97
        type: front
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: front-tb
          pod-template-hash: dcd9fcf97
          type: front
      spec:
        containers:
        - image: 192.168.2.225:5000/fronttableaudebord:1
          imagePullPolicy: Always
          name: front-tb
          ports:
          - containerPort: 80
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: 4046m
              memory: 6120Mi
            requests:
              cpu: 1124m
              memory: 1152Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker2erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-24T17:18:33Z"
    generation: 1
    labels:
      app: gateway
      pod-template-hash: 7b9f4c767b
      type: backend
    name: gateway-7b9f4c767b
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: gateway
      uid: f2466454-338f-4436-843a-939b2fdf7490
    resourceVersion: "730166"
    uid: c1750b9a-2a83-4e60-9053-6ff304b2fa4d
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: gateway
        pod-template-hash: 7b9f4c767b
        type: backend
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: gateway
          pod-template-hash: 7b9f4c767b
          type: backend
      spec:
        containers:
        - image: 192.168.2.225:5000/gateway:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          name: gateway
          ports:
          - containerPort: 8888
            name: http
            protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker1erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-24T20:34:14Z"
    generation: 1
    labels:
      app: gira-backend
      pod-template-hash: 59d89b9474
      type: backend
    name: gira-backend-59d89b9474
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: gira-backend
      uid: 864efb7f-be7a-41a2-9c15-0815bb4c1752
    resourceVersion: "748700"
    uid: 2987b32d-7acb-43f1-ac6e-9c42a9f72334
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: gira-backend
        pod-template-hash: 59d89b9474
        type: backend
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: gira-backend
          pod-template-hash: 59d89b9474
          type: backend
      spec:
        containers:
        - env:
          - name: ORACLEHOSTGIRA
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-gira
                name: oracle-config-gira
          - name: ORACLEPORTGIRA
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-gira
                name: oracle-config-gira
          - name: ORACLEUSERGIRA
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-gira
                name: oracle-config-gira
          - name: ORACLEPASSWORDGIRA
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-gira
          - name: ORACLEHOSTPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-pg
                name: oracle-config-pg
          - name: ORACLEPORTPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-pg
                name: oracle-config-pg
          - name: ORACLEUSERPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-pg
                name: oracle-config-pg
          - name: ORACLEPASSWORDPG
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-pg
          image: 192.168.2.225:5000/gira:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          name: gira-backend
          ports:
          - containerPort: 8989
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker1erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-23T16:06:30Z"
    generation: 1
    labels:
      app: gira-front
      pod-template-hash: 6c46494f77
      type: front
    name: gira-front-deployment-6c46494f77
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: gira-front-deployment
      uid: 3f67a10d-c05e-4e6b-a494-cbdb73f5e7d7
    resourceVersion: "760430"
    uid: fbd5da77-a173-491a-8e2e-176a73f3ed32
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: gira-front
        pod-template-hash: 6c46494f77
        type: front
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: gira-front
          pod-template-hash: 6c46494f77
          type: front
      spec:
        containers:
        - image: 192.168.2.225:5000/frontgira:1
          imagePullPolicy: Always
          name: gira-front
          ports:
          - containerPort: 80
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 3Gi
            requests:
              cpu: 300m
              memory: 1Gi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker2erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-24T20:03:33Z"
    generation: 1
    labels:
      app: immatriculation-backend
      pod-template-hash: 6494c5d444
      type: backend
    name: immatriculation-backend-6494c5d444
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: immatriculation-backend
      uid: 53847c09-648b-417d-be7d-0ea971ddf4a4
    resourceVersion: "745741"
    uid: c5306575-b421-4c72-82fd-ee4d17c0576c
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: immatriculation-backend
        pod-template-hash: 6494c5d444
        type: backend
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: immatriculation-backend
          pod-template-hash: 6494c5d444
          type: backend
      spec:
        containers:
        - env:
          - name: ORACLEHOSTIMM
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-imm
                name: oracle-config-imm
          - name: ORACLEPORTIMM
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-imm
                name: oracle-config-imm
          - name: ORACLEUSERIMM
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-imm
                name: oracle-config-imm
          - name: ORACLEPASSWORDIMM
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-imm
          - name: ORACLEHOSTPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-pg
                name: oracle-config-parametrageglobal
          - name: ORACLEPORTPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-pg
                name: oracle-config-parametrageglobal
          - name: ORACLEUSERPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-pg
                name: oracle-config-parametrageglobal
          - name: ORACLEHOSTCOTISATION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-cotisation
                name: oracle-config-cotisation
          - name: ORACLEPORTCOTISATION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-cotisation
                name: oracle-config-cotisation
          - name: ORACLEUSERCOTISATION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-cotisation
                name: oracle-config-cotisation
          - name: ORACLEPASSWORDPG
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-paramglobal
          - name: ORACLEPASSWORDCOTISATION
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-cotisation
          image: 192.168.2.225:5000/immatriculation:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          name: immatriculation-backend
          ports:
          - containerPort: 1996
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "3"
              memory: 5Gi
            requests:
              cpu: 300m
              memory: 2046Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker1erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-24T22:45:51Z"
    generation: 1
    labels:
      app: mandat-backend
      pod-template-hash: 5fcb7c7866
      type: backend
    name: mandat-backend-5fcb7c7866
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: mandat-backend
      uid: fa534498-668b-445c-af99-704348906fe0
    resourceVersion: "763497"
    uid: f2e3a436-0138-458e-bb99-987776035f12
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: mandat-backend
        pod-template-hash: 5fcb7c7866
        type: backend
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: mandat-backend
          pod-template-hash: 5fcb7c7866
          type: backend
      spec:
        containers:
        - env:
          - name: ORACLEHOSTMANDAT
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-mandat
                name: oracle-config-mandat
          - name: ORACLEPORTMANDAT
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-mandat
                name: oracle-config-mandat
          - name: ORACLEUSERMANDAT
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-mandat
                name: oracle-config-mandat
          - name: ORACLEPASSWORDMANDAT
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-mandat
          - name: ORACLEHOSTCOMPTA
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-comptabilite
                name: oracle-config-comptabilite
          - name: ORACLEPORTCOMPTA
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-comptabilite
                name: oracle-config-comptabilite
          - name: ORACLEUSERCOMPTA
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-comptabilite
                name: oracle-config-comptabilite
          - name: ORACLEPASSWORDCOMPTA
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-comptabilite
          - name: ORACLEHOSTPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-pg
                name: oracle-config-pg
          - name: ORACLEPORTPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-pg
                name: oracle-config-pg
          - name: ORACLEUSERPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-pg
                name: oracle-config-pg
          - name: ORACLEPASSWORDPG
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-pg
          - name: ORACLEHOSTTRACACTION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-tracaction
                name: oracle-config-tracaction
          - name: ORACLEPORTTRACACTION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-tracaction
                name: oracle-config-tracaction
          - name: ORACLEUSERTRACACTION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-tracaction
                name: oracle-config-tracaction
          - name: ORACLEPASSWORDTRACACTION
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-tracaction
          image: 192.168.2.225:5000/mandat:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          name: mandat-backend
          ports:
          - containerPort: 8099
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-24T17:19:43Z"
    generation: 1
    labels:
      app: paramglob-backend
      pod-template-hash: 66848d9897
      type: backend
    name: paramglob-back-deployment-66848d9897
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: paramglob-back-deployment
      uid: f8404d1c-03fd-4094-a90f-27dd9b4d2a31
    resourceVersion: "864559"
    uid: af9916c6-5d15-4e12-a5e3-daccbd912782
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: paramglob-backend
        pod-template-hash: 66848d9897
        type: backend
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: paramglob-backend
          pod-template-hash: 66848d9897
          type: backend
      spec:
        containers:
        - env:
          - name: ORACLEHOST
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-pg
                name: oracle-config-pg
          - name: ORACLEPORT
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-pg
                name: oracle-config-pg
          - name: ORACLEUSER
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-pg
                name: oracle-config-pg
          - name: ORACLEPASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-pg
          image: 192.168.2.225:5000/parametrageglobal:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          name: paramglob-backend
          ports:
          - containerPort: 1995
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "3"
              memory: 2Gi
            requests:
              cpu: 300m
              memory: 512Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker1erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-25T13:32:48Z"
    generation: 1
    labels:
      app: pp-backend
      pod-template-hash: bc489546f
      type: backend
    name: pp-backend-bc489546f
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: pp-backend
      uid: 97e7914a-8300-4387-9843-b62e106fe646
    resourceVersion: "841538"
    uid: 55a2d9c7-f85e-40bd-9008-2834b0229fd9
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: pp-backend
        pod-template-hash: bc489546f
        type: backend
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: pp-backend
          pod-template-hash: bc489546f
          type: backend
      spec:
        containers:
        - env:
          - name: ORACLEHOSTPP
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-pp
                name: oracle-config-pp
          - name: ORACLEPORTPP
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-pp
                name: oracle-config-pp
          - name: ORACLEUSERPP
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-pp
                name: oracle-config-pp
          - name: ORACLEPASSWORDPP
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-pp
          - name: ORACLEHOSTTRACACTION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-tracaction
                name: oracle-config-tracaction
          - name: ORACLEPORTTRACACTION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-tracaction
                name: oracle-config-tracaction
          - name: ORACLEUSERTRACACTION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-tracaction
                name: oracle-config-tracaction
          - name: ORACLEPASSWORDTRACACTION
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-tracaction
          image: 192.168.2.225:5000/paiementprestation:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          name: pp-backend
          ports:
          - containerPort: 8086
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker1erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-24T17:43:47Z"
    generation: 1
    labels:
      app: rec-backend
      pod-template-hash: 84969f554
      type: backend
    name: rec-backend-84969f554
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: rec-backend
      uid: ebf0c4fa-9f19-43b9-8981-0249047e241e
    resourceVersion: "866045"
    uid: 92e1552b-7ba1-4bbc-930c-371dca78fc7c
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: rec-backend
        pod-template-hash: 84969f554
        type: backend
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: rec-backend
          pod-template-hash: 84969f554
          type: backend
      spec:
        containers:
        - env:
          - name: ORACLEHOSTREC
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-rec
                name: oracle-config-rec
          - name: ORACLEPORTREC
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-rec
                name: oracle-config-rec
          - name: ORACLEUSERREC
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-rec
                name: oracle-config-rec
          - name: ORACLEPASSWORDREC
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-rec
          - name: ORACLEHOSTPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-pg
                name: oracle-config-pg
          - name: ORACLEPORTPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-pg
                name: oracle-config-pg
          - name: ORACLEUSERPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-pg
                name: oracle-config-pg
          - name: ORACLEPASSWORDPG
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-pg
          image: 192.168.2.225:5000/recrutement:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          name: rec-backend
          ports:
          - containerPort: 9098
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker1erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-24T17:17:41Z"
    generation: 1
    labels:
      app: registry-backend
      pod-template-hash: 7db896c947
      type: backend
    name: registry-backend-7db896c947
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: registry-backend
      uid: d1496ac6-34da-4493-986c-65517317262a
    resourceVersion: "730065"
    uid: 24a9b749-0771-4175-bd17-354263b58e89
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: registry-backend
        pod-template-hash: 7db896c947
        type: backend
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: registry-backend
          pod-template-hash: 7db896c947
          type: backend
      spec:
        containers:
        - image: 192.168.2.225:5000/serveurdecouverte:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          name: registry-backend
          ports:
          - containerPort: 8761
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 300m
              memory: 256Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-24T20:56:00Z"
    generation: 1
    labels:
      app: sirh-backend
      pod-template-hash: 8d4c44f9
      type: backend
    name: sirh-backend-8d4c44f9
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: sirh-backend
      uid: 84286fa1-9477-41fc-beeb-5aad9f91ae4e
    resourceVersion: "764521"
    uid: e24c0837-ac2b-4b1c-b122-97486b6eef43
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: sirh-backend
        pod-template-hash: 8d4c44f9
        type: backend
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: sirh-backend
          pod-template-hash: 8d4c44f9
          type: backend
      spec:
        containers:
        - env:
          - name: ORACLEHOSTSIRH
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-sirh
                name: oracle-config-sirh
          - name: ORACLEPORTSIRH
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-sirh
                name: oracle-config-sirh
          - name: ORACLEUSERSIRH
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-sirh
                name: oracle-config-sirh
          - name: ORACLEPASSWORDSIRH
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-sirh
          - name: ORACLEHOSTPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-pg
                name: oracle-config-parametrageglobal
          - name: ORACLEPORTPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-pg
                name: oracle-config-parametrageglobal
          - name: ORACLEUSERPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-pg
                name: oracle-config-parametrageglobal
          - name: ORACLEPASSWORDPG
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-paramglobal
          image: 192.168.2.225:5000/sirh:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          name: sirh-backend
          ports:
          - containerPort: 9099
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker1erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-25T20:47:10Z"
    generation: 1
    labels:
      app: sirh-front
      pod-template-hash: 846fcfb76c
      type: front
    name: sirh-front-deployment-846fcfb76c
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: sirh-front-deployment
      uid: aab70f60-12f2-4c26-818d-1bf7b423bd80
    resourceVersion: "883364"
    uid: cea2898f-75b6-4def-a91d-ba998efde439
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: sirh-front
        pod-template-hash: 846fcfb76c
        type: front
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: sirh-front
          pod-template-hash: 846fcfb76c
          type: front
      spec:
        containers:
        - image: 192.168.2.225:5000/frontsirh:1
          imagePullPolicy: Always
          name: sirh-front
          ports:
          - containerPort: 80
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "3"
              memory: 4Gi
            requests:
              cpu: 300m
              memory: 2046Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker2erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-24T20:40:52Z"
    generation: 1
    labels:
      app: tresorerie-backend
      pod-template-hash: 5546878dfb
      type: backend
    name: tresorerie-backend-5546878dfb
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: tresorerie-backend
      uid: ba8017a3-624e-45d7-8b94-9ab0298d6437
    resourceVersion: "844665"
    uid: 08345f11-86e6-4ed2-a862-9afb02ee1f1d
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: tresorerie-backend
        pod-template-hash: 5546878dfb
        type: backend
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: tresorerie-backend
          pod-template-hash: 5546878dfb
          type: backend
      spec:
        containers:
        - env:
          - name: ORACLEHOSTIMM
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-imm
                name: oracle-config-imm
          - name: ORACLEPORTIMM
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-imm
                name: oracle-config-imm
          - name: ORACLEUSERIMM
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-imm
                name: oracle-config-imm
          - name: ORACLEPASSWORDIMM
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-imm
          - name: ORACLEHOSTPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-pg
                name: oracle-config-pg
          - name: ORACLEPORTPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-pg
                name: oracle-config-pg
          - name: ORACLEUSERPG
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-pg
                name: oracle-config-pg
          - name: ORACLEPASSWORDPG
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-pg
          - name: ORACLEHOSTMANDAT
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-mandat
                name: oracle-config-mandat
          - name: ORACLEPORTMANDAT
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-mandat
                name: oracle-config-mandat
          - name: ORACLEUSERMANDAT
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-mandat
                name: oracle-config-mandat
          - name: ORACLEPASSWORDMANDAT
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-mandat
          - name: ORACLEHOSTTRACACTION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-tracaction
                name: oracle-config-tracaction
          - name: ORACLEPORTTRACACTION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-tracaction
                name: oracle-config-tracaction
          - name: ORACLEUSERTRACACTION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-tracaction
                name: oracle-config-tracaction
          - name: ORACLEPASSWORDTRACACTION
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-tracaction
          - name: ORACLEHOSTCOMPTA
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-comptabilite
                name: oracle-config-comptabilite
          - name: ORACLEPORTCOMPTA
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-comptabilite
                name: oracle-config-comptabilite
          - name: ORACLEUSERCOMPTA
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-comptabilite
                name: oracle-config-comptabilite
          - name: ORACLEPASSWORDCOMPTA
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-comptabilite
          - name: ORACLEHOSTCOTISATION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-cotisation
                name: oracle-config-cotisation
          - name: ORACLEPORTCOTISATION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-cotisation
                name: oracle-config-cotisation
          - name: ORACLEUSERCOTISATION
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-cotisation
                name: oracle-config-cotisation
          - name: ORACLEPASSWORDCOTISATION
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-cotisation
          - name: ORACLEHOSTTRESORERIE
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-host-tresorerie
                name: oracle-config-tresorerie
          - name: ORACLEPORTTRESORERIE
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-port-tresorerie
                name: oracle-config-tresorerie
          - name: ORACLEUSERTRESORERIE
            valueFrom:
              configMapKeyRef:
                key: default.oracle-instance-user-tresorerie
                name: oracle-config-tresorerie
          - name: ORACLEPASSWORDTRESORERIE
            valueFrom:
              secretKeyRef:
                key: password
                name: oracle-instance-password-tresorerie
          image: 192.168.2.225:5000/tresorerie:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          name: tresorerie-backend
          ports:
          - containerPort: 8094
            name: api
            protocol: TCP
          resources:
            limits:
              cpu: "3"
              memory: 4Gi
            requests:
              cpu: 200m
              memory: 1Gi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        nodeSelector:
          kubernetes.io/hostname: worker1erpnode
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-24T23:07:27Z"
    generation: 1
    labels:
      app: kafka-broker
      pod-template-hash: 79c9658c46
    name: kafka-broker-79c9658c46
    namespace: kafka
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kafka-broker
      uid: 0d78fa01-af6b-43f7-8501-22dbad0f7889
    resourceVersion: "763166"
    uid: 509c553d-ade5-4b0a-87d7-6455d721dd99
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: kafka-broker
        pod-template-hash: 79c9658c46
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: kafka-broker
          pod-template-hash: 79c9658c46
      spec:
        containers:
        - env:
          - name: KAFKA_BROKER_ID
            value: "1"
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: zookeeper-service:2181
          - name: KAFKA_LISTENERS
            value: PLAINTEXT://0.0.0.0:29092
          - name: KAFKA_ADVERTISED_LISTENERS
            value: PLAINTEXT://kafka-service.kafka:29092
          image: 192.168.2.225:5000/wurstmeister/kafka
          imagePullPolicy: IfNotPresent
          name: kafka-broker
          ports:
          - containerPort: 29092
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-22T11:53:48Z"
    generation: 1
    labels:
      app: zookeeper
      pod-template-hash: 84654f8f94
    name: zookeeper-84654f8f94
    namespace: kafka
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: zookeeper
      uid: 60f1ee05-b04c-4d86-a6ad-fd4e39fa4735
    resourceVersion: "334531"
    uid: c0942076-c660-4dff-a353-bd860b2535aa
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: zookeeper
        pod-template-hash: 84654f8f94
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: zookeeper
          pod-template-hash: 84654f8f94
      spec:
        containers:
        - image: 192.168.2.225:5000/wurstmeister/zookeeper
          imagePullPolicy: IfNotPresent
          name: zookeeper
          ports:
          - containerPort: 2181
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-06-21T10:53:21Z"
    generation: 2
    labels:
      k8s-app: kube-dns
      pod-template-hash: 55cb58b774
    name: coredns-55cb58b774
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coredns
      uid: 282aef1c-87aa-4f83-9101-c79c6146a713
    resourceVersion: "148861"
    uid: cef6033e-ff18-4db5-a99f-eb0bb5920fc6
  spec:
    replicas: 2
    selector:
      matchLabels:
        k8s-app: kube-dns
        pod-template-hash: 55cb58b774
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          pod-template-hash: 55cb58b774
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: registry.k8s.io/coredns/coredns:v1.11.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-20T14:09:40Z"
    generation: 3
    labels:
      k8s-app: kube-dns
      pod-template-hash: 7db6d8ff4d
    name: coredns-7db6d8ff4d
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coredns
      uid: 282aef1c-87aa-4f83-9101-c79c6146a713
    resourceVersion: "148814"
    uid: 9345bec0-a280-49fe-965b-131c74d337ad
  spec:
    replicas: 0
    selector:
      matchLabels:
        k8s-app: kube-dns
        pod-template-hash: 7db6d8ff4d
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          pod-template-hash: 7db6d8ff4d
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: registry.k8s.io/coredns/coredns:v1.11.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-21T12:37:25Z"
    generation: 1
    labels:
      app: metallb
      component: controller
      pod-template-hash: 6dd967fdc7
    name: controller-6dd967fdc7
    namespace: metallb-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: controller
      uid: 940d6a73-be2b-4479-9f91-fc56643dece3
    resourceVersion: "161615"
    uid: 9832206d-e245-4ca3-9d96-8b32701901b9
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: metallb
        component: controller
        pod-template-hash: 6dd967fdc7
    template:
      metadata:
        annotations:
          prometheus.io/port: "7472"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: metallb
          component: controller
          pod-template-hash: 6dd967fdc7
      spec:
        containers:
        - args:
          - --port=7472
          - --log-level=info
          - --tls-min-version=VersionTLS12
          env:
          - name: METALLB_ML_SECRET_NAME
            value: memberlist
          - name: METALLB_DEPLOYMENT
            value: controller
          image: quay.io/metallb/controller:v0.14.8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /metrics
              port: monitoring
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: controller
          ports:
          - containerPort: 7472
            name: monitoring
            protocol: TCP
          - containerPort: 9443
            name: webhook-server
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /metrics
              port: monitoring
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/k8s-webhook-server/serving-certs
            name: cert
            readOnly: true
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
        serviceAccount: controller
        serviceAccountName: controller
        terminationGracePeriodSeconds: 0
        volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: metallb-webhook-cert
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
kind: List
metadata:
  resourceVersion: ""
